/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/{contract_id}/pos/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 部門一覧取得
         * @description 部門情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - categoryId：部門ID
         *     - categoryCode：部門コード
         *     - level：階層レベル
         *     - displaySequence：表示順
         *     - updDateTime：更新日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 部門コード */
                    category_code?: string;
                    /** @description 階層レベル */
                    level?: "1" | "2" | "3";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 部門登録
         * @description 部門情報を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryCreate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 部門取得
         * @description 部門情報を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description 部門ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * 部門削除
         * @description 部門情報を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 部門ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された部門IDが削除不可の場合
                 *     紐づく商品が存在する場合
                 *     親部門IDに指定されている場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定した部門データが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 部門更新
         * @description 部門情報を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 部門ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"];
                    };
                };
                /** @description 入力チェックエラーの場合
                 *     親部門IDに階層レベル3のものが指定された場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 部門IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/category_groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 部門グループ一覧取得
         * @description 部門グループの一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - categoryGroupId：部門グループID
         *     - displaySequence：表示順
         *     - updDateTime：更新日時：登録時・更新時の日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 部門グループID */
                    category_group_id?: string;
                    /** @description 部門グループコード */
                    category_group_code?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CategoryGroup"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 部門グループ登録
         * @description 部門グループを登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryGroupCreate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CategoryGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合
                 *     指定された部門グループコードが重複する場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/category_groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 部門グループ削除
         * @description 指定された部門グループを削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 部門グループID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された部門グループに紐付いている部門が存在する場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 部門グループ更新
         * @description 指定された部門グループを更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 部門グループID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryGroupUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CategoryGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合
                 *     指定された部門グループコードが重複する場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品一覧の取得
         * @description 商品の一覧を取得します。
         *     検索条件を指定することで、特定の商品のみを取得することも可能です。
         *
         */
        get: operations["getProducts"];
        put?: never;
        /**
         * 商品の新規登録
         * @description 商品を新規登録します。
         */
        post: operations["createProduct"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の取得
         * @description 指定したIDの商品情報を取得します。
         */
        get: operations["getProduct"];
        /**
         * 商品の更新
         * @description 指定したIDの商品情報を更新します。
         */
        put: operations["updateProduct"];
        post?: never;
        /**
         * 商品の削除
         * @description 指定したIDの商品を論理削除します。
         */
        delete: operations["deleteProduct"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * 商品の一括更新
         * @description 複数の商品を一括で更新します。
         *     一括更新では、1リクエストで最大100件まで処理することができます。
         *
         */
        put: operations["bulkUpdateProducts"];
        /**
         * 商品の一括登録
         * @description 複数の商品を一括で登録します。
         *     一括登録では、1リクエストで最大100件まで処理することができます。
         *
         */
        post: operations["bulkCreateProducts"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/prices": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の価格情報取得
         * @description 指定した商品IDの価格情報を取得します。
         */
        get: operations["getProductPrices"];
        /**
         * 商品の価格情報一括更新
         * @description 指定した商品IDの価格情報を一括で更新します。
         */
        put: operations["updateProductPrices"];
        /**
         * 商品の価格情報登録
         * @description 指定した商品IDに価格情報を登録します。
         */
        post: operations["createProductPrice"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/prices/changes": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の価格変更履歴取得
         * @description 指定した商品IDの価格変更履歴を取得します。
         */
        get: operations["getProductPriceChanges"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/reserve_items": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の予約項目取得
         * @description 指定した商品IDの予約項目情報を取得します。
         */
        get: operations["getProductReserveItems"];
        /**
         * 商品の予約項目一括更新
         * @description 指定した商品IDの予約項目情報を一括で更新します。
         */
        put: operations["updateProductReserveItems"];
        /**
         * 商品の予約項目登録
         * @description 指定した商品IDに予約項目情報を登録します。
         */
        post: operations["createProductReserveItem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/attributes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品属性一覧の取得
         * @description 登録されている商品属性の一覧を取得します。
         */
        get: operations["getProductAttributes"];
        put?: never;
        /**
         * 商品属性の新規登録
         * @description 商品属性を新規登録します。
         */
        post: operations["createProductAttribute"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/attribute_items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品属性項目一覧の取得
         * @description 登録されている商品属性項目の一覧を取得します。
         */
        get: operations["getProductAttributeItems"];
        put?: never;
        /**
         * 商品属性項目の新規登録
         * @description 商品属性項目を新規登録します。
         */
        post: operations["createProductAttributeItem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/stores": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の店舗関連情報取得
         * @description 指定した商品IDの店舗関連情報を取得します。
         */
        get: operations["getProductStores"];
        /**
         * 商品の店舗関連情報一括更新
         * @description 指定した商品IDの店舗関連情報を一括で更新します。
         */
        put: operations["updateProductStores"];
        /**
         * 商品の店舗関連情報登録
         * @description 指定した商品IDに店舗関連情報を登録します。
         */
        post: operations["createProductStore"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/inventory_reservations": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の在庫引当情報取得
         * @description 指定した商品IDの在庫引当情報を取得します。
         */
        get: operations["getProductInventoryReservations"];
        /**
         * 商品の在庫引当情報一括更新
         * @description 指定した商品IDの在庫引当情報を一括で更新します。
         */
        put: operations["updateProductInventoryReservations"];
        /**
         * 商品の在庫引当情報登録
         * @description 指定した商品IDに在庫引当情報を登録します。
         */
        post: operations["createProductInventoryReservation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/reserve_item_labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 予約項目ラベル一覧の取得
         * @description 登録されている予約項目ラベルの一覧を取得します。
         */
        get: operations["getProductReserveItemLabels"];
        put?: never;
        /**
         * 予約項目ラベルの新規登録
         * @description 予約項目ラベルを新規登録します。
         */
        post: operations["createProductReserveItemLabel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品画像一覧の取得
         * @description 登録されている商品画像の一覧を取得します。
         */
        get: operations["getProductImages"];
        put?: never;
        /**
         * 商品画像のアップロード
         * @description 商品画像をアップロードします。
         */
        post: operations["uploadProductImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/image": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品メイン画像の取得
         * @description 指定した商品IDのメイン画像を取得します。
         */
        get: operations["getProductImage"];
        /**
         * 商品メイン画像の更新
         * @description 指定した商品IDのメイン画像を更新します。
         */
        put: operations["updateProductImage"];
        post?: never;
        /**
         * 商品メイン画像の削除
         * @description 指定した商品IDのメイン画像を削除します。
         */
        delete: operations["deleteProductImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/icon_image": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品アイコン画像の取得
         * @description 指定した商品IDのアイコン画像を取得します。
         */
        get: operations["getProductIconImage"];
        /**
         * 商品アイコン画像の更新
         * @description 指定した商品IDのアイコン画像を更新します。
         */
        put: operations["updateProductIconImage"];
        post?: never;
        /**
         * 商品アイコン画像の削除
         * @description 指定した商品IDのアイコン画像を削除します。
         */
        delete: operations["deleteProductIconImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{product_id}/prices/{price_division}/{store_id}/{start_date}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 価格区分 */
                price_division: number;
                /** @description 店舗ID */
                store_id: number;
                /** @description 適用開始日(YYYY-MM-DD形式) */
                start_date: string;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 商品価格情報の削除
         * @description 指定した商品の特定価格区分、店舗、適用開始日の価格情報を削除します。
         */
        delete: operations["deleteProductPrice"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{product_id}/reserve_items/{no}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 予約項目番号 */
                no: number;
            };
            cookie?: never;
        };
        /**
         * 特定の商品予約項目取得
         * @description 指定した商品IDと予約項目番号の予約項目情報を取得します。
         */
        get: operations["getProductReserveItem"];
        /**
         * 商品の予約項目更新
         * @description 指定した商品IDと予約項目番号の予約項目情報を更新します。
         */
        put: operations["updateProductReserveItem"];
        post?: never;
        /**
         * 商品の予約項目削除
         * @description 指定した商品IDと予約項目番号の予約項目情報を削除します。
         */
        delete: operations["deleteProductReserveItem"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/attributes/{no}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性番号 */
                no: number;
            };
            cookie?: never;
        };
        /**
         * 商品属性の取得
         * @description 指定した番号の商品属性情報を取得します。
         */
        get: operations["getProductAttribute"];
        /**
         * 商品属性の更新
         * @description 指定した番号の商品属性情報を更新します。
         */
        put: operations["updateProductAttribute"];
        post?: never;
        /**
         * 商品属性の削除
         * @description 指定した番号の商品属性を削除します。属性項目や商品との関連が存在する場合は削除できません。
         */
        delete: operations["deleteProductAttribute"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/attribute_items/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性項目コード */
                code: string;
            };
            cookie?: never;
        };
        /**
         * 商品属性項目の取得
         * @description 指定したコードの商品属性項目情報を取得します。
         */
        get: operations["getProductAttributeItem"];
        /**
         * 商品属性項目の更新
         * @description 指定したコードの商品属性項目情報を更新します。
         */
        put: operations["updateProductAttributeItem"];
        post?: never;
        /**
         * 商品属性項目の削除
         * @description 指定したコードの商品属性項目を削除します。商品との関連が存在する場合は削除できません。
         */
        delete: operations["deleteProductAttributeItem"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/{id}/inventory_reservations/{reservation_product_id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
                /** @description 引当商品ID */
                reservation_product_id: number;
            };
            cookie?: never;
        };
        /**
         * 特定の商品在庫引当情報取得
         * @description 指定した商品IDと引当商品IDの在庫引当情報を取得します。
         */
        get: operations["getProductInventoryReservation"];
        /**
         * 商品の在庫引当情報更新
         * @description 指定した商品IDと引当商品IDの在庫引当情報を更新します。
         */
        put: operations["updateProductInventoryReservation"];
        post?: never;
        /**
         * 商品の在庫引当情報削除
         * @description 指定した商品IDと引当商品IDの在庫引当情報を削除します。
         */
        delete: operations["deleteProductInventoryReservation"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/products/reserve_item_labels/{no}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 予約項目ラベル番号 */
                no: number;
            };
            cookie?: never;
        };
        /**
         * 予約項目ラベルの取得
         * @description 指定した番号の予約項目ラベル情報を取得します。
         */
        get: operations["getProductReserveItemLabel"];
        /**
         * 予約項目ラベルの更新
         * @description 指定した番号の予約項目ラベル情報を更新します。
         */
        put: operations["updateProductReserveItemLabel"];
        post?: never;
        /**
         * 予約項目ラベルの削除
         * @description 指定した番号の予約項目ラベルを削除します。商品の予約項目での使用があると削除できません。
         */
        delete: operations["deleteProductReserveItemLabel"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 取引一覧取得
         * @description 取引一覧を取得します。
         *
         *     レスポンスデータは作成日時の降順で取得されます。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 店舗ID */
                    storeId?: number;
                    /** @description 会員ID */
                    customerId?: number;
                    /** @description 会員コード */
                    customerCode?: string;
                    /** @description 取引日時。一致検索 */
                    "transactionHead.transactionDateTime"?: string;
                    /** @description 取引日時(From)。範囲検索（開始日時） */
                    "transactionHead.transactionDateTimeFrom"?: string;
                    /** @description 取引日時(To)。範囲検索（終了日時） */
                    "transactionHead.transactionDateTimeTo"?: string;
                    /** @description 取引ヘッドID */
                    "transactionHead.transactionHeadId"?: number;
                    /** @description 端末ID */
                    terminal?: number;
                    /** @description 決済方法ID */
                    paymentMethod?: number;
                    /** @description 最大取得件数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            transactions?: components["schemas"]["Transaction"][];
                            pagination?: components["schemas"]["Pagination"];
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        /**
         * 取引作成
         * @description 取引情報を作成します。
         *
         *     作成した取引データには、自動的に取引IDが割り当てられます。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransactionCreate"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * Format: int64
                             * @description 作成された取引ID
                             */
                            id?: number;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/transactions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 取引取得
         * @description 取引情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Transaction"];
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 取引更新
         * @description 取引情報を更新します。
         *
         *     リクエストボディに含まれていないフィールドは更新されません。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransactionUpdate"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 更新完了メッセージ
                             * @example 更新が完了しました
                             */
                            message?: string;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 取引削除
         * @description 取引情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス（コンテンツなし） */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 取引が既に処理済みなど、削除できない状態である */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/transactions/{id}/details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 取引詳細一覧取得
         * @description 特定の取引の詳細情報（商品明細や支払明細）の一覧を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            details?: components["schemas"]["TransactionDetail"][];
                        };
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/layaways": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 預かり取引一覧取得
         * @description 預かり取引一覧を取得します。
         *
         *     レスポンスデータは作成日時の降順で取得されます。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 店舗ID */
                    storeId?: number;
                    /** @description ステータス
                     *     * 1: 預かり
                     *     * 2: 終了 */
                    status?: 1 | 2;
                    /** @description 預かり日時(From)。範囲検索（開始日時） */
                    "layaway.layawayDateTimeFrom"?: string;
                    /** @description 預かり日時(To)。範囲検索（終了日時） */
                    "layaway.layawayDateTimeTo"?: string;
                    /** @description 最大取得件数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            layaways?: components["schemas"]["Layaway"][];
                            pagination?: components["schemas"]["Pagination"];
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        /**
         * 預かり取引作成
         * @description 預かり取引情報を作成します。
         *
         *     作成した預かり取引データには、自動的に預かり取引IDが割り当てられます。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LayawayCreate"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * Format: int64
                             * @description 作成された預かり取引ID
                             */
                            id?: number;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/layaways/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 預かり取引取得
         * @description 預かり取引情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 預かり取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Layaway"];
                    };
                };
                /** @description 指定された預かり取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * 預かり取引削除
         * @description 預かり取引情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 預かり取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス（コンテンツなし） */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された預かり取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 預かり取引が既に処理済みなど、削除できない状態である */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/pre_sales": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 事前会計一覧取得
         * @description 事前会計一覧を取得します。
         *
         *     レスポンスデータは作成日時の降順で取得されます。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 店舗ID */
                    storeId?: number;
                    /** @description ステータス
                     *     * 1: 未会計
                     *     * 2: 会計済 */
                    status?: 1 | 2;
                    /** @description 事前会計日時(From)。範囲検索（開始日時） */
                    "preSale.preSaleDateTimeFrom"?: string;
                    /** @description 事前会計日時(To)。範囲検索（終了日時） */
                    "preSale.preSaleDateTimeTo"?: string;
                    /** @description 最大取得件数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            preSales?: components["schemas"]["PreSale"][];
                            pagination?: components["schemas"]["Pagination"];
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        /**
         * 事前会計作成
         * @description 事前会計情報を作成します。
         *
         *     作成した事前会計データには、自動的に事前会計IDが割り当てられます。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PreSaleCreate"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * Format: int64
                             * @description 作成された事前会計ID
                             */
                            id?: number;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/pre_sales/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 事前会計取得
         * @description 事前会計情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 事前会計ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PreSale"];
                    };
                };
                /** @description 指定された事前会計が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 事前会計更新
         * @description 事前会計情報を更新します。
         *
         *     リクエストボディに含まれていないフィールドは更新されません。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 事前会計ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PreSaleUpdate"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 更新完了メッセージ
                             * @example 更新が完了しました
                             */
                            message?: string;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された事前会計が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 事前会計削除
         * @description 事前会計情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 事前会計ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス（コンテンツなし） */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された事前会計が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 事前会計が既に処理済みなど、削除できない状態である */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/ticket_transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * チケット取引一覧取得
         * @description チケット取引一覧を取得します。
         *
         *     レスポンスデータは作成日時の降順で取得されます。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 店舗ID */
                    storeId?: number;
                    /** @description ステータスタイプ
                     *     * 1: 未使用
                     *     * 2: 使用済
                     *     * 3: 期限切れ
                     *     * 4: 取消 */
                    statusType?: 1 | 2 | 3 | 4;
                    /** @description チケット発行日時(From)。範囲検索（開始日時） */
                    "ticketTransaction.ticketDateTimeFrom"?: string;
                    /** @description チケット発行日時(To)。範囲検索（終了日時） */
                    "ticketTransaction.ticketDateTimeTo"?: string;
                    /** @description チケットコード */
                    "ticketTransaction.ticketCode"?: string;
                    /** @description 最大取得件数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ticketTransactions?: components["schemas"]["TicketTransaction"][];
                            pagination?: components["schemas"]["Pagination"];
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/ticket_transactions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * チケット取引取得
         * @description チケット取引情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description チケット取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TicketTransaction"];
                    };
                };
                /** @description 指定されたチケット取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * チケット取引ステータス更新
         * @description チケット取引のステータスを更新します。
         *
         *     主にチケットの使用状態を変更するために使用します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description チケット取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description ステータスタイプ
                         *     * 1: 未使用
                         *     * 2: 使用済
                         *     * 3: 期限切れ
                         *     * 4: 取消
                         * @enum {integer}
                         */
                        statusType: 1 | 2 | 3 | 4;
                    };
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 更新完了メッセージ
                             * @example 更新が完了しました
                             */
                            message?: string;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたチケット取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員一覧取得
         * @description 会員情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 会員ID */
                    customer_id?: string;
                    /** @description 会員コード */
                    customer_code?: string;
                    /** @description 会員番号 */
                    customer_no?: string;
                    /** @description 会員ランク */
                    rank?: string;
                    /** @description スタッフランク */
                    staff_rank?: string;
                    /** @description 名前（部分一致） */
                    first_name?: string;
                    /** @description 苗字（部分一致） */
                    last_name?: string;
                    /** @description 名前カナ（部分一致） */
                    first_name_kana?: string;
                    /** @description 苗字カナ（部分一致） */
                    last_name_kana?: string;
                    /** @description 性別(0:不明, 1:男性, 2:女性) */
                    sex?: "0" | "1" | "2";
                    /** @description バーコード */
                    barcode?: string;
                    /** @description 生年月日(From) */
                    "birth_date-from"?: string;
                    /** @description 生年月日(To) */
                    "birth_date-to"?: string;
                    /** @description 郵便番号（部分一致） */
                    zip_code?: string;
                    /** @description 住所（部分一致） */
                    address?: string;
                    /** @description 電話番号（部分一致） */
                    phone_number?: string;
                    /** @description FAX番号（部分一致） */
                    fax_number?: string;
                    /** @description 携帯電話番号（部分一致） */
                    mobile_number?: string;
                    /** @description メールアドレス（部分一致） */
                    mail_address?: string;
                    /** @description 会社名（部分一致） */
                    company_name?: string;
                    /** @description 部署名（部分一致） */
                    department_name?: string;
                    /** @description 担当者フラグ */
                    manager_flag?: boolean;
                    /** @description スタッフフラグ */
                    is_staff?: boolean;
                    /** @description ポイント(From) */
                    "points-from"?: number;
                    /** @description ポイント(To) */
                    "points-to"?: number;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 備考（部分一致） */
                    note?: string;
                    /** @description 状態(1:利用, 2:停止) */
                    status_id?: 1 | 2;
                    /** @description 入会日(From) */
                    "enter_date-from"?: string;
                    /** @description 入会日(To) */
                    "enter_date-to"?: string;
                    /** @description 退会日(From) */
                    "suspend_date-from"?: string;
                    /** @description 退会日(To) */
                    "suspend_date-to"?: string;
                    /** @description ポイント有効期限(From) */
                    "point_expire_date-from"?: string;
                    /** @description ポイント有効期限(To) */
                    "point_expire_date-to"?: string;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 会員登録
         * @description 会員情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員情報取得
         * @description 指定したIDの会員情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 会員情報更新
         * @description 指定したIDの会員情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 会員情報削除
         * @description 指定したIDの会員情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customers/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * 会員一括更新
         * @description 会員情報を一括で更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerBulkUpdate"];
                };
            };
            responses: {
                /** @description 一括更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"][];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 会員一括登録
         * @description 会員情報を一括で登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerBulkCreate"];
                };
            };
            responses: {
                /** @description 一括登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"][];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customers/{id}/points": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員ポイント情報取得
         * @description 指定したIDの会員のポイント情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerPoint"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 会員ポイント情報更新
         * @description 指定したIDの会員のポイント情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerPointUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerPoint"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 会員ポイント加減算
         * @description 指定したIDの会員のポイントを加減算します。
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerPointRelativeUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerPoint"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/customer_ranks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員ランク一覧取得
         * @description 会員ランク情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 会員ランクID */
                    rank_id?: string;
                    /** @description 会員ランク名（部分一致） */
                    rank_name?: string;
                    /** @description ポイント付与率(From) */
                    "point_rate-from"?: number;
                    /** @description ポイント付与率(To) */
                    "point_rate-to"?: number;
                    /** @description ポイント有効期限タイプ（0:なし, 1:年月設定, 2:付与から一定期間） */
                    point_expiration_type?: "0" | "1" | "2";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerRank"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 会員ランク登録
         * @description 会員ランク情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerRankCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerRank"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customer_ranks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員ランク情報取得
         * @description 指定したIDの会員ランク情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ランクID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerRank"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 会員ランク情報更新
         * @description 指定したIDの会員ランク情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ランクID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerRankUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerRank"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 会員ランク情報削除
         * @description 指定したIDの会員ランク情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ランクID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/staff_ranks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * スタッフランク一覧取得
         * @description スタッフランク情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description スタッフランクID */
                    staff_rank_id?: string;
                    /** @description スタッフランク名（部分一致） */
                    staff_rank_name?: string;
                    /** @description 社員割引率(From) */
                    "discount_rate-from"?: number;
                    /** @description 社員割引率(To) */
                    "discount_rate-to"?: number;
                    /** @description ポイント付与率(From) */
                    "point_rate-from"?: number;
                    /** @description ポイント付与率(To) */
                    "point_rate-to"?: number;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffRank"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * スタッフランク登録
         * @description スタッフランク情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StaffRankCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffRank"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/staff_ranks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * スタッフランク情報取得
         * @description 指定したIDのスタッフランク情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description スタッフランクID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffRank"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * スタッフランク情報更新
         * @description 指定したIDのスタッフランク情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description スタッフランクID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StaffRankUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffRank"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * スタッフランク情報削除
         * @description 指定したIDのスタッフランク情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description スタッフランクID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customers/required": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員必須項目取得
         * @description 会員情報登録・更新時の必須項目設定を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerRequired"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/stocks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 在庫一覧取得
         * @description 条件を指定して、在庫情報の一覧を取得します。
         */
        get: operations["getStocks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 在庫更新
         * @description 在庫情報を更新します。
         */
        patch: operations["updateStock"];
        trace?: never;
    };
    "/{contract_id}/pos/stocks/changes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 在庫変動履歴一覧取得
         * @description 条件を指定して、在庫変動履歴の一覧を取得します。
         */
        get: operations["getStockChanges"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/bargain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * セール一覧取得
         * @description セール情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - bargainId：セールID
         *     - termStart：適用開始日時
         *     - termEnd：適用終了日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description セールID */
                    bargain_id?: string;
                    /** @description 適用開始日時 */
                    term_start?: string;
                    /** @description 適用終了日時 */
                    term_end?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Bargain"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * セール登録
         * @description セール情報を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BargainCreate"];
                };
            };
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Bargain"];
                    };
                };
                /** @description セール終了日が開始日以前の場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/bargain/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * セール削除
         * @description セール情報を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定したセールデータが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * セール更新
         * @description セール情報を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BargainUpdate"];
                };
            };
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Bargain"];
                    };
                };
                /** @description セール終了日が開始日以前の場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/bargain/{id}/stores": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * セール店舗一覧取得
         * @description セール店舗情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - storeId：店舗ID
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 店舗ID */
                    store_id?: string;
                };
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BargainStore"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * セール店舗登録
         * @description セール店舗情報を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BargainStoreCreate"];
                };
            };
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BargainStore"];
                    };
                };
                /** @description 指定された店舗が登録済みの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/bargain/{id}/stores/{bargainStoreId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * セール店舗削除
         * @description セール店舗情報を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                    /** @description セール店舗ID */
                    bargainStoreId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定したセール店舗データが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * セール店舗更新
         * @description セール店舗情報を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                    /** @description セール店舗ID */
                    bargainStoreId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BargainStoreUpdate"];
                };
            };
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BargainStore"];
                    };
                };
                /** @description 指定された店舗が登録済みの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/bargain/{id}/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * セール商品一覧取得
         * @description セール商品情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - targetDivision：対象区分
         *     - targetId：対象ID
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 対象区分 (1:部門、2:商品、3:グループコード) */
                    target_division?: "1" | "2" | "3";
                    /** @description 対象ID (部門ID, 商品ID, グループコードのいずれか) */
                    target_id?: string;
                };
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BargainProduct"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * セール商品登録
         * @description セール商品情報を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BargainProductCreate"];
                };
            };
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BargainProduct"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/bargain/{id}/products/{bargainProductId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * セール商品削除
         * @description セール商品情報を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                    /** @description セール商品ID */
                    bargainProductId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定したセール商品データが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * セール商品更新
         * @description セール商品情報を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description セールID */
                    id: string;
                    /** @description セール商品ID */
                    bargainProductId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BargainProductUpdate"];
                };
            };
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BargainProduct"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/product_option_groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * オプショングループ一覧取得
         * @description オプショングループの一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - productOptionGroupId：商品オプショングループID
         *     - conditionId：条件ID
         *     - updDateTime：更新日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description オプショングループ名 */
                    product_option_group_name?: string;
                    /** @description 条件ID (0:条件なし、1:全体、2:部門毎) */
                    condition_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProductOptionGroup"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * オプショングループ登録
         * @description オプショングループを登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProductOptionGroupCreate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProductOptionGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/product_option_groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * オプショングループ取得
         * @description 指定されたオプショングループを取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description オプショングループ商品情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_products?: "all" | "none";
                };
                header?: never;
                path: {
                    /** @description オプショングループID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProductOptionGroup"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * オプショングループ削除
         * @description オプショングループを削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description オプショングループID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたオプショングループが使用中の場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * オプショングループ更新
         * @description オプショングループを更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description オプショングループID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProductOptionGroupUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProductOptionGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/product_option_groups/{id}/products/{product_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * オプショングループ商品削除
         * @description 指定されたオプショングループ商品を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description オプショングループID */
                    id: string;
                    /** @description 商品ID */
                    product_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたオプショングループのオプション商品が１件の場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description URIで指定されたオプショングループが存在しない場合
                 *     URIで指定された商品が存在しない場合
                 *     URIで指定されたパラメータの組み合わせが存在しない場合
                 *      */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/bundles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * バンドル販売一覧取得
         * @description バンドル販売情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - productBundleGroupId：商品バンドルグループID
         *     - termFrom：適用開始日
         *     - termTo：適用終了日
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 商品バンドルグループID */
                    product_bundle_group_id?: string;
                    /** @description 適用開始日 */
                    term_from?: string;
                    /** @description 適用終了日 */
                    term_to?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Bundle"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * バンドル販売登録
         * @description バンドル販売情報を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BundleCreate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Bundle"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/bundles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * バンドル販売取得
         * @description バンドル販売情報を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description バンドル販売ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Bundle"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * バンドル販売削除
         * @description バンドル販売を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description バンドル販売ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定したバンドル販売データが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * バンドル販売更新
         * @description バンドル販売情報を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description バンドル販売ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BundleUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Bundle"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/bundles/{id}/products/{bundleProductId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * バンドル販売商品削除
         * @description バンドル販売商品を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description バンドル販売ID */
                    id: string;
                    /** @description バンドル販売商品ID */
                    bundleProductId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description URIで指定されたパラメータの組み合わせが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/stores": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 店舗一覧取得
         * @description 店舗情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - storeId：店舗ID
         *     - storeCode：店舗コード
         *     - displaySequence：表示順
         *     - updDateTime：更新日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 店舗コード */
                    store_code?: string;
                    /** @description 店舗区分 (0:通常店舗、1:倉庫) */
                    store_division?: "0" | "1";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Store"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 店舗登録
         * @description 店舗情報を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StoreCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Store"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/stores/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 店舗取得
         * @description 店舗情報を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description 店舗ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Store"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * 店舗削除
         * @description 店舗を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 店舗ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 削除できない店舗の場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 店舗更新
         * @description 店舗情報を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 店舗ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StoreUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Store"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/stores/{store_id}/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品発注点一覧取得
         * @description 商品発注点情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                };
                header?: never;
                path: {
                    /** @description 店舗ID */
                    store_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 店舗ID
                             * @example 1
                             */
                            storeId: string;
                            /**
                             * @description 商品ID
                             * @example 101
                             */
                            productId: string;
                            /**
                             * @description 発注点
                             * @example 5
                             */
                            orderPoint: string;
                        }[];
                    };
                };
                /** @description 指定された店舗IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        /**
         * 商品発注点設定
         * @description 商品発注点を設定します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 店舗ID */
                    store_id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description 商品ID
                         * @example 101
                         */
                        productId: string;
                        /**
                         * @description 発注点
                         * @example 5
                         */
                        orderPoint: string;
                    };
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 店舗ID
                             * @example 1
                             */
                            storeId: string;
                            /**
                             * @description 商品ID
                             * @example 101
                             */
                            productId: string;
                            /**
                             * @description 発注点
                             * @example 5
                             */
                            orderPoint: string;
                        };
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された店舗IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/stores/{store_id}/product_prices": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 店舗ID */
                store_id: number;
            };
            cookie?: never;
        };
        /**
         * 店舗の商品価格一覧取得
         * @description 指定した店舗IDの商品価格一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        get: operations["getStoreProductPrices"];
        put?: never;
        /**
         * 店舗の商品価格登録・更新
         * @description 指定した店舗IDに商品価格情報を登録または更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: operations["createOrUpdateStoreProductPrice"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/store_groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 店舗分類一覧取得
         * @description 店舗分類一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - storeGroupId：店舗分類ID
         *     - updDateTime：更新日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 店舗分類ID */
                    store_group_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StoreGroup"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 店舗分類登録
         * @description 店舗分類を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StoreGroupCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StoreGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/store_groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 店舗分類削除
         * @description 店舗分類を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 店舗分類ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された店舗分類に紐付いている店舗分類項目が存在する場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 店舗分類更新
         * @description 店舗分類を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 店舗分類ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StoreGroupUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StoreGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/store_group_items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 店舗分類項目一覧取得
         * @description 店舗分類項目一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - storeGroupItemId：店舗分類項目ID
         *     - storeGroupId：店舗分類ID
         *     - storeId：店舗ID
         *     - updDateTime：更新日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 店舗分類項目ID */
                    store_group_item_id?: string;
                    /** @description 店舗分類ID */
                    store_group_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StoreGroupItem"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 店舗分類項目登録
         * @description 店舗分類項目を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StoreGroupItemCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StoreGroupItem"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/store_group_items/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 店舗分類項目削除
         * @description 店舗分類項目を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 店舗分類項目ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 店舗分類項目更新
         * @description 店舗分類項目を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 店舗分類項目ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StoreGroupItemUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StoreGroupItem"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/staffs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * スタッフ一覧取得
         * @description スタッフ情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description スタッフID */
                    staff_id?: string;
                    /** @description スタッフコード */
                    staff_code?: string;
                    /** @description 名前（部分一致） */
                    first_name?: string;
                    /** @description 苗字（部分一致） */
                    last_name?: string;
                    /** @description 名前カナ（部分一致） */
                    first_name_kana?: string;
                    /** @description 苗字カナ（部分一致） */
                    last_name_kana?: string;
                    /** @description 電話番号（部分一致） */
                    tel?: string;
                    /** @description 携帯電話番号（部分一致） */
                    mobile_phone?: string;
                    /** @description メールアドレス（部分一致） */
                    mail?: string;
                    /** @description 権限(0:なし, 1:店舗管理者, 2:店舗スタッフ, 3:システム管理者) */
                    staff_authorization?: "0" | "1" | "2" | "3";
                    /** @description 所属店舗ID */
                    store_id?: string;
                    /** @description 役割ID */
                    role_id?: string;
                    /** @description ステータス(1:有効, 2:無効) */
                    status?: "1" | "2";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Staff"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * スタッフ登録
         * @description スタッフ情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StaffCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Staff"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/staffs/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * スタッフ情報取得
         * @description 指定したIDのスタッフ情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description スタッフID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Staff"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * スタッフ情報更新
         * @description 指定したIDのスタッフ情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description スタッフID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StaffUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Staff"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * スタッフ情報削除
         * @description 指定したIDのスタッフ情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description スタッフID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 役割一覧取得
         * @description 役割情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 役割ID */
                    role_id?: string;
                    /** @description 役割名（部分一致） */
                    role_name?: string;
                    /** @description 権限ID */
                    permission_id?: string;
                    /** @description 権限値(0:無効, 1:有効) */
                    permission_value?: 0 | 1;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Role"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 役割登録
         * @description 役割情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["RoleCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Role"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/roles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 役割情報取得
         * @description 指定したIDの役割情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 役割ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Role"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 役割情報更新
         * @description 指定したIDの役割情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 役割ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["RoleUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Role"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 役割情報削除
         * @description 指定したIDの役割情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 役割ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/budgets/monthly": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 月次予算一覧取得
         * @description 月次予算情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 予算ID */
                    budget_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 年月(From) */
                    "year_month-from"?: string;
                    /** @description 年月(To) */
                    "year_month-to"?: string;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MonthlyBudget"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/budgets/daily/{date}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 日次予算一覧取得
         * @description 指定した日付の日次予算情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 予算ID */
                    budget_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path: {
                    /** @description 日付（YYYY-MM-DD形式） */
                    date: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DailyBudget"][];
                    };
                };
            };
        };
        /**
         * 日次予算更新
         * @description 指定した日付の日次予算情報を更新します。
         */
        put: {
            parameters: {
                query: {
                    /** @description 店舗ID */
                    store_id: string;
                };
                header?: never;
                path: {
                    /** @description 日付（YYYY-MM-DD形式） */
                    date: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DailyBudgetUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DailyBudget"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 日次予算登録
         * @description 指定した日付の日次予算情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 日付（YYYY-MM-DD形式） */
                    date: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DailyBudgetCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DailyBudget"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 日次予算削除
         * @description 指定した日付の日次予算情報を削除します。
         */
        delete: {
            parameters: {
                query: {
                    /** @description 店舗ID */
                    store_id: string;
                };
                header?: never;
                path: {
                    /** @description 日付（YYYY-MM-DD形式） */
                    date: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/budgets/staff": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * スタッフ予算一覧取得
         * @description スタッフ予算情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 予算ID */
                    budget_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description スタッフID */
                    staff_id?: string;
                    /** @description 年月(From) */
                    "year_month-from"?: string;
                    /** @description 年月(To) */
                    "year_month-to"?: string;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffBudget"][];
                    };
                };
            };
        };
        /**
         * スタッフ予算更新
         * @description スタッフ予算情報を更新します。
         */
        put: {
            parameters: {
                query: {
                    /** @description 予算ID */
                    budget_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StaffBudgetUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffBudget"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * スタッフ予算登録
         * @description スタッフ予算情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StaffBudgetCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffBudget"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * スタッフ予算削除
         * @description スタッフ予算情報を削除します。
         */
        delete: {
            parameters: {
                query: {
                    /** @description 予算ID */
                    budget_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/suppliers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 仕入先一覧取得
         * @description 仕入先情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 仕入先ID */
                    supplier_id?: string;
                    /** @description 仕入先コード */
                    supplier_code?: string;
                    /** @description 仕入先名（部分一致） */
                    supplier_name?: string;
                    /** @description 仕入先略称（部分一致） */
                    supplier_abbr?: string;
                    /** @description 仕入先区分ID */
                    supplier_division_id?: string;
                    /** @description 電話番号（部分一致） */
                    phone_number?: string;
                    /** @description ステータス(0:無効, 1:有効) */
                    status?: "0" | "1";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Supplier"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 仕入先登録
         * @description 仕入先情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplierCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Supplier"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/suppliers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 仕入先情報取得
         * @description 指定したIDの仕入先情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 仕入先ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Supplier"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 仕入先情報更新
         * @description 指定したIDの仕入先情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 仕入先ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplierUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Supplier"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 仕入先情報削除
         * @description 指定したIDの仕入先情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 仕入先ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/suppliers/{id}/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 仕入先商品一覧取得
         * @description 指定した仕入先の商品情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 仕入先商品ID */
                    supplier_product_id?: string;
                    /** @description 商品ID */
                    product_id?: string;
                    /** @description 商品コード */
                    product_code?: string;
                    /** @description 商品名（部分一致） */
                    product_name?: string;
                    /** @description 仕入先商品コード */
                    supplier_product_code?: string;
                    /** @description 仕入先商品名（部分一致） */
                    supplier_product_name?: string;
                    /** @description ステータス(0:無効, 1:有効) */
                    status?: "0" | "1";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path: {
                    /** @description 仕入先ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplierProduct"][];
                    };
                };
                /** @description 対象仕入先が存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        /**
         * 仕入先商品登録
         * @description 指定した仕入先に商品情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 仕入先ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplierProductCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplierProduct"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象仕入先が存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/supplier_divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 仕入先区分一覧取得
         * @description 仕入先区分情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 仕入先区分ID */
                    supplier_division_id?: string;
                    /** @description 仕入先区分名（部分一致） */
                    supplier_division_name?: string;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplierDivision"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 仕入先区分登録
         * @description 仕入先区分情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplierDivisionCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplierDivision"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/supplier_divisions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 仕入先区分情報取得
         * @description 指定したIDの仕入先区分情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 仕入先区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplierDivision"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 仕入先区分情報更新
         * @description 指定したIDの仕入先区分情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 仕入先区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplierDivisionUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplierDivision"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 仕入先区分情報削除
         * @description 指定したIDの仕入先区分情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 仕入先区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/terminals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * レジ端末一覧取得
         * @description レジ端末情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description レジ端末ID */
                    terminal_id?: string;
                    /** @description レジ端末コード */
                    terminal_code?: string;
                    /** @description レジ端末名（部分一致） */
                    terminal_name?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description レジ端末種別(1:PC, 2:iPad, 3:ハンディ) */
                    terminal_type?: "1" | "2" | "3";
                    /** @description ステータス(0:無効, 1:有効) */
                    status?: "0" | "1";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Terminal"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * レジ端末登録
         * @description レジ端末情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TerminalCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Terminal"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/terminals/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * レジ端末情報取得
         * @description 指定したIDのレジ端末情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description レジ端末ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Terminal"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * レジ端末情報更新
         * @description 指定したIDのレジ端末情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description レジ端末ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TerminalUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Terminal"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * レジ端末情報削除
         * @description 指定したIDのレジ端末情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description レジ端末ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/settlements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 精算一覧取得
         * @description 精算情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 精算ID */
                    settlement_id?: string;
                    /** @description 精算番号 */
                    settlement_no?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 端末ID */
                    terminal_id?: string;
                    /** @description スタッフID */
                    staff_id?: string;
                    /** @description 精算日時(From) */
                    "settlement_date_time-from"?: string;
                    /** @description 精算日時(To) */
                    "settlement_date_time-to"?: string;
                    /** @description レジ開始日時(From) */
                    "opening_date_time-from"?: string;
                    /** @description レジ開始日時(To) */
                    "opening_date_time-to"?: string;
                    /** @description レジ締め日時(From) */
                    "closing_date_time-from"?: string;
                    /** @description レジ締め日時(To) */
                    "closing_date_time-to"?: string;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Settlement"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 精算登録
         * @description 精算情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SettlementCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Settlement"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/daily_settlements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 日次締め一覧取得
         * @description 日次締め情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 日次締めID */
                    daily_settlement_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 営業日(From) */
                    "business_date-from"?: string;
                    /** @description 営業日(To) */
                    "business_date-to"?: string;
                    /** @description 締め日(From) */
                    "closing_date-from"?: string;
                    /** @description 締め日(To) */
                    "closing_date-to"?: string;
                    /** @description 締め日時(From) */
                    "closing_date_time-from"?: string;
                    /** @description 締め日時(To) */
                    "closing_date_time-to"?: string;
                    /** @description スタッフID */
                    staff_id?: string;
                    /** @description ステータス(0:未確定, 1:確定) */
                    status?: "0" | "1";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DailySettlement"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 日次締め登録
         * @description 日次締め情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DailySettlementCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DailySettlement"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/payment_methods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 支払方法一覧取得
         * @description 支払方法情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 支払方法ID */
                    payment_method_id?: string;
                    /** @description 支払方法コード */
                    payment_method_code?: string;
                    /** @description 支払方法名（部分一致） */
                    payment_method_name?: string;
                    /** @description 支払方法区分ID */
                    payment_method_division_id?: string;
                    /** @description 金額入力タイプ(0:不要, 1:任意, 2:必須) */
                    amount_input_type?: "0" | "1" | "2";
                    /** @description お釣り対応タイプ(0:不可, 1:可, 2:自動計算) */
                    change_type?: "0" | "1" | "2";
                    /** @description ステータス(0:無効, 1:有効) */
                    status?: "0" | "1";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethod"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 支払方法登録
         * @description 支払方法情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PaymentMethodCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethod"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/payment_methods/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 支払方法情報取得
         * @description 指定したIDの支払方法情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 支払方法ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethod"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 支払方法情報更新
         * @description 指定したIDの支払方法情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 支払方法ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PaymentMethodUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethod"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 支払方法情報削除
         * @description 指定したIDの支払方法情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 支払方法ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/stores/{store_id}/payment_methods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 店舗支払方法一覧取得
         * @description 店舗に設定された支払方法情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 店舗支払方法ID */
                    store_payment_method_id?: string;
                    /** @description 支払方法ID */
                    payment_method_id?: string;
                    /** @description ステータス(0:無効, 1:有効) */
                    status?: "0" | "1";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path: {
                    /** @description 店舗ID */
                    store_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StorePaymentMethod"][];
                    };
                };
                /** @description 対象店舗が存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/payment_method_divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 支払方法区分一覧取得
         * @description 支払方法区分情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 支払方法区分ID */
                    payment_method_division_id?: string;
                    /** @description 支払方法区分名（部分一致） */
                    payment_method_division_name?: string;
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethodDivision"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 支払方法区分登録
         * @description 支払方法区分情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PaymentMethodDivisionCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethodDivision"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/payment_method_divisions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 支払方法区分情報取得
         * @description 指定したIDの支払方法区分情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 支払方法区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethodDivision"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 支払方法区分情報更新
         * @description 指定したIDの支払方法区分情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 支払方法区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PaymentMethodDivisionUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentMethodDivision"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 支払方法区分情報削除
         * @description 指定したIDの支払方法区分情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 支払方法区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/app_payment_methods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * アプリ連携支払方法一覧取得
         * @description アプリ連携支払方法情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description アプリ連携支払方法ID */
                    app_payment_method_id?: string;
                    /** @description 支払方法ID */
                    payment_method_id?: string;
                    /** @description アプリ連携用支払コード */
                    app_payment_code?: string;
                    /** @description ステータス(0:無効, 1:有効) */
                    status?: "0" | "1";
                    /** @description 登録日時(From) */
                    "ins_date_time-from"?: string;
                    /** @description 登録日時(To) */
                    "ins_date_time-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AppPaymentMethod"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * アプリ連携支払方法登録
         * @description アプリ連携支払方法情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["AppPaymentMethodCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AppPaymentMethod"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/app_payment_methods/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * アプリ連携支払方法情報取得
         * @description 指定したIDのアプリ連携支払方法情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description アプリ連携支払方法ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AppPaymentMethod"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * アプリ連携支払方法情報削除
         * @description 指定したIDのアプリ連携支払方法情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description アプリ連携支払方法ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/coupons": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * クーポン一覧取得
         * @description 条件を指定して、クーポン情報の一覧を取得します。
         */
        get: operations["getCoupons"];
        put?: never;
        /**
         * クーポン登録
         * @description クーポン情報を登録します。
         */
        post: operations["createCoupon"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/coupons/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * クーポン取得
         * @description クーポン情報を取得します。
         */
        get: operations["getCoupon"];
        put?: never;
        post?: never;
        /**
         * クーポン削除
         * @description クーポン情報を削除します。
         */
        delete: operations["deleteCoupon"];
        options?: never;
        head?: never;
        /**
         * クーポン更新
         * @description クーポン情報を更新します。
         */
        patch: operations["updateCoupon"];
        trace?: never;
    };
    "/{contract_id}/pos/coupons/{id}/products": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * クーポン適用商品一覧取得
         * @description クーポンに適用される商品の一覧を取得します。
         */
        get: operations["getCouponProducts"];
        put?: never;
        /**
         * クーポン適用商品登録
         * @description クーポンに適用される商品を登録します。
         */
        post: operations["createCouponProduct"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/coupons/{id}/products/{couponProductId}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
                /** @description クーポン適用商品ID */
                couponProductId: number;
            };
            cookie?: never;
        };
        /**
         * クーポン適用商品取得
         * @description クーポンに適用される商品の情報を取得します。
         */
        get: operations["getCouponProduct"];
        put?: never;
        post?: never;
        /**
         * クーポン適用商品削除
         * @description クーポンに適用される商品の情報を削除します。
         */
        delete: operations["deleteCouponProduct"];
        options?: never;
        head?: never;
        /**
         * クーポン適用商品更新
         * @description クーポンに適用される商品の情報を更新します。
         */
        patch: operations["updateCouponProduct"];
        trace?: never;
    };
    "/{contract_id}/pos/losses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ロス一覧取得
         * @description ロス情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description ロスID */
                    loss_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description ロス日(From) */
                    "loss_date-from"?: string;
                    /** @description ロス日(To) */
                    "loss_date-to"?: string;
                    /** @description ロス区分ID */
                    loss_division_id?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Loss"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * ロス登録
         * @description ロス情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LossCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Loss"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/losses/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ロス取得
         * @description ロス情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description ロスID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Loss"];
                    };
                };
                /** @description 指定されたロスIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * ロス削除
         * @description ロス情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ロスID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたロスIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * ロス更新
         * @description ロス情報を更新します。
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ロスID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LossUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Loss"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたロスIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/losses/{id}/details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ロス明細取得
         * @description ロス明細情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                };
                header?: never;
                path: {
                    /** @description ロスID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LossDetail"][];
                    };
                };
                /** @description 指定されたロスIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/loss_divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ロス区分一覧取得
         * @description ロス区分情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description ロス区分ID */
                    loss_division_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LossDivision"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * ロス区分登録
         * @description ロス区分情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LossDivisionCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LossDivision"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/loss_divisions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ロス区分取得
         * @description ロス区分情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description ロス区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LossDivision"];
                    };
                };
                /** @description 指定されたロス区分IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * ロス区分削除
         * @description ロス区分情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ロス区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたロス区分IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * ロス区分更新
         * @description ロス区分情報を更新します。
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ロス区分ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LossDivisionUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LossDivision"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定されたロス区分IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 発注一覧取得
         * @description 発注情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 発注ID */
                    order_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 仕入先ID */
                    supplier_id?: string;
                    /** @description 入荷予定日(From) */
                    "estimated_arrival_date-from"?: string;
                    /** @description 入荷予定日(To) */
                    "estimated_arrival_date-to"?: string;
                    /** @description 発注日(From) */
                    "order_date-from"?: string;
                    /** @description 発注日(To) */
                    "order_date-to"?: string;
                    /** @description ステータス */
                    status?: "0" | "1" | "2" | "3";
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Order"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 発注登録
         * @description 発注情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OrderCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Order"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/orders/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 発注取得
         * @description 発注情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description 発注ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Order"];
                    };
                };
                /** @description 指定された発注IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * 発注削除
         * @description 発注情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 発注ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された発注IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 発注更新
         * @description 発注情報を更新します。
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 発注ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OrderUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Order"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された発注IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/orders/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 発注対象商品取得
         * @description 発注対象商品情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 商品ID */
                    product_id?: string;
                    /** @description 商品コード */
                    product_code?: string;
                    /** @description 仕入先ID */
                    supplier_id?: string;
                    /** @description 部門ID */
                    category_id?: string;
                    /** @description 発注点以下の在庫商品のみ */
                    min_remains_inventories?: boolean;
                    /** @description 店舗ID */
                    store_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OrderProduct"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/orders/stores": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 発注対象店舗取得
         * @description 発注対象店舗情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OrderStore"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/arrivals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 入荷一覧取得
         * @description 入荷情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 入荷ID */
                    arrival_id?: string;
                    /** @description 発注ID */
                    order_id?: string;
                    /** @description 店舗ID */
                    store_id?: string;
                    /** @description 仕入先ID */
                    supplier_id?: string;
                    /** @description 入荷日(From) */
                    "arrival_date-from"?: string;
                    /** @description 入荷日(To) */
                    "arrival_date-to"?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Arrival"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 入荷登録
         * @description 入荷情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ArrivalCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Arrival"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/arrivals/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 入荷取得
         * @description 入荷情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description 入荷ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Arrival"];
                    };
                };
                /** @description 指定された入荷IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 入荷更新
         * @description 入荷情報を更新します。
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 入荷ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ArrivalUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Arrival"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された入荷IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/arrivals/{id}/details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 入荷明細取得
         * @description 入荷明細情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                };
                header?: never;
                path: {
                    /** @description 入荷ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ArrivalDetail"][];
                    };
                };
                /** @description 指定された入荷IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 出荷一覧取得
         * @description 出荷情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 出荷ID */
                    shipment_id?: string;
                    /** @description 出荷元店舗ID */
                    store_id?: string;
                    /** @description 出荷日(From) */
                    "shipment_date-from"?: string;
                    /** @description 出荷日(To) */
                    "shipment_date-to"?: string;
                    /** @description 出荷先店舗ID */
                    destination_store_id?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Shipment"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 出荷登録
         * @description 出荷情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ShipmentCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Shipment"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/shipments/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 出荷取得
         * @description 出荷情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description 出荷ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Shipment"];
                    };
                };
                /** @description 指定された出荷IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * 出荷削除
         * @description 出荷情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 出荷ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された出荷IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 出荷更新
         * @description 出荷情報を更新します。
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 出荷ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ShipmentUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Shipment"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された出荷IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/{contract_id}/pos/shipments/{id}/details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 出荷明細取得
         * @description 出荷明細情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                };
                header?: never;
                path: {
                    /** @description 出荷ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ShipmentDetail"][];
                    };
                };
                /** @description 指定された出荷IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/incoming_stocks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 入庫一覧取得
         * @description 条件を指定して、入庫情報の一覧を取得します。
         */
        get: operations["getIncomingStocks"];
        put?: never;
        /**
         * 入庫登録
         * @description 入庫情報を登録します。
         */
        post: operations["createIncomingStock"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/incoming_stocks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 入庫ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 入庫取得
         * @description 入庫情報を取得します。
         */
        get: operations["getIncomingStock"];
        put?: never;
        post?: never;
        /**
         * 入庫削除
         * @description 入庫情報を削除します。
         */
        delete: operations["deleteIncomingStock"];
        options?: never;
        head?: never;
        /**
         * 入庫更新
         * @description 入庫情報を更新します。
         */
        patch: operations["updateIncomingStock"];
        trace?: never;
    };
    "/{contract_id}/pos/incoming_stocks/{id}/details": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 入庫ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 入庫詳細一覧取得
         * @description 入庫詳細情報の一覧を取得します。
         */
        get: operations["getIncomingStockDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 入庫詳細更新
         * @description 入庫詳細情報を更新します。
         */
        patch: operations["updateIncomingStockDetails"];
        trace?: never;
    };
    "/{contract_id}/pos/outgoing_stocks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 出庫一覧取得
         * @description 条件を指定して、出庫情報の一覧を取得します。
         */
        get: operations["getOutgoingStocks"];
        put?: never;
        /**
         * 出庫登録
         * @description 出庫情報を登録します。
         */
        post: operations["createOutgoingStock"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/outgoing_stocks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 出庫取得
         * @description 出庫情報を取得します。
         */
        get: operations["getOutgoingStock"];
        put?: never;
        post?: never;
        /**
         * 出庫削除
         * @description 出庫情報を削除します。
         */
        delete: operations["deleteOutgoingStock"];
        options?: never;
        head?: never;
        /**
         * 出庫更新
         * @description 出庫情報を更新します。
         */
        patch: operations["updateOutgoingStock"];
        trace?: never;
    };
    "/{contract_id}/pos/outgoing_stocks/{id}/details": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 出庫詳細一覧取得
         * @description 出庫詳細情報の一覧を取得します。
         */
        get: operations["getOutgoingStockDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 出庫詳細更新
         * @description 出庫詳細情報を更新します。
         */
        patch: operations["updateOutgoingStockDetails"];
        trace?: never;
    };
    "/{contract_id}/pos/correction_requests/outgoing_stocks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 出庫修正申請一覧取得
         * @description 条件を指定して、出庫修正申請情報の一覧を取得します。
         */
        get: operations["getCorrectionOutgoingStocks"];
        put?: never;
        /**
         * 出庫修正申請登録
         * @description 出庫修正申請情報を登録します。
         */
        post: operations["createCorrectionOutgoingStock"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/correction_requests/outgoing_stocks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫修正申請ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 出庫修正申請取得
         * @description 出庫修正申請情報を取得します。
         */
        get: operations["getCorrectionOutgoingStock"];
        put?: never;
        post?: never;
        /**
         * 出庫修正申請削除
         * @description 出庫修正申請情報を削除します。
         */
        delete: operations["deleteCorrectionOutgoingStock"];
        options?: never;
        head?: never;
        /**
         * 出庫修正申請更新（承認・却下）
         * @description 出庫修正申請情報を更新します。（申請の承認・却下）
         */
        patch: operations["updateCorrectionOutgoingStock"];
        trace?: never;
    };
    "/{contract_id}/pos/stocktakings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 棚卸一覧取得
         * @description 棚卸情報の一覧を取得します。
         */
        get: operations["getStocktakings"];
        put?: never;
        /**
         * 棚卸登録
         * @description 棚卸情報を登録します。
         */
        post: operations["createStocktaking"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/stocktakings/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 棚卸部門一覧取得
         * @description 棚卸に登録されている部門情報の一覧を取得します。
         */
        get: operations["getStocktakingCategories"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 棚卸部門更新
         * @description 棚卸に登録されている部門情報を更新します。
         */
        patch: operations["updateStocktakingCategory"];
        trace?: never;
    };
    "/{contract_id}/pos/stocktakings/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 棚卸商品一覧取得
         * @description 棚卸に登録されている商品情報の一覧を取得します。
         */
        get: operations["getStocktakingProducts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 棚卸商品更新
         * @description 棚卸に登録されている商品情報を更新します。
         */
        patch: operations["updateStocktakingProduct"];
        trace?: never;
    };
    "/{contract_id}/pos/stocktakings/stocks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 棚卸在庫一覧取得
         * @description 棚卸に登録されている在庫情報の一覧を取得します。
         */
        get: operations["getStocktakingStocks"];
        put?: never;
        /**
         * 棚卸在庫登録
         * @description 棚卸在庫情報を登録します。
         */
        post: operations["createStocktakingStock"];
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 棚卸在庫更新
         * @description 棚卸在庫情報を更新します。
         */
        patch: operations["updateStocktakingStock"];
        trace?: never;
    };
    "/{contract_id}/pos/tax_rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 税率一覧取得
         * @description 税率情報の一覧を取得します。
         */
        get: operations["getTaxRates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/reduce_tax_rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 軽減税率一覧取得
         * @description 軽減税率情報の一覧を取得します。
         */
        get: operations["getReduceTaxRates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/receipt_remarks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * レシート備考一覧取得
         * @description レシート備考情報の一覧を取得します。
         */
        get: operations["getReceiptRemarks"];
        put?: never;
        /**
         * レシート備考登録
         * @description レシート備考情報を登録します。
         */
        post: operations["createReceiptRemark"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/discount_divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 値引き区分一覧取得
         * @description 値引き区分情報の一覧を取得します。
         */
        get: operations["getDiscountDivisions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/cat_cct_card_companies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * CAT/CCTカード会社一覧取得
         * @description CAT/CCTカード会社情報の一覧を取得します。
         */
        get: operations["getCatCctCardCompanies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customer_types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 顧客タイプ一覧取得
         * @description 顧客タイプ情報の一覧を取得します。
         */
        get: operations["getCustomerTypes"];
        put?: never;
        /**
         * 顧客タイプ登録
         * @description 顧客タイプ情報を登録します。
         */
        post: operations["createCustomerType"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{contract_id}/pos/customer_type_sections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 顧客タイプセクション一覧取得
         * @description 顧客タイプセクション情報の一覧を取得します。
         */
        get: operations["getCustomerTypeSections"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 顧客タイプセクション更新
         * @description 顧客タイプセクション情報を更新します。
         */
        patch: operations["updateCustomerTypeSection"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description エラーレスポンス */
        Error: {
            /**
             * @description エラータイプ
             * @example about:blank
             */
            type: string;
            /**
             * @description エラータイトル
             * @example Bad Request
             */
            title: string;
            /**
             * @description エラーの詳細メッセージ
             * @example 入力パラメータが正しくありません
             */
            detail: string;
            /**
             * @description HTTPステータスコード
             * @example 400
             */
            status: number;
        };
        /** @description ページネーション情報 */
        Pagination: {
            /**
             * @description 1ページあたりの最大件数 (1-1000)
             * @default 100
             * @example 100
             */
            limit: number;
            /**
             * @description ページ番号 (1始まり)
             * @default 1
             * @example 1
             */
            page: number;
            /**
             * @description 並び順の指定 (カンマ区切りで複数指定可能。降順は「:desc」を付加)
             * @example updDateTime:desc
             */
            sort?: string;
        };
        /** @description 部門情報 */
        Category: {
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId: string;
            /**
             * @description 部門コード (20文字以内)
             * @example FOOD
             */
            categoryCode?: string;
            /**
             * @description 部門名 (85文字以内)
             * @example 食品
             */
            categoryName: string;
            /**
             * @description 部門名略称 (85文字以内)
             * @example 食
             */
            categoryAbbr?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 端末表示カラー (#000000形式)
             * @example #FF0000
             */
            color?: string;
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId?: string;
            /**
             * @description 親部門ID
             * @example 1
             */
            parentCategoryId?: string;
            /**
             * @description 階層レベル (1-3)
             * @example 1
             * @enum {string}
             */
            level?: "1" | "2" | "3";
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 部門グループ情報 */
        CategoryGroup: {
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId: string;
            /**
             * @description 部門グループコード (10文字以内)
             * @example GROUP1
             */
            categoryGroupCode?: string;
            /**
             * @description 部門グループ名 (85文字以内)
             * @example 食品グループ
             */
            categoryGroupName: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 部門登録情報 */
        CategoryCreate: {
            /**
             * @description 部門コード (20文字以内)
             * @example FOOD
             */
            categoryCode?: string;
            /**
             * @description 部門名 (85文字以内)
             * @example 食品
             */
            categoryName: string;
            /**
             * @description 部門名略称 (85文字以内)
             * @example 食
             */
            categoryAbbr?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 端末表示カラー (#000000形式)
             * @example #FF0000
             */
            color?: string;
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId?: string;
            /**
             * @description 親部門ID
             * @example 1
             */
            parentCategoryId?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
        };
        /** @description 部門更新情報 */
        CategoryUpdate: {
            /**
             * @description 部門コード (20文字以内)
             * @example FOOD
             */
            categoryCode?: string;
            /**
             * @description 部門名 (85文字以内)
             * @example 食品
             */
            categoryName?: string;
            /**
             * @description 部門名略称 (85文字以内)
             * @example 食
             */
            categoryAbbr?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @example 1
             * @enum {string}
             */
            displayFlag?: "0" | "1";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 端末表示カラー (#000000形式)
             * @example #FF0000
             */
            color?: string;
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId?: string;
            /**
             * @description 親部門ID
             * @example 1
             */
            parentCategoryId?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
        };
        /** @description 部門グループ登録情報 */
        CategoryGroupCreate: {
            /**
             * @description 部門グループコード (10文字以内)
             * @example GROUP1
             */
            categoryGroupCode?: string;
            /**
             * @description 部門グループ名 (85文字以内)
             * @example 食品グループ
             */
            categoryGroupName: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
        };
        /** @description 部門グループ更新情報 */
        CategoryGroupUpdate: {
            /**
             * @description 部門グループコード (10文字以内)
             * @example GROUP1
             */
            categoryGroupCode?: string;
            /**
             * @description 部門グループ名 (85文字以内)
             * @example 食品グループ
             */
            categoryGroupName?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
        };
        /** @description 商品情報 */
        Product: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId: string;
            /**
             * @description 商品コード (20文字以内)
             * @example ITEM001
             */
            productCode?: string;
            /**
             * @description 商品名 (85文字以内)
             * @example 有機栽培コーヒー
             */
            productName: string;
            /**
             * @description 商品カナ (85文字以内)
             * @example ユウキサイバイコーヒー
             */
            productKana?: string;
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 商品価格区分 (1:通常価格、2:オープン価格)
             * @default 1
             * @example 1
             * @enum {string}
             */
            productPriceDivision: "1" | "2";
            /**
             * @description 商品単価
             * @example 500
             */
            price: string;
            /**
             * @description 会員価格
             * @example 450
             */
            customerPrice?: string;
            /**
             * @description 原価
             * @example 300
             */
            cost?: string;
            /**
             * @description 規格 (1000文字以内)
             * @example 豆の種類：アラビカ種、焙煎：中煎り
             */
            attribute?: string;
            /**
             * @description 説明 (1000文字以内)
             * @example 有機栽培されたコーヒー豆を使用し、香り高く仕上げました。
             */
            description?: string;
            /**
             * @description キャッチコピー (1000文字以内)
             * @example 豊かな香りと深い味わい
             */
            catchCopy?: string;
            /**
             * @description サイズ (85文字以内)
             * @example 200g
             */
            size?: string;
            /**
             * @description カラー (85文字以内)
             * @example ブラウン
             */
            color?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * @description グループコード (85文字以内)
             * @example COFFEE
             */
            groupCode?: string;
            /**
             * @description URL (255文字以内)
             * @example https://example.com/coffee
             */
            url?: string;
            /**
             * @description レシート印字商品名 (64文字以内)
             * @example 有機コーヒー
             */
            printReceiptProductName?: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 売上区分 (0:売上対象、1:売上対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            salesDivision: "0" | "1";
            /**
             * @description 在庫管理区分 (0:在庫管理対象、1:在庫管理対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            stockControlDivision: "0" | "1";
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 商品区分 (0:通常商品、1:回数券、2:オプション商品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            division: "0" | "1" | "2";
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 品番
             * @example S12345
             */
            supplierProductNo?: string;
            /**
             * @description 値引割引計算対象 (0:対象外、1:対象)
             * @default 1
             * @example 1
             * @enum {string}
             */
            calcDiscount: "0" | "1";
            /**
             * @description 社員販売割引率
             * @example 10
             */
            staffDiscountRate?: string;
            /**
             * @description 部門税設定参照フラグ (0:reduceTaxIdを使用、1:部門の税設定を使用)
             * @default 1
             * @example 1
             * @enum {string}
             */
            useCategoryReduceTax: "0" | "1";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 軽減税率用商品単価
             * @example 500
             */
            reduceTaxPrice?: string;
            /**
             * @description 軽減税率用商品会員単価
             * @example 450
             */
            reduceTaxCustomerPrice?: string;
            /**
             * @description 発注点
             * @example 10
             */
            orderPoint?: string;
            /**
             * @description 仕入原価
             * @example 300
             */
            purchaseCost?: string;
            /**
             * Format: date-time
             * @description 適用開始日時
             * @example 2023-01-01T00:00:00+09:00
             */
            appStartDateTime?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品登録情報 */
        ProductCreate: {
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId: string;
            /**
             * @description 商品コード (20文字以内)
             * @example ITEM001
             */
            productCode?: string;
            /**
             * @description 商品名 (85文字以内)
             * @example 有機栽培コーヒー
             */
            productName: string;
            /**
             * @description 商品カナ (85文字以内)
             * @example ユウキサイバイコーヒー
             */
            productKana?: string;
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @default 1
             * @example 1
             * @enum {string}
             */
            taxDivision: "0" | "1" | "2";
            /**
             * @description 商品価格区分 (1:通常価格、2:オープン価格)
             * @default 1
             * @example 1
             * @enum {string}
             */
            productPriceDivision: "1" | "2";
            /**
             * @description 商品単価
             * @example 500
             */
            price: string;
            /**
             * @description 会員価格
             * @example 450
             */
            customerPrice?: string;
            /**
             * @description 原価
             * @example 300
             */
            cost?: string;
            /**
             * @description 規格 (1000文字以内)
             * @example 豆の種類：アラビカ種、焙煎：中煎り
             */
            attribute?: string;
            /**
             * @description 説明 (1000文字以内)
             * @example 有機栽培されたコーヒー豆を使用し、香り高く仕上げました。
             */
            description?: string;
            /**
             * @description キャッチコピー (1000文字以内)
             * @example 豊かな香りと深い味わい
             */
            catchCopy?: string;
            /**
             * @description サイズ (85文字以内)
             * @example 200g
             */
            size?: string;
            /**
             * @description カラー (85文字以内)
             * @example ブラウン
             */
            color?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * @description グループコード (85文字以内)
             * @example COFFEE
             */
            groupCode?: string;
            /**
             * @description URL (255文字以内)
             * @example https://example.com/coffee
             */
            url?: string;
            /**
             * @description レシート印字商品名 (64文字以内)
             * @example 有機コーヒー
             */
            printReceiptProductName?: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 商品区分 (0:通常商品、1:回数券、2:オプション商品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            division: "0" | "1" | "2";
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description 売上区分 (0:売上対象、1:売上対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            salesDivision: "0" | "1";
            /**
             * @description 在庫管理区分 (0:在庫管理対象、1:在庫管理対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            stockControlDivision: "0" | "1";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象 (0:対象外、1:対象)
             * @default 1
             * @example 1
             * @enum {string}
             */
            calcDiscount: "0" | "1";
            /**
             * @description 社員販売割引率
             * @example 10
             */
            staffDiscountRate?: string;
            /**
             * @description 部門税設定参照フラグ (0:reduceTaxIdを使用、1:部門の税設定を使用)
             * @default 1
             * @example 1
             * @enum {string}
             */
            useCategoryReduceTax: "0" | "1";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 軽減税率用商品単価
             * @example 500
             */
            reduceTaxPrice?: string;
            /**
             * @description 軽減税率用商品会員単価
             * @example 450
             */
            reduceTaxCustomerPrice?: string;
            /**
             * @description 発注点
             * @example 10
             */
            orderPoint?: string;
            /**
             * @description 仕入原価
             * @example 300
             */
            purchaseCost?: string;
            /**
             * @description 品番
             * @example S12345
             */
            supplierProductNo?: string;
            /**
             * Format: date-time
             * @description 適用開始日時
             * @example 2023-01-01T00:00:00+09:00
             */
            appStartDateTime?: string;
            /** @description 商品自由項目 */
            reserveItems?: {
                /**
                 * @description 自由項目番号
                 * @example 1
                 */
                no?: string;
                /**
                 * @description 自由項目値
                 * @example ドリップコーヒー
                 */
                value?: string;
            }[];
            /** @description 商品価格 */
            prices?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 価格区分 (1:商品単価、2:会員単価)
                 * @example 1
                 * @enum {string}
                 */
                priceDivision?: "1" | "2";
                /**
                 * Format: date
                 * @description 適用開始日
                 * @example 2023-01-01
                 */
                startDate?: string;
                /**
                 * Format: date
                 * @description 適用終了日
                 * @example 2023-12-31
                 */
                endDate?: string;
                /**
                 * @description 価格
                 * @example 500
                 */
                price?: string;
            }[];
            /** @description 商品取扱店舗 */
            stores?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 商品オプショングループID
                 * @example 1
                 */
                productOptionGroupId?: string;
                /**
                 * @description 取扱区分 (0:販売する、1:販売しない)
                 * @example 0
                 * @enum {string}
                 */
                assignDivision?: "0" | "1";
            }[];
            /** @description 在庫引当商品 */
            inventoryReservations?: {
                /**
                 * @description 引当商品ID
                 * @example 2
                 */
                reservationProductId?: string;
                /**
                 * @description 引当個数
                 * @example 1
                 */
                reservationAmount?: string;
            }[];
            /** @description 商品属性項目 */
            attributeItems?: {
                /**
                 * @description コード
                 * @example CODE01
                 */
                code?: string;
                /**
                 * @description 項目番号
                 * @example 1
                 */
                no?: string;
            }[];
            /** @description 発注設定 */
            orderSetting?: {
                /** @description 継続区分 */
                continuationDivision?: string;
                /**
                 * @description 発注状態 (0:発注不可、1:発注可)
                 * @example 1
                 * @enum {string}
                 */
                orderStatusDivision?: "0" | "1";
                /** @description 発注不可理由 */
                orderNoReasonDivision?: string;
                /** @description 発注単位 */
                orderUnit?: {
                    /**
                     * @description 発注単位区分 (0:単位なし、1:単位あり)
                     * @example 0
                     * @enum {string}
                     */
                    division?: "0" | "1";
                    /**
                     * @description 発注数
                     * @example 1
                     */
                    num?: string;
                    /**
                     * @description 発注単位名
                     * @example ケース
                     */
                    name?: string;
                };
                /**
                 * @description 発注上限数
                 * @example 100
                 */
                orderLimitAmount?: string;
                /**
                 * @description 仕入先編集可能フラグ (0:不可、1:可能)
                 * @example 0
                 * @enum {string}
                 */
                orderSupplierEditable?: "0" | "1";
                /**
                 * @description PB商品区分 (0:NB、1:PB)
                 * @example 1
                 * @enum {string}
                 */
                pbDivision?: "0" | "1";
                /**
                 * @description 表示フラグ (0:表示しない、1:表示する)
                 * @example 1
                 * @enum {string}
                 */
                displayFlag?: "0" | "1";
                /** @description 店舗別発注設定 */
                stores?: {
                    /**
                     * @description 店舗ID
                     * @example 1
                     */
                    storeId?: string;
                    /**
                     * @description 発注上限数
                     * @example 100
                     */
                    orderLimitAmount?: string;
                    /**
                     * @description 表示フラグ (0:表示しない、1:表示する)
                     * @example -1
                     * @enum {string}
                     */
                    displayFlag?: "-1" | "0" | "1";
                }[];
            };
        };
        /** @description 商品更新情報 */
        ProductUpdate: {
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId?: string;
            /**
             * @description 商品コード (20文字以内)
             * @example ITEM001
             */
            productCode?: string;
            /**
             * @description 商品名 (85文字以内)
             * @example 有機栽培コーヒー
             */
            productName?: string;
            /**
             * @description 商品カナ (85文字以内)
             * @example ユウキサイバイコーヒー
             */
            productKana?: string;
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 商品価格区分 (1:通常価格、2:オープン価格)
             * @example 1
             * @enum {string}
             */
            productPriceDivision?: "1" | "2";
            /**
             * @description 商品単価
             * @example 500
             */
            price?: string;
            /**
             * @description 会員価格
             * @example 450
             */
            customerPrice?: string;
            /**
             * @description 原価
             * @example 300
             */
            cost?: string;
            /**
             * @description 規格 (1000文字以内)
             * @example 豆の種類：アラビカ種、焙煎：中煎り
             */
            attribute?: string;
            /**
             * @description 説明 (1000文字以内)
             * @example 有機栽培されたコーヒー豆を使用し、香り高く仕上げました。
             */
            description?: string;
            /**
             * @description キャッチコピー (1000文字以内)
             * @example 豊かな香りと深い味わい
             */
            catchCopy?: string;
            /**
             * @description サイズ (85文字以内)
             * @example 200g
             */
            size?: string;
            /**
             * @description カラー (85文字以内)
             * @example ブラウン
             */
            color?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * @description グループコード (85文字以内)
             * @example COFFEE
             */
            groupCode?: string;
            /**
             * @description URL (255文字以内)
             * @example https://example.com/coffee
             */
            url?: string;
            /**
             * @description レシート印字商品名 (64文字以内)
             * @example 有機コーヒー
             */
            printReceiptProductName?: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @example 1
             * @enum {string}
             */
            displayFlag?: "0" | "1";
            /**
             * @description 商品区分 (0:通常商品、1:回数券、2:オプション商品)
             * @example 0
             * @enum {string}
             */
            division?: "0" | "1" | "2";
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description 売上区分 (0:売上対象、1:売上対象外)
             * @example 0
             * @enum {string}
             */
            salesDivision?: "0" | "1";
            /**
             * @description 在庫管理区分 (0:在庫管理対象、1:在庫管理対象外)
             * @example 0
             * @enum {string}
             */
            stockControlDivision?: "0" | "1";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /**
             * @description 社員販売割引率
             * @example 10
             */
            staffDiscountRate?: string;
            /**
             * @description 部門税設定参照フラグ (0:reduceTaxIdを使用、1:部門の税設定を使用)
             * @example 1
             * @enum {string}
             */
            useCategoryReduceTax?: "0" | "1";
            /**
             * @description 軽減税率ID
             *     標準:null
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 軽減税率用商品単価
             * @example 500
             */
            reduceTaxPrice?: string;
            /**
             * @description 軽減税率用商品会員単価
             * @example 450
             */
            reduceTaxCustomerPrice?: string;
            /**
             * @description 発注点
             * @example 10
             */
            orderPoint?: string;
            /**
             * @description 仕入原価
             * @example 300
             */
            purchaseCost?: string;
            /**
             * @description 品番
             * @example S12345
             */
            supplierProductNo?: string;
            /**
             * Format: date-time
             * @description 適用開始日時
             * @example 2023-01-01T00:00:00+09:00
             */
            appStartDateTime?: string;
            /** @description 商品価格 */
            prices?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 価格区分 (1:商品単価、2:会員単価)
                 * @example 1
                 * @enum {string}
                 */
                priceDivision?: "1" | "2";
                /**
                 * Format: date
                 * @description 適用開始日
                 * @example 2023-01-01
                 */
                startDate?: string;
                /**
                 * Format: date
                 * @description 適用終了日
                 * @example 2023-12-31
                 */
                endDate?: string;
                /**
                 * @description 価格
                 * @example 500
                 */
                price?: string;
            }[];
            /** @description 商品自由項目 */
            reserveItems?: {
                /**
                 * @description 自由項目番号
                 * @example 1
                 */
                no?: string;
                /**
                 * @description 自由項目値
                 * @example ドリップコーヒー
                 */
                value?: string;
            }[];
            /** @description 商品取扱店舗 */
            stores?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 商品オプショングループID
                 * @example 1
                 */
                productOptionGroupId?: string;
                /**
                 * @description 取扱区分 (0:販売する、1:販売しない)
                 * @example 0
                 * @enum {string}
                 */
                assignDivision?: "0" | "1";
            }[];
            /** @description 在庫引当商品 */
            inventoryReservations?: {
                /**
                 * @description 引当商品ID
                 * @example 2
                 */
                reservationProductId?: string;
                /**
                 * @description 引当個数
                 * @example 1
                 */
                reservationAmount?: string;
            }[];
            /** @description 商品属性項目 */
            attributeItems?: {
                /**
                 * @description コード
                 * @example CODE01
                 */
                code?: string;
                /**
                 * @description 項目番号
                 * @example 1
                 */
                no?: string;
            }[];
            /** @description 発注設定 */
            orderSetting?: {
                /** @description 継続区分 */
                continuationDivision?: string;
                /**
                 * @description 発注状態 (0:発注不可、1:発注可)
                 * @example 1
                 * @enum {string}
                 */
                orderStatusDivision?: "0" | "1";
                /** @description 発注不可理由 */
                orderNoReasonDivision?: string;
                /** @description 発注単位 */
                orderUnit?: {
                    /**
                     * @description 発注単位区分 (0:単位なし、1:単位あり)
                     * @example 0
                     * @enum {string}
                     */
                    division?: "0" | "1";
                    /**
                     * @description 発注数
                     * @example 1
                     */
                    num?: string;
                    /**
                     * @description 発注単位名
                     * @example ケース
                     */
                    name?: string;
                };
                /**
                 * @description 発注上限数
                 * @example 100
                 */
                orderLimitAmount?: string;
                /**
                 * @description 仕入先編集可能フラグ (0:不可、1:可能)
                 * @example 0
                 * @enum {string}
                 */
                orderSupplierEditable?: "0" | "1";
                /**
                 * @description PB商品区分 (0:NB、1:PB)
                 * @example 1
                 * @enum {string}
                 */
                pbDivision?: "0" | "1";
                /**
                 * @description 表示フラグ (0:表示しない、1:表示する)
                 * @example 1
                 * @enum {string}
                 */
                displayFlag?: "0" | "1";
                /** @description 店舗別発注設定 */
                stores?: {
                    /**
                     * @description 店舗ID
                     * @example 1
                     */
                    storeId?: string;
                    /**
                     * @description 発注上限数
                     * @example 100
                     */
                    orderLimitAmount?: string;
                    /**
                     * @description 表示フラグ (0:表示しない、1:表示する)
                     * @example -1
                     * @enum {string}
                     */
                    displayFlag?: "-1" | "0" | "1";
                }[];
            };
        };
        /** @description 商品一括登録情報 */
        ProductBulkCreate: {
            /** @description 登録する商品の配列 */
            items: components["schemas"]["ProductCreate"][];
        };
        /** @description 商品一括更新情報 */
        ProductBulkUpdate: {
            /** @description 更新する商品の配列 */
            items: components["schemas"]["ProductUpdate"][];
        };
        /** @description 商品価格情報 */
        ProductPrice: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 価格区分 (1:商品単価、2:会員単価)
             * @example 1
             * @enum {string}
             */
            priceDivision: "1" | "2";
            /**
             * Format: date
             * @description 適用開始日
             * @example 2023-01-01
             */
            startDate: string;
            /**
             * Format: date
             * @description 適用終了日
             * @example 2023-12-31
             */
            endDate?: string;
            /**
             * @description 価格
             * @example 500
             */
            price: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品価格変更履歴情報 */
        ProductPriceChange: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 価格区分 (1:商品単価、2:会員単価)
             * @example 1
             * @enum {string}
             */
            priceDivision: "1" | "2";
            /**
             * Format: date
             * @description 適用開始日
             * @example 2023-01-01
             */
            startDate: string;
            /**
             * Format: date
             * @description 適用終了日
             * @example 2023-12-31
             */
            endDate?: string;
            /**
             * @description 価格
             * @example 500
             */
            price: string;
            /**
             * @description 変更前価格
             * @example 450
             */
            oldPrice: string;
            /**
             * @description 変更スタッフID
             * @example 1
             */
            staffId?: string;
            /**
             * @description 変更スタッフ名
             * @example 山田太郎
             */
            staffName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime: string;
        };
        /** @description 商品予約項目情報 */
        ProductReserveItem: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 予約項目番号
             * @example 1
             */
            no: string;
            /**
             * @description 予約項目ラベル番号
             * @example 1
             */
            labelNo?: string;
            /**
             * @description 予約項目値
             * @example ドリップコーヒー
             */
            value: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品属性情報 */
        ProductAttribute: {
            /**
             * @description 属性番号
             * @example 1
             */
            attributeNo?: string;
            /**
             * @description 属性名称
             * @example カラー
             */
            attributeName: string;
            /**
             * @description 選択区分 (0:任意選択、1:必須選択)
             * @default 0
             * @example 0
             * @enum {string}
             */
            selectedDivision: "0" | "1";
            /**
             * @description 選択タイプ (0:一つ選択、1:複数選択)
             * @default 0
             * @example 0
             * @enum {string}
             */
            selectedType: "0" | "1";
            /**
             * @description 表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品属性項目情報 */
        ProductAttributeItem: {
            /**
             * @description 属性項目コード
             * @example CODE01
             */
            code?: string;
            /**
             * @description 属性番号
             * @example 1
             */
            attributeNo: string;
            /**
             * @description 属性項目名称
             * @example ブラック
             */
            attributeItemName: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description ステータス (0:無効、1:有効)
             * @default 1
             * @example 1
             * @enum {string}
             */
            status: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品店舗関連情報 */
        ProductStore: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description 取扱区分 (0:販売する、1:販売しない)
             * @default 0
             * @example 0
             * @enum {string}
             */
            assignDivision: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品在庫引当情報 */
        ProductInventoryReservation: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 引当商品ID
             * @example 2
             */
            reservationProductId: string;
            /**
             * @description 引当個数
             * @example 1
             */
            reservationAmount: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品予約項目ラベル情報 */
        ProductReserveItemLabel: {
            /**
             * @description 予約項目ラベル番号
             * @example 1
             */
            no?: string;
            /**
             * @description 予約項目ラベル名
             * @example 商品種別
             */
            name: string;
            /**
             * @description ステータス (0:無効、1:有効)
             * @default 1
             * @example 1
             * @enum {string}
             */
            status: "0" | "1";
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品画像情報 */
        ProductImage: {
            /**
             * @description 商品画像ID
             * @example 1
             */
            imageId?: string;
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 画像URL
             * @example https://example.com/images/product1.jpg
             */
            imageUrl: string;
            /**
             * @description 画像タイプ (1:メイン画像、2:アイコン画像、3:詳細画像)
             * @example 1
             * @enum {string}
             */
            imageType: "1" | "2" | "3";
            /**
             * @description 画像サイズ(バイト)
             * @example 10240
             */
            size?: string;
            /**
             * @description 画像幅
             * @example 800
             */
            width?: string;
            /**
             * @description 画像高さ
             * @example 600
             */
            height?: string;
            /**
             * @description 登録スタッフID
             * @example 1
             */
            staffId?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品画像アップロード情報 */
        ProductImageUpload: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 画像タイプ (1:メイン画像、2:アイコン画像、3:詳細画像)
             * @example 1
             * @enum {string}
             */
            imageType: "1" | "2" | "3";
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * Format: binary
             * @description 画像ファイル（JPEG、PNG形式）
             */
            image: string;
        };
        /** @description 取引情報 */
        Transaction: {
            /**
             * Format: int64
             * @description 取引ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /** @description 端末番号 */
            terminalNo: string;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description 取引日時
             */
            transactionDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /**
             * Format: double
             * @description 小計金額
             */
            subtotalAmount: number;
            /**
             * Format: double
             * @description 支払金額
             */
            paymentAmount: number;
            /**
             * Format: double
             * @description お釣り金額
             */
            changeAmount: number;
            /**
             * Format: double
             * @description ポイント使用額
             */
            pointAmount?: number | null;
            /** @description 支払種別
             *     * 1: 現金
             *     * 2: クレジットカード
             *     * 3: 電子マネー
             *     * 4: 商品券
             *     * 5: 複合決済
             *     * 6: その他 */
            paymentType: number;
            /** @description 取引ステータス
             *     * 1: 会計済
             *     * 2: 返品
             *     * 3: 取消 */
            status: number;
            /** @description レシート番号 */
            receiptNo: string;
            /** @description レシートテキスト */
            receiptText?: string | null;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description 取引作成リクエスト */
        TransactionCreate: {
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /**
             * Format: date-time
             * @description 取引日時
             */
            transactionDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /**
             * Format: double
             * @description 小計金額
             */
            subtotalAmount: number;
            /**
             * Format: double
             * @description 支払金額
             */
            paymentAmount: number;
            /**
             * Format: double
             * @description お釣り金額
             */
            changeAmount: number;
            /**
             * Format: double
             * @description ポイント使用額
             */
            pointAmount?: number | null;
            /** @description 支払種別
             *     * 1: 現金
             *     * 2: クレジットカード
             *     * 3: 電子マネー
             *     * 4: 商品券
             *     * 5: 複合決済
             *     * 6: その他 */
            paymentType: number;
            /** @description 取引ステータス
             *     * 1: 会計済
             *     * 2: 返品
             *     * 3: 取消 */
            status: number;
            /** @description レシート番号 */
            receiptNo: string;
            /** @description レシートテキスト */
            receiptText?: string | null;
            /** @description メモ */
            memo?: string | null;
            /** @description 取引詳細 */
            details: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity: number;
                /**
                 * Format: double
                 * @description 単品値引額
                 */
                unitDiscountAmount?: number | null;
                /**
                 * Format: double
                 * @description 単品値引率
                 */
                unitDiscountRate?: number | null;
                /** @description 単品値引種別
                 *     * 1: 金額値引
                 *     * 2: 率値引 */
                unitDiscountType?: number | null;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType: number;
                /** @description 明細種別
                 *     * 1: 通常商品
                 *     * 2: セット親商品
                 *     * 3: セット子商品
                 *     * 4: 返品親明細
                 *     * 5: 返品子明細
                 *     * 6: 訂正明細
                 *     * 7: 取引値引
                 *     * 8: 小計値引
                 *     * 9: 小計割引
                 *     * 10: クーポン明細 */
                detailType: number;
            }[];
            /** @description 支払明細 */
            payments: {
                /**
                 * Format: int64
                 * @description 支払方法ID
                 */
                paymentMethodId: number;
                /** @description 支払方法名 */
                paymentMethodName: string;
                /**
                 * Format: double
                 * @description 支払金額
                 */
                amount: number;
                /** @description 決済番号 */
                paymentNo?: string | null;
                /**
                 * Format: int64
                 * @description カード会社ID
                 */
                cardCompanyId?: number | null;
                /** @description カード会社名 */
                cardCompanyName?: string | null;
            }[];
        };
        /** @description 取引更新リクエスト */
        TransactionUpdate: {
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description 取引ステータス
             *     * 1: 会計済
             *     * 2: 返品
             *     * 3: 取消 */
            status?: number;
            /** @description メモ */
            memo?: string | null;
        };
        /** @description 取引詳細情報 */
        TransactionDetail: {
            /**
             * Format: int64
             * @description 取引明細ID
             */
            id: number;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId: number;
            /** @description 行番号 */
            lineNo: number;
            /**
             * Format: int64
             * @description 商品ID
             */
            productId?: number | null;
            /** @description 商品コード */
            productCode?: string | null;
            /** @description 商品名 */
            productName: string;
            /**
             * Format: int64
             * @description 部門ID
             */
            categoryId?: number | null;
            /** @description 部門名 */
            categoryName?: string | null;
            /**
             * Format: double
             * @description 単価
             */
            price: number;
            /**
             * Format: double
             * @description 数量
             */
            quantity: number;
            /**
             * Format: double
             * @description 単品値引額
             */
            unitDiscountAmount?: number | null;
            /**
             * Format: double
             * @description 単品値引率
             */
            unitDiscountRate?: number | null;
            /** @description 単品値引種別
             *     * 1: 金額値引
             *     * 2: 率値引 */
            unitDiscountType?: number | null;
            /**
             * Format: double
             * @description 小計金額
             */
            subtotalAmount: number;
            /**
             * Format: double
             * @description 税率
             */
            taxRate: number;
            /** @description 税種別
             *     * 1: 内税
             *     * 2: 外税 */
            taxType: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description 明細種別
             *     * 1: 通常商品
             *     * 2: セット親商品
             *     * 3: セット子商品
             *     * 4: 返品親明細
             *     * 5: 返品子明細
             *     * 6: 訂正明細
             *     * 7: 取引値引
             *     * 8: 小計値引
             *     * 9: 小計割引
             *     * 10: クーポン明細 */
            detailType: number;
            /** @description 親明細行番号 */
            parentLineNo?: number | null;
            /**
             * Format: int64
             * @description 値引ID
             */
            discountId?: number | null;
            /** @description 値引名 */
            discountName?: string | null;
            /**
             * Format: int64
             * @description クーポンID
             */
            couponId?: number | null;
            /** @description クーポン名 */
            couponName?: string | null;
            /** @description クーポンコード */
            couponCode?: string | null;
            /** @description 免税区分
             *     * 0: 課税
             *     * 1: 免税
             *     * 2: 非課税 */
            taxFreeDivision: number;
            /** @description 備考 */
            remark?: string | null;
            /**
             * Format: double
             * @description 原価
             */
            cost?: number | null;
            /** @description 在庫取引区分
             *     * 1: 在庫引当あり
             *     * 2: 在庫引当なし */
            stockTransactionType?: number | null;
            /** @description 原価区分
             *     * 1: 移動平均原価
             *     * 2: 最終仕入原価
             *     * 3: 前日在庫単価 */
            costType?: number | null;
            /**
             * Format: int64
             * @description 在庫引当ID
             */
            stockReserveId?: number | null;
            /** @description シリアルコード */
            serialCode?: string | null;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description 預かり取引情報 */
        Layaway: {
            /**
             * Format: int64
             * @description 預かり取引ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description 預かり日時
             */
            layawayDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description ステータス
             *     * 1: 預かり
             *     * 2: 終了 */
            status: number;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId?: number | null;
            /** @description 預かり商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName?: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /** @description 部門名 */
                categoryName?: string | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price?: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity?: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount?: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate?: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType?: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount?: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount?: number;
            }[];
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description 預かり取引作成リクエスト */
        LayawayCreate: {
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /**
             * Format: date-time
             * @description 預かり日時
             */
            layawayDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description メモ */
            memo?: string | null;
            /** @description 預かり商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount: number;
            }[];
        };
        /** @description 事前会計情報 */
        PreSale: {
            /**
             * Format: int64
             * @description 事前会計ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description 事前会計日時
             */
            preSaleDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description ステータス
             *     * 1: 未会計
             *     * 2: 会計済 */
            status: number;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId?: number | null;
            /** @description 事前会計商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName?: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /** @description 部門名 */
                categoryName?: string | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price?: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity?: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount?: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate?: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType?: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount?: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount?: number;
            }[];
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description 事前会計作成リクエスト */
        PreSaleCreate: {
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /**
             * Format: date-time
             * @description 事前会計日時
             */
            preSaleDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description メモ */
            memo?: string | null;
            /** @description 事前会計商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount: number;
            }[];
        };
        /** @description 事前会計更新リクエスト */
        PreSaleUpdate: {
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description ステータス
             *     * 1: 未会計
             *     * 2: 会計済 */
            status?: number;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId?: number | null;
        };
        /** @description チケット取引情報 */
        TicketTransaction: {
            /**
             * Format: int64
             * @description チケット取引ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /** @description チケットコード */
            ticketCode: string;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description チケット発行日時
             */
            ticketDateTime: string;
            /**
             * Format: date
             * @description 有効期限
             */
            expirationDate?: string | null;
            /**
             * Format: date-time
             * @description 使用日時
             */
            usedDateTime?: string | null;
            /** @description ステータスタイプ
             *     * 1: 未使用
             *     * 2: 使用済
             *     * 3: 期限切れ
             *     * 4: 取消 */
            statusType: number;
            /**
             * Format: int64
             * @description 発行時取引ID
             */
            transactionId: number;
            /**
             * Format: int64
             * @description 使用時取引ID
             */
            usedTransactionId?: number | null;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 商品ID
             */
            productId?: number | null;
            /** @description 商品コード */
            productCode?: string | null;
            /** @description 商品名 */
            productName: string;
            /**
             * Format: double
             * @description 価格
             */
            price: number;
            /** @description 数量 */
            quantity: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        Customer: {
            /** @description 会員ID */
            customerId?: string;
            /** @description 会員コード */
            customerCode?: string;
            /** @description 会員番号 */
            customerNo?: string;
            /** @description 会員ランク */
            rank?: string;
            /** @description スタッフランク */
            staffRank?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /**
             * @description 性別(0:不明, 1:男性, 2:女性)
             * @enum {string}
             */
            sex?: "0" | "1" | "2";
            /** @description バーコード */
            barcode?: string;
            /**
             * Format: date
             * @description 生年月日
             */
            birthDate?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description 携帯電話番号 */
            mobileNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description メールアドレス2 */
            mailAddress2?: string;
            /** @description メールアドレス3 */
            mailAddress3?: string;
            /** @description 会社名 */
            companyName?: string;
            /** @description 部署名 */
            departmentName?: string;
            /** @description 担当者フラグ */
            managerFlag?: boolean;
            /** @description スタッフフラグ */
            isStaff?: boolean;
            /** @description ポイント */
            points?: number;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 備考 */
            note?: string;
            /** @description 状態(1:利用, 2:停止) */
            statusId?: number;
            /**
             * Format: date
             * @description 入会日
             */
            enterDate?: string;
            /**
             * Format: date
             * @description 退会日
             */
            suspendDate?: string;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        CustomerCreate: {
            /** @description 会員コード */
            customerCode: string;
            /** @description 会員番号 */
            customerNo?: string;
            /** @description 会員ランク */
            rank?: string;
            /** @description スタッフランク */
            staffRank?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /**
             * @description 性別(0:不明, 1:男性, 2:女性)
             * @enum {string}
             */
            sex?: "0" | "1" | "2";
            /** @description バーコード */
            barcode?: string;
            /**
             * Format: date
             * @description 生年月日
             */
            birthDate?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description 携帯電話番号 */
            mobileNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description メールアドレス2 */
            mailAddress2?: string;
            /** @description メールアドレス3 */
            mailAddress3?: string;
            /** @description 会社名 */
            companyName?: string;
            /** @description 部署名 */
            departmentName?: string;
            /** @description 担当者フラグ */
            managerFlag?: boolean;
            /** @description スタッフフラグ */
            isStaff?: boolean;
            /** @description ポイント */
            points?: number;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 備考 */
            note?: string;
            /** @description 状態(1:利用, 2:停止) */
            statusId?: number;
            /**
             * Format: date
             * @description 入会日
             */
            enterDate?: string;
            /**
             * Format: date
             * @description 退会日
             */
            suspendDate?: string;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerUpdate: {
            /** @description 会員コード */
            customerCode?: string;
            /** @description 会員番号 */
            customerNo?: string;
            /** @description 会員ランク */
            rank?: string;
            /** @description スタッフランク */
            staffRank?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /**
             * @description 性別(0:不明, 1:男性, 2:女性)
             * @enum {string}
             */
            sex?: "0" | "1" | "2";
            /** @description バーコード */
            barcode?: string;
            /**
             * Format: date
             * @description 生年月日
             */
            birthDate?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description 携帯電話番号 */
            mobileNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description メールアドレス2 */
            mailAddress2?: string;
            /** @description メールアドレス3 */
            mailAddress3?: string;
            /** @description 会社名 */
            companyName?: string;
            /** @description 部署名 */
            departmentName?: string;
            /** @description 担当者フラグ */
            managerFlag?: boolean;
            /** @description スタッフフラグ */
            isStaff?: boolean;
            /** @description ポイント */
            points?: number;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 備考 */
            note?: string;
            /** @description 状態(1:利用, 2:停止) */
            statusId?: number;
            /**
             * Format: date
             * @description 入会日
             */
            enterDate?: string;
            /**
             * Format: date
             * @description 退会日
             */
            suspendDate?: string;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerBulkUpdate: {
            /** @description 会員情報リスト */
            customers: ({
                /** @description 会員ID */
                customerId: string;
            } & components["schemas"]["CustomerUpdate"])[];
        };
        CustomerBulkCreate: {
            /** @description 会員情報リスト */
            customers: components["schemas"]["CustomerCreate"][];
        };
        CustomerPoint: {
            /** @description 会員ID */
            customerId?: string;
            /** @description ポイント */
            points?: number;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerPointUpdate: {
            /** @description ポイント */
            points: number;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerPointRelativeUpdate: {
            /** @description 加減算ポイント（マイナスの場合は減算） */
            points: number;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerRank: {
            /** @description 会員ランクID */
            rankId?: string;
            /** @description 会員ランク名 */
            rankName?: string;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /**
             * @description ポイント有効期限タイプ（0:なし, 1:年月設定, 2:付与から一定期間）
             * @enum {string}
             */
            pointExpirationType?: "0" | "1" | "2";
            /** @description ポイント有効期限月 */
            pointExpirationMonth?: number;
            /** @description ポイント有効期限日 */
            pointExpirationDay?: number;
            /** @description ポイント有効期間（日） */
            pointExpirationPeriod?: number;
            /** @description 備考 */
            note?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        CustomerRankCreate: {
            /** @description 会員ランク名 */
            rankName: string;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /**
             * @description ポイント有効期限タイプ（0:なし, 1:年月設定, 2:付与から一定期間）
             * @enum {string}
             */
            pointExpirationType?: "0" | "1" | "2";
            /** @description ポイント有効期限月 */
            pointExpirationMonth?: number;
            /** @description ポイント有効期限日 */
            pointExpirationDay?: number;
            /** @description ポイント有効期間（日） */
            pointExpirationPeriod?: number;
            /** @description 備考 */
            note?: string;
        };
        CustomerRankUpdate: {
            /** @description 会員ランク名 */
            rankName?: string;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /**
             * @description ポイント有効期限タイプ（0:なし, 1:年月設定, 2:付与から一定期間）
             * @enum {string}
             */
            pointExpirationType?: "0" | "1" | "2";
            /** @description ポイント有効期限月 */
            pointExpirationMonth?: number;
            /** @description ポイント有効期限日 */
            pointExpirationDay?: number;
            /** @description ポイント有効期間（日） */
            pointExpirationPeriod?: number;
            /** @description 備考 */
            note?: string;
        };
        StaffRank: {
            /** @description スタッフランクID */
            staffRankId?: string;
            /** @description スタッフランク名 */
            staffRankName?: string;
            /**
             * Format: float
             * @description 社員割引率
             */
            discountRate?: number;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /** @description 備考 */
            note?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        StaffRankCreate: {
            /** @description スタッフランク名 */
            staffRankName: string;
            /**
             * Format: float
             * @description 社員割引率
             */
            discountRate?: number;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /** @description 備考 */
            note?: string;
        };
        StaffRankUpdate: {
            /** @description スタッフランク名 */
            staffRankName?: string;
            /**
             * Format: float
             * @description 社員割引率
             */
            discountRate?: number;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /** @description 備考 */
            note?: string;
        };
        CustomerRequired: {
            /** @description 名前必須フラグ */
            firstName?: boolean;
            /** @description 苗字必須フラグ */
            lastName?: boolean;
            /** @description 名前カナ必須フラグ */
            firstNameKana?: boolean;
            /** @description 苗字カナ必須フラグ */
            lastNameKana?: boolean;
            /** @description 性別必須フラグ */
            sex?: boolean;
            /** @description 生年月日必須フラグ */
            birthDate?: boolean;
            /** @description 郵便番号必須フラグ */
            zipCode?: boolean;
            /** @description 住所必須フラグ */
            address?: boolean;
            /** @description 電話番号必須フラグ */
            phoneNumber?: boolean;
            /** @description 携帯電話番号必須フラグ */
            mobileNumber?: boolean;
            /** @description メールアドレス必須フラグ */
            mailAddress?: boolean;
            /** @description 会社名必須フラグ */
            companyName?: boolean;
            /** @description 部署名必須フラグ */
            departmentName?: boolean;
        };
        /** @description 在庫情報 */
        Stock: {
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /**
             * Format: float
             * @description 在庫数
             */
            quantity: number;
            /**
             * Format: float
             * @description 予約在庫数
             */
            reservedQuantity?: number;
            /**
             * Format: float
             * @description 棚卸前在庫数
             */
            originalQuantity?: number;
            /**
             * Format: date-time
             * @description 最終更新日時
             */
            lastUpdateDate?: string;
        };
        /** @description 在庫更新情報 */
        StockUpdate: {
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /**
             * Format: float
             * @description 在庫数
             */
            quantity: number;
        };
        /** @description 在庫変動履歴情報 */
        StockChange: {
            /** @description 在庫変動ID */
            stockChangeId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 区分（1:取引、2:入庫、3:出庫、4:棚卸、5:発注、6:受注、7:ロス、8:その他） */
            division: number;
            /** @description 区分名 */
            divisionName?: string;
            /**
             * Format: float
             * @description 変動前在庫数
             */
            beforeQuantity: number;
            /**
             * Format: float
             * @description 変動数
             */
            changeQuantity: number;
            /**
             * Format: float
             * @description 変動後在庫数
             */
            afterQuantity: number;
            /**
             * Format: date
             * @description 変動日
             */
            targetDate: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
            /** @description 関連ID（取引ID、入庫ID、出庫ID等） */
            refId?: number;
            /** @description メモ */
            memo?: string;
        };
        /** @description セール情報 */
        Bargain: {
            /**
             * @description セールID
             * @example 1
             */
            bargainId: string;
            /**
             * @description セール名
             * @example 夏物商品セール
             */
            bargainName: string;
            /**
             * Format: date
             * @description セール開始日 [YYYY-MM-DD]
             * @example 2025-07-01
             */
            termStart: string;
            /**
             * Format: date
             * @description セール終了日 [YYYY-MM-DD]
             * @example 2025-07-31
             */
            termEnd: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description セール登録情報 */
        BargainCreate: {
            /**
             * @description セール名
             * @example 夏物商品セール
             */
            bargainName: string;
            /**
             * Format: date
             * @description セール開始日 [YYYY-MM-DD]
             * @example 2025-07-01
             */
            termStart: string;
            /**
             * Format: date
             * @description セール終了日 [YYYY-MM-DD]
             * @example 2025-07-31
             */
            termEnd: string;
        };
        /** @description セール更新情報 */
        BargainUpdate: {
            /**
             * @description セール名
             * @example 夏物商品セール
             */
            bargainName?: string;
            /**
             * Format: date
             * @description セール開始日 [YYYY-MM-DD]
             * @example 2025-07-01
             */
            termStart?: string;
            /**
             * Format: date
             * @description セール終了日 [YYYY-MM-DD]
             * @example 2025-07-31
             */
            termEnd?: string;
        };
        /** @description セール店舗情報 */
        BargainStore: {
            /**
             * @description セール店舗ID
             * @example 1
             */
            bargainStoreId: string;
            /**
             * @description セールID
             * @example 1
             */
            bargainId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description セール店舗登録情報 */
        BargainStoreCreate: {
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
        };
        /** @description セール店舗更新情報 */
        BargainStoreUpdate: {
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId?: string;
        };
        /** @description セール商品情報 */
        BargainProduct: {
            /**
             * @description セール商品ID
             * @example 1
             */
            bargainProductId: string;
            /**
             * @description セールID
             * @example 1
             */
            bargainId: string;
            /**
             * @description 対象区分 (1:部門、2:商品、3:グループコード)
             * @example 2
             * @enum {string}
             */
            targetDivision: "1" | "2" | "3";
            /**
             * @description 対象ID (部門ID、商品ID、グループコードのいずれか)
             * @example 10001
             */
            targetId: string;
            /**
             * @description 割引区分 (1:割引、2:値引、3:価格指定)
             * @example 1
             * @enum {string}
             */
            division: "1" | "2" | "3";
            /**
             * @description 値 (割引率、値引額、または価格)
             * @example 20
             */
            value: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description セール商品登録情報 */
        BargainProductCreate: {
            /**
             * @description 対象区分 (1:部門、2:商品、3:グループコード)
             * @example 2
             * @enum {string}
             */
            targetDivision: "1" | "2" | "3";
            /**
             * @description 対象ID (部門ID、商品ID、グループコードのいずれか)
             * @example 10001
             */
            targetId: string;
            /**
             * @description 割引区分 (1:割引、2:値引、3:価格指定)
             * @example 1
             * @enum {string}
             */
            division: "1" | "2" | "3";
            /**
             * @description 値 (割引率、値引額、または価格)
             * @example 20
             */
            value: string;
        };
        /** @description セール商品更新情報 */
        BargainProductUpdate: {
            /**
             * @description 対象区分 (1:部門、2:商品、3:グループコード)
             * @example 2
             * @enum {string}
             */
            targetDivision?: "1" | "2" | "3";
            /**
             * @description 対象ID (部門ID、商品ID、グループコードのいずれか)
             * @example 10001
             */
            targetId?: string;
            /**
             * @description 割引区分 (1:割引、2:値引、3:価格指定)
             * @example 1
             * @enum {string}
             */
            division?: "1" | "2" | "3";
            /**
             * @description 値 (割引率、値引額、または価格)
             * @example 20
             */
            value?: string;
        };
        /** @description オプショングループ情報 */
        ProductOptionGroup: {
            /**
             * @description オプショングループID
             * @example 1
             */
            productOptionGroupId: string;
            /**
             * @description オプショングループ名
             * @example トッピング
             */
            productOptionGroupName: string;
            /**
             * @description 条件ID (0:条件なし、1:全体、2:部門毎)
             * @example 1
             * @enum {string}
             */
            conditionId: "0" | "1" | "2";
            /**
             * @description 適用条件の上限
             * @example 3
             */
            max?: string;
            /**
             * @description 適用条件の下限
             * @example 1
             */
            min?: string;
            /**
             * @description 同期区分
             * @example 0
             */
            syncDivision?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description オプショングループ登録情報 */
        ProductOptionGroupCreate: {
            /**
             * @description オプショングループ名
             * @example トッピング
             */
            productOptionGroupName: string;
            /**
             * @description 条件ID (0:条件なし、1:全体、2:部門毎)
             * @example 1
             * @enum {string}
             */
            conditionId: "0" | "1" | "2";
            /**
             * @description 適用条件の上限
             * @example 3
             */
            max?: string;
            /**
             * @description 適用条件の下限
             * @example 1
             */
            min?: string;
            /** @description オプショングループ商品 */
            products: {
                /**
                 * @description 商品ID
                 * @example 12345
                 */
                productId: string;
            }[];
        };
        /** @description オプショングループ更新情報 */
        ProductOptionGroupUpdate: {
            /**
             * @description オプショングループ名
             * @example トッピング
             */
            productOptionGroupName?: string;
            /**
             * @description 条件ID (0:条件なし、1:全体、2:部門毎)
             * @example 1
             * @enum {string}
             */
            conditionId?: "0" | "1" | "2";
            /**
             * @description 適用条件の上限
             * @example 3
             */
            max?: string;
            /**
             * @description 適用条件の下限
             * @example 1
             */
            min?: string;
            /** @description オプショングループ商品 */
            products?: {
                /**
                 * @description 商品ID
                 * @example 12345
                 */
                productId: string;
            }[];
        };
        /** @description バンドル販売情報 */
        Bundle: {
            /**
             * @description 商品バンドルグループID
             * @example 1
             */
            productBundleGroupId: string;
            /**
             * @description 商品バンドルグループ名
             * @example 春の特別セット
             */
            productBundleGroupName: string;
            /**
             * @description 種類 (1:バンドル売り+販売金額指定、2:バンドル売り+値引金額指定、3:バンドル売り+割引率指定、4:セット売り+販売金額指定)
             * @example 1
             * @enum {string}
             */
            type: "1" | "2" | "3" | "4";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 数量
             * @example 2
             */
            quantity?: string;
            /**
             * @description 種類=1,4の時は販売金額、種類=2の時は値引金額、種類=3の時は割引率
             * @example 1000
             */
            value: string;
            /**
             * @description 軽減税率適用時の値
             * @example 900
             */
            reduceTaxValue?: string;
            /**
             * @description 優先順位
             * @example 1
             */
            priority?: string;
            /**
             * Format: date
             * @description 適用開始日 [YYYY-MM-DD]
             * @example 2025-04-01
             */
            termFrom: string;
            /**
             * Format: date
             * @description 適用終了日 [YYYY-MM-DD]
             * @example 2025-04-30
             */
            termTo: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象区分 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-03-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-03-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description バンドル販売登録情報 */
        BundleCreate: {
            /**
             * @description 商品バンドルグループ名
             * @example 春の特別セット
             */
            productBundleGroupName: string;
            /**
             * @description 種類 (1:バンドル売り+販売金額指定、2:バンドル売り+値引金額指定、3:バンドル売り+割引率指定、4:セット売り+販売金額指定)
             * @example 1
             * @enum {string}
             */
            type: "1" | "2" | "3" | "4";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 数量
             * @example 2
             */
            quantity?: string;
            /**
             * @description 種類=1,4の時は販売金額、種類=2の時は値引金額、種類=3の時は割引率
             * @example 1000
             */
            value: string;
            /**
             * @description 軽減税率適用時の値
             * @example 900
             */
            reduceTaxValue?: string;
            /**
             * @description 優先順位
             * @example 1
             */
            priority?: string;
            /**
             * Format: date
             * @description 適用開始日 [YYYY-MM-DD]
             * @example 2025-04-01
             */
            termFrom: string;
            /**
             * Format: date
             * @description 適用終了日 [YYYY-MM-DD]
             * @example 2025-04-30
             */
            termTo: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象区分 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /** @description 対象商品 */
            products: {
                /**
                 * @description 部門ID
                 * @example 101
                 */
                categoryId: string;
                /**
                 * @description 商品ID
                 * @example 10001
                 */
                productId: string;
                /**
                 * @description 商品グループコード
                 * @example SPR2024
                 */
                productGroupCode: string;
            }[];
        };
        /** @description バンドル販売更新情報 */
        BundleUpdate: {
            /**
             * @description 商品バンドルグループ名
             * @example 春の特別セット
             */
            productBundleGroupName?: string;
            /**
             * @description 種類 (1:バンドル売り+販売金額指定、2:バンドル売り+値引金額指定、3:バンドル売り+割引率指定、4:セット売り+販売金額指定)
             * @example 1
             * @enum {string}
             */
            type?: "1" | "2" | "3" | "4";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 数量
             * @example 2
             */
            quantity?: string;
            /**
             * @description 種類=1,4の時は販売金額、種類=2の時は値引金額、種類=3の時は割引率
             * @example 1000
             */
            value?: string;
            /**
             * @description 軽減税率適用時の値
             * @example 900
             */
            reduceTaxValue?: string;
            /**
             * @description 優先順位
             * @example 1
             */
            priority?: string;
            /**
             * Format: date
             * @description 適用開始日 [YYYY-MM-DD]
             * @example 2025-04-01
             */
            termFrom?: string;
            /**
             * Format: date
             * @description 適用終了日 [YYYY-MM-DD]
             * @example 2025-04-30
             */
            termTo?: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象区分 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /** @description 対象商品 */
            products?: {
                /**
                 * @description 部門ID
                 * @example 101
                 */
                categoryId?: string;
                /**
                 * @description 商品ID
                 * @example 10001
                 */
                productId?: string;
                /**
                 * @description 商品グループコード
                 * @example SPR2024
                 */
                productGroupCode?: string;
            }[];
        };
        /** @description 店舗情報 */
        Store: {
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 店舗名
             * @example 東京本店
             */
            storeName: string;
            /**
             * @description 店舗名略称
             * @example 東京
             */
            storeAbbr?: string;
            /**
             * @description 店舗コード
             * @example TOKYO01
             */
            storeCode?: string;
            /**
             * @description 店舗区分 (0:通常店舗、1:倉庫)
             * @example 0
             * @enum {string}
             */
            storeDivision?: "0" | "1";
            /**
             * @description 郵便番号
             * @example 100-0001
             */
            postalCode?: string;
            /**
             * @description 住所
             * @example 東京都千代田区丸の内1-1-1
             */
            address?: string;
            /**
             * @description 電話番号
             * @example 03-1234-5678
             */
            phoneNumber?: string;
            /**
             * @description FAX番号
             * @example 03-1234-5679
             */
            faxNumber?: string;
            /**
             * @description メールアドレス
             * @example tokyo@example.com
             */
            mailAddress?: string;
            /**
             * @description 営業開始時間
             * @example 10:00
             */
            openingTime?: string;
            /**
             * @description 営業終了時間
             * @example 20:00
             */
            closingTime?: string;
            /**
             * @description 定休日
             * @example 日曜日
             */
            regularHoliday?: string;
            /**
             * @description URL
             * @example https://example.com/store/tokyo
             */
            url?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 店舗登録情報 */
        StoreCreate: {
            /**
             * @description 店舗名
             * @example 東京本店
             */
            storeName: string;
            /**
             * @description 店舗名略称
             * @example 東京
             */
            storeAbbr?: string;
            /**
             * @description 店舗コード
             * @example TOKYO01
             */
            storeCode?: string;
            /**
             * @description 店舗区分 (0:通常店舗、1:倉庫)
             * @default 0
             * @example 0
             * @enum {string}
             */
            storeDivision: "0" | "1";
            /**
             * @description 郵便番号
             * @example 100-0001
             */
            postalCode?: string;
            /**
             * @description 住所
             * @example 東京都千代田区丸の内1-1-1
             */
            address?: string;
            /**
             * @description 電話番号
             * @example 03-1234-5678
             */
            phoneNumber?: string;
            /**
             * @description FAX番号
             * @example 03-1234-5679
             */
            faxNumber?: string;
            /**
             * @description メールアドレス
             * @example tokyo@example.com
             */
            mailAddress?: string;
            /**
             * @description 営業開始時間
             * @example 10:00
             */
            openingTime?: string;
            /**
             * @description 営業終了時間
             * @example 20:00
             */
            closingTime?: string;
            /**
             * @description 定休日
             * @example 日曜日
             */
            regularHoliday?: string;
            /**
             * @description URL
             * @example https://example.com/store/tokyo
             */
            url?: string;
        };
        /** @description 店舗更新情報 */
        StoreUpdate: {
            /**
             * @description 店舗名
             * @example 東京本店
             */
            storeName?: string;
            /**
             * @description 店舗名略称
             * @example 東京
             */
            storeAbbr?: string;
            /**
             * @description 店舗コード
             * @example TOKYO01
             */
            storeCode?: string;
            /**
             * @description 店舗区分 (0:通常店舗、1:倉庫)
             * @example 0
             * @enum {string}
             */
            storeDivision?: "0" | "1";
            /**
             * @description 郵便番号
             * @example 100-0001
             */
            postalCode?: string;
            /**
             * @description 住所
             * @example 東京都千代田区丸の内1-1-1
             */
            address?: string;
            /**
             * @description 電話番号
             * @example 03-1234-5678
             */
            phoneNumber?: string;
            /**
             * @description FAX番号
             * @example 03-1234-5679
             */
            faxNumber?: string;
            /**
             * @description メールアドレス
             * @example tokyo@example.com
             */
            mailAddress?: string;
            /**
             * @description 営業開始時間
             * @example 10:00
             */
            openingTime?: string;
            /**
             * @description 営業終了時間
             * @example 20:00
             */
            closingTime?: string;
            /**
             * @description 定休日
             * @example 日曜日
             */
            regularHoliday?: string;
            /**
             * @description URL
             * @example https://example.com/store/tokyo
             */
            url?: string;
        };
        /** @description 店舗分類情報 */
        StoreGroup: {
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId: string;
            /**
             * @description 店舗分類名
             * @example 首都圏エリア
             */
            storeGroupName: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 店舗分類登録情報 */
        StoreGroupCreate: {
            /**
             * @description 店舗分類名
             * @example 首都圏エリア
             */
            storeGroupName: string;
        };
        /** @description 店舗分類更新情報 */
        StoreGroupUpdate: {
            /**
             * @description 店舗分類名
             * @example 首都圏エリア
             */
            storeGroupName?: string;
        };
        /** @description 店舗分類項目情報 */
        StoreGroupItem: {
            /**
             * @description 店舗分類項目ID
             * @example 1
             */
            storeGroupItemId: string;
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId: string;
            /**
             * @description 店舗ID
             * @example 101
             */
            storeId: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 店舗分類項目登録情報 */
        StoreGroupItemCreate: {
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId: string;
            /**
             * @description 店舗ID
             * @example 101
             */
            storeId: string;
        };
        /** @description 店舗分類項目更新情報 */
        StoreGroupItemUpdate: {
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId?: string;
            /**
             * @description 店舗ID
             * @example 101
             */
            storeId?: string;
        };
        Staff: {
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフコード */
            staffCode?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /** @description 電話番号 */
            tel?: string;
            /** @description 携帯電話番号 */
            mobilePhone?: string;
            /** @description メールアドレス */
            mail?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description パスワード（取得時は返却されません） */
            password?: string;
            /**
             * @description 権限(0:なし, 1:店舗管理者, 2:店舗スタッフ, 3:システム管理者)
             * @enum {string}
             */
            staffAuthorization?: "0" | "1" | "2" | "3";
            /** @description 販売パスワード（取得時は返却されません） */
            salePassword?: string;
            /** @description 稼働開始時間（HH:mm） */
            startAtHourOfDay?: string;
            /** @description 稼働終了時間（HH:mm） */
            endAtHourOfDay?: string;
            /** @description 所属店舗IDリスト */
            storeIds?: string[];
            /** @description 役割IDリスト */
            roleIds?: string[];
            /**
             * @description ステータス(1:有効, 2:無効)
             * @enum {string}
             */
            status?: "1" | "2";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        StaffCreate: {
            /** @description スタッフコード */
            staffCode: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /** @description 電話番号 */
            tel?: string;
            /** @description 携帯電話番号 */
            mobilePhone?: string;
            /** @description メールアドレス */
            mail?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description パスワード */
            password: string;
            /**
             * @description 権限(0:なし, 1:店舗管理者, 2:店舗スタッフ, 3:システム管理者)
             * @enum {string}
             */
            staffAuthorization: "0" | "1" | "2" | "3";
            /** @description 販売パスワード */
            salePassword?: string;
            /** @description 稼働開始時間（HH:mm） */
            startAtHourOfDay?: string;
            /** @description 稼働終了時間（HH:mm） */
            endAtHourOfDay?: string;
            /** @description 所属店舗IDリスト */
            storeIds?: string[];
            /** @description 役割IDリスト */
            roleIds?: string[];
            /**
             * @description ステータス(1:有効, 2:無効)
             * @enum {string}
             */
            status?: "1" | "2";
        };
        StaffUpdate: {
            /** @description スタッフコード */
            staffCode?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /** @description 電話番号 */
            tel?: string;
            /** @description 携帯電話番号 */
            mobilePhone?: string;
            /** @description メールアドレス */
            mail?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description パスワード */
            password?: string;
            /**
             * @description 権限(0:なし, 1:店舗管理者, 2:店舗スタッフ, 3:システム管理者)
             * @enum {string}
             */
            staffAuthorization?: "0" | "1" | "2" | "3";
            /** @description 販売パスワード */
            salePassword?: string;
            /** @description 稼働開始時間（HH:mm） */
            startAtHourOfDay?: string;
            /** @description 稼働終了時間（HH:mm） */
            endAtHourOfDay?: string;
            /** @description 所属店舗IDリスト */
            storeIds?: string[];
            /** @description 役割IDリスト */
            roleIds?: string[];
            /**
             * @description ステータス(1:有効, 2:無効)
             * @enum {string}
             */
            status?: "1" | "2";
        };
        Role: {
            /** @description 役割ID */
            roleId?: string;
            /** @description 役割名 */
            roleName?: string;
            /** @description 権限リスト */
            permissions?: {
                /** @description 権限ID */
                permissionId?: string;
                /** @description 権限名 */
                permissionName?: string;
                /**
                 * @description 権限値(0:無効, 1:有効)
                 * @enum {integer}
                 */
                value?: 0 | 1;
            }[];
            /** @description 備考 */
            note?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        RoleCreate: {
            /** @description 役割名 */
            roleName: string;
            /** @description 権限リスト */
            permissions: {
                /** @description 権限ID */
                permissionId: string;
                /**
                 * @description 権限値(0:無効, 1:有効)
                 * @enum {integer}
                 */
                value: 0 | 1;
            }[];
            /** @description 備考 */
            note?: string;
        };
        RoleUpdate: {
            /** @description 役割名 */
            roleName?: string;
            /** @description 権限リスト */
            permissions?: {
                /** @description 権限ID */
                permissionId: string;
                /**
                 * @description 権限値(0:無効, 1:有効)
                 * @enum {integer}
                 */
                value: 0 | 1;
            }[];
            /** @description 備考 */
            note?: string;
        };
        MonthlyBudget: {
            /** @description 予算ID */
            budgetId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * Format: date
             * @description 年月（YYYY-MM形式）
             */
            yearMonth?: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        DailyBudget: {
            /** @description 予算ID */
            budgetId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * Format: date
             * @description 日付
             */
            date?: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        DailyBudgetUpdate: {
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
        };
        DailyBudgetCreate: {
            /** @description 店舗ID */
            storeId: string;
            /**
             * Format: date
             * @description 日付
             */
            date: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
        };
        StaffBudget: {
            /** @description 予算ID */
            budgetId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフ名 */
            staffName?: string;
            /**
             * Format: date
             * @description 年月（YYYY-MM形式）
             */
            yearMonth?: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        StaffBudgetUpdate: {
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
        };
        StaffBudgetCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description スタッフID */
            staffId: string;
            /**
             * Format: date
             * @description 年月（YYYY-MM形式）
             */
            yearMonth: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
        };
        Supplier: {
            /** @description 仕入先ID */
            supplierId?: string;
            /** @description 仕入先コード */
            supplierCode?: string;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 仕入先略称 */
            supplierAbbr?: string;
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 仕入先区分名 */
            supplierDivisionName?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description 担当者名 */
            contactPersonName?: string;
            /** @description 備考 */
            note?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SupplierCreate: {
            /** @description 仕入先コード */
            supplierCode: string;
            /** @description 仕入先名 */
            supplierName: string;
            /** @description 仕入先略称 */
            supplierAbbr?: string;
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description 担当者名 */
            contactPersonName?: string;
            /** @description 備考 */
            note?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        SupplierUpdate: {
            /** @description 仕入先コード */
            supplierCode?: string;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 仕入先略称 */
            supplierAbbr?: string;
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description 担当者名 */
            contactPersonName?: string;
            /** @description 備考 */
            note?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        SupplierProduct: {
            /** @description 仕入先商品ID */
            supplierProductId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 仕入先商品コード */
            supplierProductCode?: string;
            /** @description 仕入先商品名 */
            supplierProductName?: string;
            /**
             * Format: float
             * @description 原価
             */
            costPrice?: number;
            /**
             * Format: float
             * @description 発注点
             */
            orderPoint?: number;
            /**
             * Format: float
             * @description 発注ロット
             */
            orderLot?: number;
            /** @description リードタイム（日数） */
            leadTime?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SupplierProductCreate: {
            /** @description 商品ID */
            productId: string;
            /** @description 仕入先商品コード */
            supplierProductCode?: string;
            /** @description 仕入先商品名 */
            supplierProductName?: string;
            /**
             * Format: float
             * @description 原価
             */
            costPrice?: number;
            /**
             * Format: float
             * @description 発注点
             */
            orderPoint?: number;
            /**
             * Format: float
             * @description 発注ロット
             */
            orderLot?: number;
            /** @description リードタイム（日数） */
            leadTime?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        SupplierDivision: {
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 仕入先区分名 */
            supplierDivisionName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SupplierDivisionCreate: {
            /** @description 仕入先区分名 */
            supplierDivisionName: string;
        };
        SupplierDivisionUpdate: {
            /** @description 仕入先区分名 */
            supplierDivisionName?: string;
        };
        Terminal: {
            /** @description レジ端末ID */
            terminalId?: string;
            /** @description レジ端末コード */
            terminalCode?: string;
            /** @description レジ端末名 */
            terminalName?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * @description レジ端末種別(1:PC, 2:iPad, 3:ハンディ)
             * @enum {string}
             */
            terminalType?: "1" | "2" | "3";
            /**
             * @description プリンタ種別(0:なし, 1:ロール紙, 2:A4, 3:サーマル)
             * @enum {string}
             */
            printerType?: "0" | "1" | "2" | "3";
            /** @description プリンタ名 */
            printerName?: string;
            /** @description プリンタIPアドレス */
            printerIPAddress?: string;
            /** @description プリンタポート */
            printerPort?: string;
            /**
             * @description ドロア種別(0:なし, 1:あり)
             * @enum {string}
             */
            drawerType?: "0" | "1";
            /** @description ドロア名 */
            drawerName?: string;
            /** @description ドロアIPアドレス */
            drawerIPAddress?: string;
            /** @description ドロアポート */
            drawerPort?: string;
            /**
             * @description カードリーダー種別(0:なし, 1:磁気, 2:IC)
             * @enum {string}
             */
            cardReaderType?: "0" | "1" | "2";
            /** @description カードリーダー名 */
            cardReaderName?: string;
            /** @description カードリーダーIPアドレス */
            cardReaderIPAddress?: string;
            /** @description カードリーダーポート */
            cardReaderPort?: string;
            /**
             * @description スキャナー種別(0:なし, 1:あり)
             * @enum {string}
             */
            scannerType?: "0" | "1";
            /** @description スキャナー名 */
            scannerName?: string;
            /** @description スキャナーIPアドレス */
            scannerIPAddress?: string;
            /** @description スキャナーポート */
            scannerPort?: string;
            /**
             * @description 客面ディスプレイ種別(0:なし, 1:あり)
             * @enum {string}
             */
            displayType?: "0" | "1";
            /** @description 客面ディスプレイ名 */
            displayName?: string;
            /** @description 客面ディスプレイIPアドレス */
            displayIPAddress?: string;
            /** @description 客面ディスプレイポート */
            displayPort?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        TerminalCreate: {
            /** @description レジ端末コード */
            terminalCode: string;
            /** @description レジ端末名 */
            terminalName: string;
            /** @description 店舗ID */
            storeId: string;
            /**
             * @description レジ端末種別(1:PC, 2:iPad, 3:ハンディ)
             * @enum {string}
             */
            terminalType?: "1" | "2" | "3";
            /**
             * @description プリンタ種別(0:なし, 1:ロール紙, 2:A4, 3:サーマル)
             * @enum {string}
             */
            printerType?: "0" | "1" | "2" | "3";
            /** @description プリンタ名 */
            printerName?: string;
            /** @description プリンタIPアドレス */
            printerIPAddress?: string;
            /** @description プリンタポート */
            printerPort?: string;
            /**
             * @description ドロア種別(0:なし, 1:あり)
             * @enum {string}
             */
            drawerType?: "0" | "1";
            /** @description ドロア名 */
            drawerName?: string;
            /** @description ドロアIPアドレス */
            drawerIPAddress?: string;
            /** @description ドロアポート */
            drawerPort?: string;
            /**
             * @description カードリーダー種別(0:なし, 1:磁気, 2:IC)
             * @enum {string}
             */
            cardReaderType?: "0" | "1" | "2";
            /** @description カードリーダー名 */
            cardReaderName?: string;
            /** @description カードリーダーIPアドレス */
            cardReaderIPAddress?: string;
            /** @description カードリーダーポート */
            cardReaderPort?: string;
            /**
             * @description スキャナー種別(0:なし, 1:あり)
             * @enum {string}
             */
            scannerType?: "0" | "1";
            /** @description スキャナー名 */
            scannerName?: string;
            /** @description スキャナーIPアドレス */
            scannerIPAddress?: string;
            /** @description スキャナーポート */
            scannerPort?: string;
            /**
             * @description 客面ディスプレイ種別(0:なし, 1:あり)
             * @enum {string}
             */
            displayType?: "0" | "1";
            /** @description 客面ディスプレイ名 */
            displayName?: string;
            /** @description 客面ディスプレイIPアドレス */
            displayIPAddress?: string;
            /** @description 客面ディスプレイポート */
            displayPort?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        TerminalUpdate: {
            /** @description レジ端末コード */
            terminalCode?: string;
            /** @description レジ端末名 */
            terminalName?: string;
            /** @description 店舗ID */
            storeId?: string;
            /**
             * @description レジ端末種別(1:PC, 2:iPad, 3:ハンディ)
             * @enum {string}
             */
            terminalType?: "1" | "2" | "3";
            /**
             * @description プリンタ種別(0:なし, 1:ロール紙, 2:A4, 3:サーマル)
             * @enum {string}
             */
            printerType?: "0" | "1" | "2" | "3";
            /** @description プリンタ名 */
            printerName?: string;
            /** @description プリンタIPアドレス */
            printerIPAddress?: string;
            /** @description プリンタポート */
            printerPort?: string;
            /**
             * @description ドロア種別(0:なし, 1:あり)
             * @enum {string}
             */
            drawerType?: "0" | "1";
            /** @description ドロア名 */
            drawerName?: string;
            /** @description ドロアIPアドレス */
            drawerIPAddress?: string;
            /** @description ドロアポート */
            drawerPort?: string;
            /**
             * @description カードリーダー種別(0:なし, 1:磁気, 2:IC)
             * @enum {string}
             */
            cardReaderType?: "0" | "1" | "2";
            /** @description カードリーダー名 */
            cardReaderName?: string;
            /** @description カードリーダーIPアドレス */
            cardReaderIPAddress?: string;
            /** @description カードリーダーポート */
            cardReaderPort?: string;
            /**
             * @description スキャナー種別(0:なし, 1:あり)
             * @enum {string}
             */
            scannerType?: "0" | "1";
            /** @description スキャナー名 */
            scannerName?: string;
            /** @description スキャナーIPアドレス */
            scannerIPAddress?: string;
            /** @description スキャナーポート */
            scannerPort?: string;
            /**
             * @description 客面ディスプレイ種別(0:なし, 1:あり)
             * @enum {string}
             */
            displayType?: "0" | "1";
            /** @description 客面ディスプレイ名 */
            displayName?: string;
            /** @description 客面ディスプレイIPアドレス */
            displayIPAddress?: string;
            /** @description 客面ディスプレイポート */
            displayPort?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        Settlement: {
            /** @description 精算ID */
            settlementId?: string;
            /** @description 精算番号 */
            settlementNo?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 端末ID */
            terminalId?: string;
            /** @description 端末名 */
            terminalName?: string;
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフ名 */
            staffName?: string;
            /**
             * Format: date-time
             * @description 精算日時
             */
            settlementDateTime?: string;
            /**
             * Format: date-time
             * @description レジ開始日時
             */
            openingDateTime?: string;
            /**
             * Format: date-time
             * @description レジ締め日時
             */
            closingDateTime?: string;
            summary?: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal?: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal?: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal?: number;
                /** @description 取引件数 */
                transactionCount?: number;
                /** @description 客数 */
                customerCount?: number;
            };
            /** @description 支払方法別集計 */
            payments?: {
                /** @description 支払方法ID */
                paymentMethodId?: string;
                /** @description 支払方法名 */
                paymentMethodName?: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount?: number;
                /** @description 件数 */
                count?: number;
            }[];
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SettlementCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description 端末ID */
            terminalId: string;
            /** @description スタッフID */
            staffId: string;
            /**
             * Format: date-time
             * @description 精算日時
             */
            settlementDateTime?: string;
            /**
             * Format: date-time
             * @description レジ開始日時
             */
            openingDateTime: string;
            /**
             * Format: date-time
             * @description レジ締め日時
             */
            closingDateTime: string;
            summary: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal: number;
                /** @description 取引件数 */
                transactionCount: number;
                /** @description 客数 */
                customerCount: number;
            };
            /** @description 支払方法別集計 */
            payments: {
                /** @description 支払方法ID */
                paymentMethodId: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount: number;
                /** @description 件数 */
                count: number;
            }[];
        };
        DailySettlement: {
            /** @description 日次締めID */
            dailySettlementId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * Format: date
             * @description 営業日
             */
            businessDate?: string;
            /**
             * Format: date
             * @description 締め日
             */
            closingDate?: string;
            /**
             * Format: date-time
             * @description 締め日時
             */
            closingDateTime?: string;
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフ名 */
            staffName?: string;
            summary?: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal?: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal?: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal?: number;
                /** @description 取引件数 */
                transactionCount?: number;
                /** @description 客数 */
                customerCount?: number;
            };
            /** @description 支払方法別集計 */
            payments?: {
                /** @description 支払方法ID */
                paymentMethodId?: string;
                /** @description 支払方法名 */
                paymentMethodName?: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount?: number;
                /** @description 件数 */
                count?: number;
            }[];
            /**
             * @description ステータス(0:未確定, 1:確定)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        DailySettlementCreate: {
            /** @description 店舗ID */
            storeId: string;
            /**
             * Format: date
             * @description 営業日
             */
            businessDate: string;
            /**
             * Format: date
             * @description 締め日
             */
            closingDate: string;
            /**
             * Format: date-time
             * @description 締め日時
             */
            closingDateTime?: string;
            /** @description スタッフID */
            staffId: string;
            summary: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal: number;
                /** @description 取引件数 */
                transactionCount: number;
                /** @description 客数 */
                customerCount: number;
            };
            /** @description 支払方法別集計 */
            payments: {
                /** @description 支払方法ID */
                paymentMethodId: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount: number;
                /** @description 件数 */
                count: number;
            }[];
            /**
             * @description ステータス(0:未確定, 1:確定)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        PaymentMethod: {
            /** @description 支払方法ID */
            paymentMethodId?: string;
            /** @description 支払方法コード */
            paymentMethodCode?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /** @description 支払方法区分ID */
            paymentMethodDivisionId?: string;
            /** @description 支払方法区分名 */
            paymentMethodDivisionName?: string;
            /**
             * @description 金額入力タイプ(0:不要, 1:任意, 2:必須)
             * @enum {string}
             */
            amountInputType?: "0" | "1" | "2";
            /**
             * @description お釣り対応タイプ(0:不可, 1:可, 2:自動計算)
             * @enum {string}
             */
            changeType?: "0" | "1" | "2";
            /** @description 表示順 */
            sortNo?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        PaymentMethodCreate: {
            /** @description 支払方法コード */
            paymentMethodCode: string;
            /** @description 支払方法名 */
            paymentMethodName: string;
            /** @description 支払方法区分ID */
            paymentMethodDivisionId: string;
            /**
             * @description 金額入力タイプ(0:不要, 1:任意, 2:必須)
             * @enum {string}
             */
            amountInputType?: "0" | "1" | "2";
            /**
             * @description お釣り対応タイプ(0:不可, 1:可, 2:自動計算)
             * @enum {string}
             */
            changeType?: "0" | "1" | "2";
            /** @description 表示順 */
            sortNo?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        PaymentMethodUpdate: {
            /** @description 支払方法コード */
            paymentMethodCode?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /** @description 支払方法区分ID */
            paymentMethodDivisionId?: string;
            /**
             * @description 金額入力タイプ(0:不要, 1:任意, 2:必須)
             * @enum {string}
             */
            amountInputType?: "0" | "1" | "2";
            /**
             * @description お釣り対応タイプ(0:不可, 1:可, 2:自動計算)
             * @enum {string}
             */
            changeType?: "0" | "1" | "2";
            /** @description 表示順 */
            sortNo?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        StorePaymentMethod: {
            /** @description 店舗支払方法ID */
            storePaymentMethodId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 支払方法ID */
            paymentMethodId?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        PaymentMethodDivision: {
            /** @description 支払方法区分ID */
            paymentMethodDivisionId?: string;
            /** @description 支払方法区分名 */
            paymentMethodDivisionName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        PaymentMethodDivisionCreate: {
            /** @description 支払方法区分名 */
            paymentMethodDivisionName: string;
        };
        PaymentMethodDivisionUpdate: {
            /** @description 支払方法区分名 */
            paymentMethodDivisionName?: string;
        };
        AppPaymentMethod: {
            /** @description アプリ連携支払方法ID */
            appPaymentMethodId?: string;
            /** @description アプリID */
            appId?: string;
            /** @description アプリ名 */
            appName?: string;
            /** @description 支払方法ID */
            paymentMethodId?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /** @description アプリ連携用支払コード */
            appPaymentCode?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        AppPaymentMethodCreate: {
            /** @description 支払方法ID */
            paymentMethodId: string;
            /** @description アプリ連携用支払コード */
            appPaymentCode: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        /** @description クーポン情報 */
        Coupon: {
            /** @description クーポンID */
            id: number;
            /** @description クーポン名 */
            couponName: string;
            /** @description クーポンコード */
            couponCode?: string;
            /** @description クーポン種別（1:値引き額、2:割引率、3:ポイント加算） */
            couponType: number;
            /** @description クーポン値（値引き額、割引率、加算ポイント） */
            couponValue: number;
            /** @description 最大値引き額 */
            maxDiscount?: number;
            /** @description 適用最低金額 */
            minAmount?: number;
            /**
             * Format: date
             * @description 開始日
             */
            startDate: string;
            /**
             * Format: date
             * @description 終了日
             */
            endDate: string;
            /** @description ボーナスデー（1:月曜日、2:火曜日、...、7:日曜日） */
            bonusDay?: string;
            /** @description ボーナス月（1:1月、2:2月、...、12:12月） */
            bonusMonth?: number;
            /** @description ユニーク使用（true:可、false:不可） */
            uniqueUse?: boolean;
            /** @description 有効日数 */
            validDays?: number;
            /** @description 有効回数 */
            validCount?: number;
            /** @description 利用制限回数 */
            limitCount?: number;
            /** @description 公開フラグ（true:公開、false:非公開） */
            isPublic?: boolean;
            /** @description 説明文 */
            description?: string;
            /** @description 画像URL */
            image?: string;
            /** @description 対象店舗（1:全店舗、2:個別指定） */
            storeTarget?: string;
            /** @description 適用店舗リスト */
            stores?: {
                /** @description 店舗ID */
                id?: number;
                /** @description 店舗名 */
                storeName?: string;
            }[];
            /** @description 対象商品（1:全商品、2:個別指定） */
            productTarget?: string;
            /** @description 商品対象除外フラグ（true:除外、false:含む） */
            isExcludeProductTarget?: boolean;
            /** @description バーゲン併用可否（true:併用可、false:併用不可） */
            isApplyBargain?: boolean;
            /** @description 他クーポン併用可否（true:併用可、false:併用不可） */
            isApplyOtherCoupon?: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description クーポン登録情報 */
        CouponCreate: {
            /** @description クーポン名 */
            couponName: string;
            /** @description クーポンコード */
            couponCode?: string;
            /** @description クーポン種別（1:値引き額、2:割引率、3:ポイント加算） */
            couponType: number;
            /** @description クーポン値（値引き額、割引率、加算ポイント） */
            couponValue: number;
            /** @description 最大値引き額 */
            maxDiscount?: number;
            /** @description 適用最低金額 */
            minAmount?: number;
            /**
             * Format: date
             * @description 開始日
             */
            startDate: string;
            /**
             * Format: date
             * @description 終了日
             */
            endDate: string;
            /** @description ボーナスデー（1:月曜日、2:火曜日、...、7:日曜日） */
            bonusDay?: string;
            /** @description ボーナス月（1:1月、2:2月、...、12:12月） */
            bonusMonth?: number;
            /** @description ユニーク使用（true:可、false:不可） */
            uniqueUse?: boolean;
            /** @description 有効日数 */
            validDays?: number;
            /** @description 有効回数 */
            validCount?: number;
            /** @description 利用制限回数 */
            limitCount?: number;
            /** @description 公開フラグ（true:公開、false:非公開） */
            isPublic?: boolean;
            /** @description 説明文 */
            description?: string;
            /** @description 画像URL */
            image?: string;
            /** @description 対象店舗（1:全店舗、2:個別指定） */
            storeTarget?: string;
            /** @description 適用店舗IDリスト */
            storeIds?: number[];
            /** @description 対象商品（1:全商品、2:個別指定） */
            productTarget?: string;
            /** @description 商品対象除外フラグ（true:除外、false:含む） */
            isExcludeProductTarget?: boolean;
            /** @description バーゲン併用可否（true:併用可、false:併用不可） */
            isApplyBargain?: boolean;
            /** @description 他クーポン併用可否（true:併用可、false:併用不可） */
            isApplyOtherCoupon?: boolean;
        };
        /** @description クーポン更新情報 */
        CouponUpdate: {
            /** @description クーポン名 */
            couponName?: string;
            /** @description クーポンコード */
            couponCode?: string;
            /** @description クーポン種別（1:値引き額、2:割引率、3:ポイント加算） */
            couponType?: number;
            /** @description クーポン値（値引き額、割引率、加算ポイント） */
            couponValue?: number;
            /** @description 最大値引き額 */
            maxDiscount?: number;
            /** @description 適用最低金額 */
            minAmount?: number;
            /**
             * Format: date
             * @description 開始日
             */
            startDate?: string;
            /**
             * Format: date
             * @description 終了日
             */
            endDate?: string;
            /** @description ボーナスデー（1:月曜日、2:火曜日、...、7:日曜日） */
            bonusDay?: string;
            /** @description ボーナス月（1:1月、2:2月、...、12:12月） */
            bonusMonth?: number;
            /** @description ユニーク使用（true:可、false:不可） */
            uniqueUse?: boolean;
            /** @description 有効日数 */
            validDays?: number;
            /** @description 有効回数 */
            validCount?: number;
            /** @description 利用制限回数 */
            limitCount?: number;
            /** @description 公開フラグ（true:公開、false:非公開） */
            isPublic?: boolean;
            /** @description 説明文 */
            description?: string;
            /** @description 画像URL */
            image?: string;
            /** @description 対象店舗（1:全店舗、2:個別指定） */
            storeTarget?: string;
            /** @description 適用店舗IDリスト */
            storeIds?: number[];
            /** @description 対象商品（1:全商品、2:個別指定） */
            productTarget?: string;
            /** @description 商品対象除外フラグ（true:除外、false:含む） */
            isExcludeProductTarget?: boolean;
            /** @description バーゲン併用可否（true:併用可、false:併用不可） */
            isApplyBargain?: boolean;
            /** @description 他クーポン併用可否（true:併用可、false:併用不可） */
            isApplyOtherCoupon?: boolean;
        };
        /** @description クーポン適用商品情報 */
        CouponProduct: {
            /** @description クーポン適用商品ID */
            id: number;
            /** @description クーポンID */
            couponId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 値引き種別（1:値引き額、2:割引率、3:ポイント加算） */
            discountType: number;
            /** @description 値引き値（値引き額、割引率、加算ポイント） */
            discountValue: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description クーポン適用商品登録情報 */
        CouponProductCreate: {
            /** @description 商品ID */
            productId: number;
            /** @description 値引き種別（1:値引き額、2:割引率、3:ポイント加算） */
            discountType: number;
            /** @description 値引き値（値引き額、割引率、加算ポイント） */
            discountValue: number;
        };
        /** @description クーポン適用商品更新情報 */
        CouponProductUpdate: {
            /** @description 商品ID */
            productId?: number;
            /** @description 値引き種別（1:値引き額、2:割引率、3:ポイント加算） */
            discountType?: number;
            /** @description 値引き値（値引き額、割引率、加算ポイント） */
            discountValue?: number;
        };
        Loss: {
            /** @description ロスID */
            lossId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description ロス区分ID */
            lossDivisionId?: string;
            /**
             * Format: date
             * @description ロス日
             */
            lossDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        LossCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description ロス区分ID */
            lossDivisionId: string;
            /**
             * Format: date
             * @description ロス日
             */
            lossDate: string;
            /** @description メモ */
            memo?: string;
            /** @description ロス明細 */
            details: {
                /** @description 商品ID */
                productId: string;
                /** @description 数量 */
                quantity: string;
                /** @description 単価 */
                unitCost?: string;
                /** @description メモ */
                memo?: string;
            }[];
        };
        LossUpdate: {
            /** @description 店舗ID */
            storeId?: string;
            /** @description ロス区分ID */
            lossDivisionId?: string;
            /**
             * Format: date
             * @description ロス日
             */
            lossDate?: string;
            /** @description メモ */
            memo?: string;
        };
        LossDetail: {
            /** @description ロスID */
            lossId?: string;
            /** @description ロス明細ID */
            lossDetailId?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 数量 */
            quantity?: string;
            /** @description 単価 */
            unitCost?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        LossDivision: {
            /** @description ロス区分ID */
            lossDivisionId?: string;
            /** @description ロス区分名 */
            lossDivisionName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        LossDivisionCreate: {
            /** @description ロス区分名 */
            lossDivisionName: string;
        };
        LossDivisionUpdate: {
            /** @description ロス区分名 */
            lossDivisionName?: string;
        };
        Order: {
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷予定日
             */
            estimatedArrivalDate?: string;
            /**
             * Format: date
             * @description 発注日
             */
            orderDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス (0:未処理, 1:処理済み, 2:キャンセル, 3:完了)
             * @enum {string}
             */
            status?: "0" | "1" | "2" | "3";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        OrderCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description 仕入先ID */
            supplierId: string;
            /**
             * Format: date
             * @description 入荷予定日
             */
            estimatedArrivalDate?: string;
            /**
             * Format: date
             * @description 発注日
             */
            orderDate: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス (0:未処理, 1:処理済み, 2:キャンセル, 3:完了)
             * @default 0
             * @enum {string}
             */
            status: "0" | "1" | "2" | "3";
            /** @description 発注明細 */
            details?: {
                /** @description 商品ID */
                productId?: string;
                /** @description 数量 */
                quantity?: string;
                /** @description メモ */
                memo?: string;
            }[];
        };
        OrderUpdate: {
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷予定日
             */
            estimatedArrivalDate?: string;
            /**
             * Format: date
             * @description 発注日
             */
            orderDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス (0:未処理, 1:処理済み, 2:キャンセル, 3:完了)
             * @enum {string}
             */
            status?: "0" | "1" | "2" | "3";
        };
        OrderProduct: {
            /** @description 商品ID */
            productId?: string;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 部門ID */
            categoryId?: string;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 在庫数 */
            inventoryQuantity?: string;
            /** @description 発注点在庫残 */
            remainsInventories?: string;
            /** @description 発注点 */
            orderPoint?: string;
        };
        OrderStore: {
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 店舗コード */
            storeCode?: string;
        };
        Arrival: {
            /** @description 入荷ID */
            arrivalId?: string;
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        ArrivalCreate: {
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @default 0
             * @enum {string}
             */
            status: "0" | "1" | "2";
        };
        ArrivalUpdate: {
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
        };
        ArrivalDetail: {
            /** @description 入荷ID */
            arrivalId?: string;
            /** @description 入荷明細ID */
            arrivalDetailId?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 発注明細ID */
            orderDetailId?: string;
            /** @description 数量 */
            quantity?: string;
            /** @description 原価 */
            cost?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        Shipment: {
            /** @description 出荷ID */
            shipmentId?: string;
            /** @description 出荷元店舗ID */
            storeId?: string;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /** @description 出荷先店舗ID */
            destinationStoreId?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        ShipmentCreate: {
            /** @description 出荷元店舗ID */
            storeId: string;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate: string;
            /** @description 出荷先店舗ID */
            destinationStoreId: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @default 0
             * @enum {string}
             */
            status: "0" | "1" | "2";
        };
        ShipmentUpdate: {
            /** @description 出荷元店舗ID */
            storeId?: string;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /** @description 出荷先店舗ID */
            destinationStoreId?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
        };
        ShipmentDetail: {
            /** @description 出荷ID */
            shipmentId?: string;
            /** @description 出荷明細ID */
            shipmentDetailId?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 数量 */
            quantity?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        /** @description 入庫情報 */
        IncomingStock: {
            /** @description 入庫ID */
            id: number;
            /** @description 入庫区分（1:仕入、2:店舗間移動、3:返品） */
            division: number;
            /** @description 入庫区分名 */
            divisionName?: string;
            /** @description 入庫ステータス（1:計画中、2:確定済） */
            status: number;
            /** @description 入庫ステータス名 */
            statusName?: string;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 出庫元店舗ID */
            supplierStoreId?: number;
            /** @description 出庫元店舗名 */
            supplierStoreName?: string;
            /** @description 仕入先ID */
            supplierId?: number;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 入荷ID */
            arrivalId?: number;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description 発注ID */
            orderId?: number;
            /**
             * Format: date
             * @description 入庫日
             */
            targetDate: string;
            /**
             * Format: date
             * @description 入庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
            /** @description メモ */
            memo?: string;
            /** @description 合計金額 */
            totalAmount?: number;
            /** @description 商品件数 */
            productCount?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 入庫登録情報 */
        IncomingStockCreate: {
            /** @description 入庫区分（1:仕入、2:店舗間移動、3:返品） */
            division: number;
            /** @description 入庫ステータス（1:計画中、2:確定済） */
            status: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 出庫元店舗ID */
            supplierStoreId?: number;
            /** @description 仕入先ID */
            supplierId?: number;
            /** @description 入荷ID */
            arrivalId?: number;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description 発注ID */
            orderId?: number;
            /**
             * Format: date
             * @description 入庫日
             */
            targetDate: string;
            /**
             * Format: date
             * @description 入庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
            /** @description 入庫詳細情報 */
            details: {
                /** @description 商品ID */
                productId: number;
                /**
                 * Format: float
                 * @description 数量
                 */
                quantity: number;
                /** @description 仕入単価 */
                costPrice?: number;
                /** @description メモ */
                memo?: string;
            }[];
        };
        /** @description 入庫更新情報 */
        IncomingStockUpdate: {
            /** @description 入庫区分（1:仕入、2:店舗間移動、3:返品） */
            division?: number;
            /** @description 入庫ステータス（1:計画中、2:確定済） */
            status?: number;
            /** @description 店舗ID */
            storeId?: number;
            /** @description 出庫元店舗ID */
            supplierStoreId?: number;
            /** @description 仕入先ID */
            supplierId?: number;
            /** @description 入荷ID */
            arrivalId?: number;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description 発注ID */
            orderId?: number;
            /**
             * Format: date
             * @description 入庫日
             */
            targetDate?: string;
            /**
             * Format: date
             * @description 入庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
        };
        /** @description 入庫詳細情報 */
        IncomingStockDetail: {
            /** @description 入庫詳細ID */
            id: number;
            /** @description 入庫ID */
            incomingStockId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /**
             * Format: float
             * @description 数量
             */
            quantity: number;
            /** @description 仕入単価 */
            costPrice?: number;
            /** @description 販売単価 */
            price?: number;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 入庫詳細更新情報 */
        IncomingStockDetailUpdate: {
            /** @description 入庫詳細更新情報の配列 */
            details: {
                /** @description 入庫詳細ID */
                id: number;
                /** @description 商品ID */
                productId: number;
                /**
                 * Format: float
                 * @description 数量
                 */
                quantity: number;
                /** @description 仕入単価 */
                costPrice?: number;
                /** @description メモ */
                memo?: string;
            }[];
        };
        /** @description 出庫情報 */
        OutgoingStock: {
            /** @description 出庫ID */
            id: number;
            /** @description 出庫区分（1:店舗間移動、2:返品、3:その他） */
            division: number;
            /** @description 出庫区分名 */
            divisionName?: string;
            /** @description 出庫ステータス（1:計画中、2:確定済） */
            status: number;
            /** @description 出庫ステータス名 */
            statusName?: string;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 入庫先店舗ID */
            destinationStoreId?: number;
            /** @description 入庫先店舗名 */
            destinationStoreName?: string;
            /** @description 仕入先ID（返品時） */
            supplierId?: number;
            /** @description 仕入先名（返品時） */
            supplierName?: string;
            /** @description 出荷ID */
            shipmentId?: number;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /**
             * Format: date
             * @description 出庫日
             */
            targetDate: string;
            /**
             * Format: date
             * @description 出庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
            /** @description メモ */
            memo?: string;
            /** @description 合計金額 */
            totalAmount?: number;
            /** @description 商品件数 */
            productCount?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 出庫登録情報 */
        OutgoingStockCreate: {
            /** @description 出庫区分（1:店舗間移動、2:返品、3:その他） */
            division: number;
            /** @description 出庫ステータス（1:計画中、2:確定済） */
            status: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 入庫先店舗ID */
            destinationStoreId?: number;
            /** @description 仕入先ID（返品時） */
            supplierId?: number;
            /** @description 出荷ID */
            shipmentId?: number;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /**
             * Format: date
             * @description 出庫日
             */
            targetDate: string;
            /**
             * Format: date
             * @description 出庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
            /** @description 出庫詳細情報 */
            details: {
                /** @description 商品ID */
                productId: number;
                /**
                 * Format: float
                 * @description 数量
                 */
                quantity: number;
                /** @description 仕入単価 */
                costPrice?: number;
                /** @description メモ */
                memo?: string;
            }[];
        };
        /** @description 出庫更新情報 */
        OutgoingStockUpdate: {
            /** @description 出庫区分（1:店舗間移動、2:返品、3:その他） */
            division?: number;
            /** @description 出庫ステータス（1:計画中、2:確定済） */
            status?: number;
            /** @description 店舗ID */
            storeId?: number;
            /** @description 入庫先店舗ID */
            destinationStoreId?: number;
            /** @description 仕入先ID（返品時） */
            supplierId?: number;
            /** @description 出荷ID */
            shipmentId?: number;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /**
             * Format: date
             * @description 出庫日
             */
            targetDate?: string;
            /**
             * Format: date
             * @description 出庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
        };
        /** @description 出庫詳細情報 */
        OutgoingStockDetail: {
            /** @description 出庫詳細ID */
            id: number;
            /** @description 出庫ID */
            outgoingStockId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /**
             * Format: float
             * @description 数量
             */
            quantity: number;
            /** @description 仕入単価 */
            costPrice?: number;
            /** @description 販売単価 */
            price?: number;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 出庫詳細更新情報 */
        OutgoingStockDetailUpdate: {
            /** @description 出庫詳細更新情報の配列 */
            details: {
                /** @description 出庫詳細ID */
                id: number;
                /** @description 商品ID */
                productId: number;
                /**
                 * Format: float
                 * @description 数量
                 */
                quantity: number;
                /** @description 仕入単価 */
                costPrice?: number;
                /** @description メモ */
                memo?: string;
            }[];
        };
        /** @description 出庫修正申請情報 */
        CorrectionRequestOutgoingStock: {
            /** @description 出庫修正申請ID */
            id: number;
            /** @description 出庫ID */
            outgoingStockId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 申請ステータス（1:申請中、2:承認済、3:却下） */
            status: number;
            /** @description 申請ステータス名 */
            statusName?: string;
            /**
             * Format: date
             * @description 申請日
             */
            requestDate: string;
            /** @description 申請理由 */
            requestReason?: string;
            /** @description 申請スタッフID */
            requestStaffId?: number;
            /** @description 申請スタッフ名 */
            requestStaffName?: string;
            /**
             * Format: date
             * @description 承認/却下日
             */
            approvalDate?: string;
            /** @description 承認/却下理由 */
            approvalReason?: string;
            /** @description 承認/却下スタッフID */
            approvalStaffId?: number;
            /** @description 承認/却下スタッフ名 */
            approvalStaffName?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 出庫修正申請登録情報 */
        CorrectionRequestOutgoingStockCreate: {
            /** @description 出庫ID */
            outgoingStockId: number;
            /** @description 店舗ID */
            storeId: number;
            /**
             * Format: date
             * @description 申請日
             */
            requestDate: string;
            /** @description 申請理由 */
            requestReason: string;
            /** @description 申請スタッフID */
            requestStaffId?: number;
        };
        /** @description 出庫修正申請更新情報（承認・却下） */
        CorrectionRequestOutgoingStockUpdate: {
            /** @description 申請ステータス（2:承認済、3:却下） */
            status: number;
            /**
             * Format: date
             * @description 承認/却下日
             */
            approvalDate: string;
            /** @description 承認/却下理由 */
            approvalReason?: string;
            /** @description 承認/却下スタッフID */
            approvalStaffId?: number;
        };
        /** @description 棚卸情報 */
        Stocktaking: {
            /** @description 棚卸ID */
            id: number;
            /** @description 棚卸名 */
            stocktakingName: string;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 棚卸ステータス（1:集計中、2:完了） */
            stocktakingStatus: number;
            /**
             * Format: date-time
             * @description 開始日時
             */
            startDate: string;
            /**
             * Format: date-time
             * @description 終了日時
             */
            endDate?: string;
            /** @description 合計在庫金額 */
            stockAmount?: number;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
            /** @description メモ */
            memo?: string;
            /** @description 在庫なし商品除外フラグ（true:除外する、false:除外しない） */
            isExcludeOutOfStock?: boolean;
            /** @description 部門対象（1:全部門、2:指定部門） */
            categoryTarget?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸登録情報 */
        StocktakingCreate: {
            /** @description 棚卸名 */
            stocktakingName: string;
            /** @description 店舗ID */
            storeId: number;
            /** @description 棚卸ステータス（1:集計中、2:完了） */
            stocktakingStatus: number;
            /**
             * Format: date-time
             * @description 開始日時
             */
            startDate: string;
            /**
             * Format: date-time
             * @description 終了日時
             */
            endDate?: string;
            /** @description 合計在庫金額 */
            stockAmount?: number;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
            /** @description 在庫なし商品除外フラグ（true:除外する、false:除外しない） */
            isExcludeOutOfStock?: boolean;
            /** @description 部門対象（1:全部門、2:指定部門） */
            categoryTarget?: number;
            /** @description 対象部門IDリスト（categoryTargetが2の場合に必須） */
            categoryIds?: number[];
        };
        /** @description 棚卸部門情報 */
        StocktakingCategory: {
            /** @description 棚卸部門ID */
            id: number;
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 部門ID */
            categoryId: number;
            /** @description 部門コード */
            categoryCode?: string;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 棚卸実施済みフラグ（true:実施済み、false:未実施） */
            isComplete: boolean;
            /** @description 商品件数 */
            productCount?: number;
            /** @description カウント済み商品件数 */
            countedProductCount?: number;
            /**
             * Format: float
             * @description カウント済み割合
             */
            countedRatio?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸部門更新情報 */
        StocktakingCategoryUpdate: {
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 部門ID */
            categoryId: number;
            /** @description 棚卸実施済みフラグ（true:実施済み、false:未実施） */
            isComplete: boolean;
        };
        /** @description 棚卸商品情報 */
        StocktakingProduct: {
            /** @description 棚卸商品ID */
            id: number;
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 標準価格（税抜） */
            price?: number;
            /** @description 原価 */
            cost?: number;
            /** @description 税込みフラグ（true:税込み、false:税抜き） */
            isTaxIncluded?: boolean;
            /**
             * Format: float
             * @description 税率
             */
            taxRate?: number;
            /**
             * Format: float
             * @description システム在庫数
             */
            inventoryQuantity: number;
            /**
             * Format: float
             * @description 実在庫数
             */
            countedQuantity?: number;
            /**
             * Format: float
             * @description 差異数
             */
            differenceQuantity?: number;
            /** @description 商品カウント済みフラグ（true:カウント済み、false:未カウント） */
            isCounted: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸商品更新情報 */
        StocktakingProductUpdate: {
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /**
             * Format: float
             * @description 実在庫数
             */
            countedQuantity: number;
            /** @description 商品カウント済みフラグ（true:カウント済み、false:未カウント） */
            isCounted: boolean;
        };
        /** @description 棚卸在庫情報 */
        StocktakingStock: {
            /** @description 棚卸在庫ID */
            id: number;
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /**
             * Format: float
             * @description システム在庫数
             */
            inventoryQuantity: number;
            /**
             * Format: float
             * @description 実在庫数
             */
            countedQuantity: number;
            /**
             * Format: float
             * @description 差異数
             */
            differenceQuantity: number;
            /** @description 標準価格（税抜） */
            price?: number;
            /** @description システム在庫金額 */
            inventoryAmount?: number;
            /** @description 実在庫金額 */
            countedAmount?: number;
            /** @description 差異金額 */
            differenceAmount?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸在庫登録情報 */
        StocktakingStockCreate: {
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /**
             * Format: float
             * @description システム在庫数
             */
            inventoryQuantity: number;
            /**
             * Format: float
             * @description 実在庫数
             */
            countedQuantity: number;
        };
        /** @description 棚卸在庫更新情報 */
        StocktakingStockUpdate: {
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /**
             * Format: float
             * @description 実在庫数
             */
            countedQuantity: number;
        };
        /** @description 税率情報 */
        TaxRate: {
            /** @description 税率ID */
            id: number;
            /** @description 税率名 */
            name: string;
            /**
             * Format: float
             * @description 税率（例：0.08で8%）
             */
            rate: number;
            /**
             * Format: date
             * @description 適用開始日
             */
            effectiveFrom: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description 説明 */
            description?: string;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 軽減税率情報 */
        ReduceTaxRate: {
            /** @description 軽減税率ID */
            id: number;
            /** @description 軽減税率名 */
            name: string;
            /**
             * Format: float
             * @description 税率（例：0.08で8%）
             */
            rate: number;
            /**
             * Format: date
             * @description 適用開始日
             */
            effectiveFrom: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description 説明 */
            description?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description レシート備考情報 */
        ReceiptRemark: {
            /** @description レシート備考ID */
            id: number;
            /** @description 備考文 */
            text: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description レシート備考登録情報 */
        ReceiptRemarkCreate: {
            /** @description 備考文 */
            text: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
        };
        /** @description 値引き区分情報 */
        DiscountDivision: {
            /** @description 値引き区分ID */
            id: number;
            /** @description 値引き区分名 */
            divisionName: string;
            /** @description 値引き区分コード */
            code?: string;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description CAT/CCTカード会社情報 */
        CatCctCardCompany: {
            /** @description カード会社ID */
            id: number;
            /** @description カード会社名 */
            cardCompanyName: string;
            /** @description カード会社コード */
            cardCompanyCode: string;
            /** @description 入力モード（1:カード情報必須、2:カード情報任意、3:カード情報なし） */
            inputMode: number;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 顧客タイプ情報 */
        CustomerType: {
            /** @description 顧客タイプID */
            id: number;
            /** @description 顧客タイプコード */
            code: string;
            /** @description 顧客タイプ名 */
            name: string;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 顧客タイプ登録情報 */
        CustomerTypeCreate: {
            /** @description 顧客タイプコード */
            code: string;
            /** @description 顧客タイプ名 */
            name: string;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /** @description 表示順 */
            displayOrder?: number;
        };
        /** @description 顧客タイプセクション情報 */
        CustomerTypeSection: {
            /** @description 顧客タイプセクションID */
            id: number;
            /** @description 顧客タイプID */
            customerTypeId: number;
            /** @description セクション名 */
            name: string;
            /** @description セクション値 */
            value?: string;
            /** @description フィールドタイプ（1:テキスト、2:数値、3:日付、4:選択肢、5:テキストエリア） */
            fieldType: number;
            /** @description 必須フラグ（true:必須、false:任意） */
            isRequired?: boolean;
            /** @description 選択肢（カンマ区切り） */
            choices?: string;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 顧客タイプセクション更新情報 */
        CustomerTypeSectionUpdate: {
            /** @description 顧客タイプセクションID */
            id: number;
            /** @description セクション名 */
            name?: string;
            /** @description フィールドタイプ（1:テキスト、2:数値、3:日付、4:選択肢、5:テキストエリア） */
            fieldType?: number;
            /** @description 必須フラグ（true:必須、false:任意） */
            isRequired?: boolean;
            /** @description 選択肢（カンマ区切り） */
            choices?: string;
            /** @description 表示順 */
            displayOrder?: number;
        };
    };
    responses: never;
    parameters: {
        /** @description 契約ID */
        contract_id: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getProducts: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description ソート順 */
                sort?: "productId" | "productCode" | "productName" | "categoryId" | "supplierName" | "price" | "cost" | "modified";
                /** @description ソート順序 */
                order?: "asc" | "desc";
                /** @description 商品ID */
                productId?: number;
                /** @description 商品コード */
                productCode?: string;
                /** @description JANコード */
                janCode?: string;
                /** @description 商品名 */
                productName?: string;
                /** @description 部門ID */
                categoryId?: number;
                /** @description 部門コード */
                categoryCode?: string;
                /** @description 仕入先ID */
                supplierId?: number;
                /** @description 仕入先コード */
                supplierCode?: string;
                /** @description 店舗ID */
                storeId?: number;
                /** @description ステータス */
                status?: 0 | 1;
                /** @description 商品タイプ */
                productType?: 0 | 1 | 2 | 9;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["Product"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProduct: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductCreate"];
            };
        };
        responses: {
            /** @description 商品の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Product"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProduct: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Product"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductUpdate"];
            };
        };
        responses: {
            /** @description 商品の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Product"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（関連データが存在するなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    bulkUpdateProducts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductBulkUpdate"];
            };
        };
        responses: {
            /** @description 商品の一括更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["Product"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    bulkCreateProducts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductBulkCreate"];
            };
        };
        responses: {
            /** @description 商品の一括登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["Product"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductPrices: {
        parameters: {
            query?: {
                /** @description 店舗ID */
                storeId?: number;
                /** @description 価格区分 */
                priceDivision?: number;
                /** @description 適用開始日 */
                startDate?: string;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品価格情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductPrice"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductPrices: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items?: components["schemas"]["ProductPrice"][];
                };
            };
        };
        responses: {
            /** @description 商品価格情報の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductPrice"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductPrice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductPrice"];
            };
        };
        responses: {
            /** @description 商品価格情報の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductPrice"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductPriceChanges: {
        parameters: {
            query?: {
                /** @description 店舗ID */
                storeId?: number;
                /** @description 価格区分 */
                priceDivision?: number;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品価格変更履歴を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductPriceChange"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductReserveItems: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の予約項目情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductReserveItem"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductReserveItems: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items?: components["schemas"]["ProductReserveItem"][];
                };
            };
        };
        responses: {
            /** @description 商品予約項目情報の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductReserveItem"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductReserveItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductReserveItem"];
            };
        };
        responses: {
            /** @description 商品予約項目の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductAttributes: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 属性番号 */
                attributeNo?: number;
                /** @description 属性名称 */
                attributeName?: string;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductAttribute"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductAttribute: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttribute"];
            };
        };
        responses: {
            /** @description 商品属性の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttribute"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductAttributeItems: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 属性番号 */
                attributeNo?: number;
                /** @description 属性項目コード */
                attributeItemCode?: string;
                /** @description 属性項目名称 */
                attributeItemName?: string;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性項目一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductAttributeItem"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductAttributeItem: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttributeItem"];
            };
        };
        responses: {
            /** @description 商品属性項目の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttributeItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductStores: {
        parameters: {
            query?: {
                /** @description 店舗ID */
                storeId?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の店舗関連情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductStore"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductStores: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items?: components["schemas"]["ProductStore"][];
                };
            };
        };
        responses: {
            /** @description 商品の店舗関連情報の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductStore"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductStore: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductStore"];
            };
        };
        responses: {
            /** @description 商品の店舗関連情報の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductStore"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または店舗が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductInventoryReservations: {
        parameters: {
            query?: {
                /** @description 引当商品ID */
                reservationProductId?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の在庫引当情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductInventoryReservation"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductInventoryReservations: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items?: components["schemas"]["ProductInventoryReservation"][];
                };
            };
        };
        responses: {
            /** @description 商品の在庫引当情報の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductInventoryReservation"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductInventoryReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductInventoryReservation"];
            };
        };
        responses: {
            /** @description 商品の在庫引当情報の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductInventoryReservation"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または引当先商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductReserveItemLabels: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 予約項目ラベル番号 */
                no?: number;
                /** @description 予約項目ラベル名 */
                name?: string;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 予約項目ラベル一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductReserveItemLabel"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductReserveItemLabel: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductReserveItemLabel"];
            };
        };
        responses: {
            /** @description 予約項目ラベルの登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItemLabel"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductImages: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 商品ID */
                productId?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品画像一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductImage"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    uploadProductImage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["ProductImageUpload"];
            };
        };
        responses: {
            /** @description 商品画像のアップロードに成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductImage"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description ファイルサイズが上限を超えている */
            413: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description サポートされていないファイル形式 */
            415: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品メイン画像を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "image/jpeg": string;
                    "image/png": string;
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品またはメイン画像が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 画像ファイル（JPEG、PNG形式）
                     */
                    image?: string;
                };
            };
        };
        responses: {
            /** @description 商品メイン画像の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductImage"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description ファイルサイズが上限を超えている */
            413: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description サポートされていないファイル形式 */
            415: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品メイン画像の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品またはメイン画像が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductIconImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品アイコン画像を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "image/jpeg": string;
                    "image/png": string;
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品またはアイコン画像が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductIconImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 画像ファイル（JPEG、PNG形式）
                     */
                    image?: string;
                };
            };
        };
        responses: {
            /** @description 商品アイコン画像の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductImage"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description ファイルサイズが上限を超えている */
            413: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description サポートされていないファイル形式 */
            415: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductIconImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品アイコン画像の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品またはアイコン画像が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductPrice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 価格区分 */
                price_division: number;
                /** @description 店舗ID */
                store_id: number;
                /** @description 適用開始日(YYYY-MM-DD形式) */
                start_date: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品価格情報の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品価格情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductReserveItem: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 予約項目番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の予約項目情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または予約項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductReserveItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 予約項目番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductReserveItem"];
            };
        };
        responses: {
            /** @description 商品予約項目の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または予約項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductReserveItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 予約項目番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品予約項目の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または予約項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductAttribute: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 属性番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttribute"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductAttribute: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttribute"];
            };
        };
        responses: {
            /** @description 商品属性の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttribute"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductAttribute: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductAttributeItem: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 属性項目コード */
                code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性項目情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttributeItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductAttributeItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性項目コード */
                code: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttributeItem"];
            };
        };
        responses: {
            /** @description 商品属性項目の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttributeItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductAttributeItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性項目コード */
                code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性項目の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductInventoryReservation: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
                /** @description 引当商品ID */
                reservation_product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の在庫引当情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductInventoryReservation"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または在庫引当情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductInventoryReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
                /** @description 引当商品ID */
                reservation_product_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductInventoryReservation"];
            };
        };
        responses: {
            /** @description 商品の在庫引当情報の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductInventoryReservation"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または在庫引当情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductInventoryReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
                /** @description 引当商品ID */
                reservation_product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の在庫引当情報の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または在庫引当情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductReserveItemLabel: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 予約項目ラベル番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 予約項目ラベル情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItemLabel"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 予約項目ラベルが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductReserveItemLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 予約項目ラベル番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductReserveItemLabel"];
            };
        };
        responses: {
            /** @description 予約項目ラベルの更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItemLabel"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 予約項目ラベルが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductReserveItemLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 予約項目ラベル番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 予約項目ラベルの削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 予約項目ラベルが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStocks: {
        parameters: {
            query?: {
                /** @description 店舗ID */
                store_id?: number;
                /** @description 商品ID */
                product_id?: number;
                /** @description 商品コード */
                product_code?: string;
                /** @description 商品名 */
                product_name?: string;
                /** @description 部門ID */
                category_id?: number;
                /** @description バーコード */
                barcode?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        stocks?: components["schemas"]["Stock"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateStock: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StockUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定された在庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStockChanges: {
        parameters: {
            query?: {
                /** @description 店舗ID */
                store_id?: number;
                /** @description 商品ID */
                product_id?: number;
                /** @description 商品コード */
                product_code?: string;
                /** @description 商品名 */
                product_name?: string;
                /** @description 変動区分（1:取引、2:入庫、3:出庫、4:棚卸、5:発注、6:受注、7:ロス、8:その他） */
                division?: number;
                /** @description 変動日（FROM）（Y-m-d） */
                target_date_from?: string;
                /** @description 変動日（TO）（Y-m-d） */
                target_date_to?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        stockChanges?: components["schemas"]["StockChange"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStoreProductPrices: {
        parameters: {
            query?: {
                /** @description 商品ID */
                productId?: number;
                /** @description 価格区分 (1:商品単価、2:会員単価) */
                priceDivision?: 1 | 2;
                /** @description 適用開始日 */
                startDate?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 店舗ID */
                store_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 店舗の商品価格一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductPrice"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 店舗が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createOrUpdateStoreProductPrice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 店舗ID */
                store_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items: components["schemas"]["ProductPrice"][];
                };
            };
        };
        responses: {
            /** @description 商品価格情報の登録・更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductPrice"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 店舗が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCoupons: {
        parameters: {
            query?: {
                /** @description クーポンID */
                coupon_id?: number;
                /** @description クーポン名 */
                coupon_name?: string;
                /** @description 開始日（FROM）（YYYY-MM-DD） */
                start_date_from?: string;
                /** @description 開始日（TO）（YYYY-MM-DD） */
                start_date_to?: string;
                /** @description 終了日（FROM）（YYYY-MM-DD） */
                end_date_from?: string;
                /** @description 終了日（TO）（YYYY-MM-DD） */
                end_date_to?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        couponInfos?: components["schemas"]["Coupon"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createCoupon: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CouponCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description クーポンID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCoupon: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Coupon"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteCoupon: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateCoupon: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CouponUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCouponProducts: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        couponProducts?: components["schemas"]["CouponProduct"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createCouponProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CouponProductCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description クーポン適用商品ID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCouponProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
                /** @description クーポン適用商品ID */
                couponProductId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CouponProduct"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンまたはクーポン適用商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteCouponProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
                /** @description クーポン適用商品ID */
                couponProductId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンまたはクーポン適用商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateCouponProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description クーポンID */
                id: number;
                /** @description クーポン適用商品ID */
                couponProductId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CouponProductUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDのクーポンまたはクーポン適用商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getIncomingStocks: {
        parameters: {
            query?: {
                /** @description 入庫ID */
                incoming_stock_id?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 入庫区分（1:仕入、2:店舗間移動、3:返品） */
                division?: number;
                /** @description 入庫ステータス（1:計画中、2:確定済） */
                status?: number;
                /** @description 入庫日（FROM）（Y-m-d） */
                target_date_from?: string;
                /** @description 入庫日（TO）（Y-m-d） */
                target_date_to?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        incomingStocks?: components["schemas"]["IncomingStock"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createIncomingStock: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IncomingStockCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description 入庫ID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getIncomingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 入庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IncomingStock"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの入庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteIncomingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 入庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの入庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateIncomingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 入庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IncomingStockUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの入庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getIncomingStockDetails: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path: {
                /** @description 入庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        incomingStockDetails?: components["schemas"]["IncomingStockDetail"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの入庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateIncomingStockDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 入庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IncomingStockDetailUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの入庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getOutgoingStocks: {
        parameters: {
            query?: {
                /** @description 出庫ID */
                outgoing_stock_id?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 出庫区分（1:店舗間移動、2:返品、3:その他） */
                division?: number;
                /** @description 出庫ステータス（1:計画中、2:確定済） */
                status?: number;
                /** @description 出庫日（FROM）（Y-m-d） */
                target_date_from?: string;
                /** @description 出庫日（TO）（Y-m-d） */
                target_date_to?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        outgoingStocks?: components["schemas"]["OutgoingStock"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OutgoingStockCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description 出庫ID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OutgoingStock"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OutgoingStockUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getOutgoingStockDetails: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path: {
                /** @description 出庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        outgoingStockDetails?: components["schemas"]["OutgoingStockDetail"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateOutgoingStockDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OutgoingStockDetailUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCorrectionOutgoingStocks: {
        parameters: {
            query?: {
                /** @description 出庫修正申請ID */
                correction_outgoing_stock_id?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 申請ステータス（1:申請中、2:承認済、3:却下） */
                status?: number;
                /** @description 申請日（FROM）（Y-m-d） */
                target_date_from?: string;
                /** @description 申請日（TO）（Y-m-d） */
                target_date_to?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        correctionOutgoingStocks?: components["schemas"]["CorrectionRequestOutgoingStock"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createCorrectionOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CorrectionRequestOutgoingStockCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description 出庫修正申請ID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCorrectionOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫修正申請ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CorrectionRequestOutgoingStock"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫修正申請情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteCorrectionOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫修正申請ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫修正申請情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateCorrectionOutgoingStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 出庫修正申請ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CorrectionRequestOutgoingStockUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたIDの出庫修正申請情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStocktakings: {
        parameters: {
            query?: {
                /** @description 棚卸ID */
                stocktaking_id?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 棚卸名 */
                stocktaking_name?: string;
                /** @description 棚卸ステータス（1:集計中、2:完了） */
                stocktaking_status?: number;
                /** @description 開始日時（FROM）（Y-m-d H:i:s） */
                start_date_from?: string;
                /** @description 開始日時（TO）（Y-m-d H:i:s） */
                start_date_to?: string;
                /** @description 終了日時（FROM）（Y-m-d H:i:s） */
                end_date_from?: string;
                /** @description 終了日時（TO）（Y-m-d H:i:s） */
                end_date_to?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        stocktakings?: components["schemas"]["Stocktaking"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createStocktaking: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StocktakingCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description 棚卸ID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStocktakingCategories: {
        parameters: {
            query?: {
                /** @description 棚卸ID */
                stocktaking_id?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 部門ID */
                category_id?: number;
                /** @description 部門コード */
                category_code?: string;
                /** @description 部門名 */
                category_name?: string;
                /** @description 棚卸実施済みフラグ（0:未実施、1:実施済み） */
                is_complete?: number;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        stocktakingCategories?: components["schemas"]["StocktakingCategory"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateStocktakingCategory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StocktakingCategoryUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定された棚卸部門が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStocktakingProducts: {
        parameters: {
            query?: {
                /** @description 棚卸ID */
                stocktaking_id?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 部門ID */
                category_id?: number;
                /** @description 商品ID */
                product_id?: number;
                /** @description 商品コード */
                product_code?: string;
                /** @description 商品名 */
                product_name?: string;
                /** @description バーコード */
                barcode?: string;
                /** @description 商品カウント済みフラグ（0:未カウント、1:カウント済み） */
                is_counted?: number;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        stocktakingProducts?: components["schemas"]["StocktakingProduct"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateStocktakingProduct: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StocktakingProductUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定された棚卸商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStocktakingStocks: {
        parameters: {
            query?: {
                /** @description 棚卸ID */
                stocktaking_id?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 商品ID */
                product_id?: number;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        stocktakingStocks?: components["schemas"]["StocktakingStock"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createStocktakingStock: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StocktakingStockCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description 棚卸在庫ID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateStocktakingStock: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StocktakingStockUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定された棚卸在庫が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getTaxRates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        taxRates?: components["schemas"]["TaxRate"][];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getReduceTaxRates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        reduceTaxRates?: components["schemas"]["ReduceTaxRate"][];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getReceiptRemarks: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receiptRemarks?: components["schemas"]["ReceiptRemark"][];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createReceiptRemark: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReceiptRemarkCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description レシート備考ID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getDiscountDivisions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        discountDivisions?: components["schemas"]["DiscountDivision"][];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCatCctCardCompanies: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        catCctCardCompanies?: components["schemas"]["CatCctCardCompany"][];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCustomerTypes: {
        parameters: {
            query?: {
                /** @description 顧客タイプID */
                customer_type_id?: number;
                /** @description 顧客タイプコード */
                code?: string;
                /** @description 顧客タイプ名 */
                name?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        customerTypes?: components["schemas"]["CustomerType"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createCustomerType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomerTypeCreate"];
            };
        };
        responses: {
            /** @description 成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description 顧客タイプID */
                        id?: number;
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getCustomerTypeSections: {
        parameters: {
            query?: {
                /** @description 顧客タイプセクションID */
                customer_type_section_id?: number;
                /** @description 顧客タイプID */
                customer_type_id?: number;
                /** @description セクション名 */
                name?: string;
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        customerTypeSections?: components["schemas"]["CustomerTypeSection"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateCustomerTypeSection: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomerTypeSectionUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定されたセクションが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
