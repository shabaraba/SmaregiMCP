/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 部門一覧取得
         * @description 部門情報一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - categoryId：部門ID
         *     - categoryCode：部門コード
         *     - level：階層レベル
         *     - displaySequence：表示順
         *     - updDateTime：更新日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 部門コード */
                    category_code?: string;
                    /** @description 階層レベル */
                    level?: "1" | "2" | "3";
                };
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 部門登録
         * @description 部門情報を登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryCreate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 部門取得
         * @description 部門情報を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                };
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                    /** @description 部門ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * 部門削除
         * @description 部門情報を削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                    /** @description 部門ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された部門IDが削除不可の場合
                 *     紐づく商品が存在する場合
                 *     親部門IDに指定されている場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定した部門データが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 部門更新
         * @description 部門情報を更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                    /** @description 部門ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Category"];
                    };
                };
                /** @description 入力チェックエラーの場合
                 *     親部門IDに階層レベル3のものが指定された場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 部門IDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/category_groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 部門グループ一覧取得
         * @description 部門グループの一覧を取得します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         *     sortで使用可能なパラメータ
         *     - categoryGroupId：部門グループID
         *     - displaySequence：表示順
         *     - updDateTime：更新日時：登録時・更新時の日時
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 検索パラメータ（カンマ区切りで指定可）
                     *     Response項目を指定可能
                     *     ※一部項目(withで指定する項目、2階層目以降の項目)については指定不可
                     *      */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可）
                     *     指定可能な項目については上記参照
                     *      */
                    sort?: string;
                    /** @description 上限数 */
                    limit?: number;
                    /** @description ページ */
                    page?: number;
                    /** @description 部門グループID */
                    category_group_id?: string;
                    /** @description 部門グループコード */
                    category_group_code?: string;
                };
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CategoryGroup"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 部門グループ登録
         * @description 部門グループを登録します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryGroupCreate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CategoryGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合
                 *     指定された部門グループコードが重複する場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/category_groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 部門グループ削除
         * @description 指定された部門グループを削除します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                    /** @description 部門グループID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された部門グループに紐付いている部門が存在する場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 部門グループ更新
         * @description 指定された部門グループを更新します。
         *
         *     Plans:
         *     スタンダード・プレミアム・プレミアムプラス・フードビジネス・リテールビジネス
         *
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 契約ID */
                    contract_id: string;
                    /** @description 部門グループID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CategoryGroupUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CategoryGroup"];
                    };
                };
                /** @description 入力チェックエラーの場合
                 *     指定された部門グループコードが重複する場合
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定されたIDが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品一覧の取得
         * @description 商品の一覧を取得します。
         *     検索条件を指定することで、特定の商品のみを取得することも可能です。
         *
         */
        get: operations["getProducts"];
        put?: never;
        /**
         * 商品の新規登録
         * @description 商品を新規登録します。
         */
        post: operations["createProduct"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の取得
         * @description 指定したIDの商品情報を取得します。
         */
        get: operations["getProduct"];
        /**
         * 商品の更新
         * @description 指定したIDの商品情報を更新します。
         */
        put: operations["updateProduct"];
        post?: never;
        /**
         * 商品の削除
         * @description 指定したIDの商品を論理削除します。
         */
        delete: operations["deleteProduct"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/prices": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の価格情報取得
         * @description 指定した商品IDの価格情報を取得します。
         */
        get: operations["getProductPrices"];
        put?: never;
        /**
         * 商品の価格情報登録
         * @description 指定した商品IDに価格情報を登録します。
         */
        post: operations["createProductPrice"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/prices/changes": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の価格変更履歴取得
         * @description 指定した商品IDの価格変更履歴を取得します。
         */
        get: operations["getProductPriceChanges"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{product_id}/prices/{price_division}/{store_id}/{start_date}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 価格区分 */
                price_division: number;
                /** @description 店舗ID */
                store_id: number;
                /** @description 適用開始日(YYYY-MM-DD形式) */
                start_date: string;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 商品価格情報の削除
         * @description 指定した商品の特定価格区分、店舗、適用開始日の価格情報を削除します。
         */
        delete: operations["deleteProductPrice"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/reserve_items": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の予約項目取得
         * @description 指定した商品IDの予約項目情報を取得します。
         */
        get: operations["getProductReserveItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/attributes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品属性一覧の取得
         * @description 登録されている商品属性の一覧を取得します。
         */
        get: operations["getProductAttributes"];
        put?: never;
        /**
         * 商品属性の新規登録
         * @description 商品属性を新規登録します。
         */
        post: operations["createProductAttribute"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/attribute_items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品属性項目一覧の取得
         * @description 登録されている商品属性項目の一覧を取得します。
         */
        get: operations["getProductAttributeItems"];
        put?: never;
        /**
         * 商品属性項目の新規登録
         * @description 商品属性項目を新規登録します。
         */
        post: operations["createProductAttributeItem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/attributes/{no}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性番号 */
                no: number;
            };
            cookie?: never;
        };
        get?: never;
        /**
         * 商品属性の更新
         * @description 指定した番号の商品属性情報を更新します。
         */
        put: operations["updateProductAttribute"];
        post?: never;
        /**
         * 商品属性の削除
         * @description 指定した番号の商品属性を削除します。属性項目や商品との関連が存在する場合は削除できません。
         */
        delete: operations["deleteProductAttribute"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/attribute_items/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性項目コード */
                code: string;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 商品属性項目の削除
         * @description 指定したコードの商品属性項目を削除します。商品との関連が存在する場合は削除できません。
         */
        delete: operations["deleteProductAttributeItem"];
        options?: never;
        head?: never;
        /**
         * 商品属性項目の更新
         * @description 指定したコードの商品属性項目情報を更新します。
         */
        patch: operations["updateProductAttributeItem"];
        trace?: never;
    };
    "/products/{id}/stores": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の店舗関連情報取得
         * @description 指定した商品IDの店舗関連情報を取得します。
         */
        get: operations["getProductStores"];
        /**
         * 商品の店舗関連情報一括更新
         * @description 指定した商品IDの店舗関連情報を一括で更新します。
         */
        put: operations["updateProductStores"];
        /**
         * 商品の店舗関連情報登録
         * @description 指定した商品IDに店舗関連情報を登録します。
         */
        post: operations["createProductStore"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/inventory_reservations": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        /**
         * 商品の在庫引当情報取得
         * @description 指定した商品IDの在庫引当情報を取得します。
         */
        get: operations["getProductInventoryReservations"];
        /**
         * 商品の在庫引当情報一括更新
         * @description 指定した商品IDの在庫引当情報を一括で更新します。
         */
        put: operations["updateProductInventoryReservations"];
        /**
         * 商品の在庫引当情報登録
         * @description 指定した商品IDに在庫引当情報を登録します。
         */
        post: operations["createProductInventoryReservation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/inventory_reservations/{reservation_product_id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
                /** @description 引当商品ID */
                reservation_product_id: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 商品の在庫引当情報削除
         * @description 指定した商品IDと引当商品IDの在庫引当情報を削除します。
         */
        delete: operations["deleteProductInventoryReservation"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/reserve_item_labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 予約項目ラベル一覧の取得
         * @description 登録されている予約項目ラベルの一覧を取得します。
         */
        get: operations["getProductReserveItemLabels"];
        put?: never;
        /**
         * 予約項目ラベルの新規登録
         * @description 予約項目ラベルを新規登録します。
         */
        post: operations["createProductReserveItemLabel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{product_id}/reserve_items/{no}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 予約項目番号 */
                no: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 商品の予約項目削除
         * @description 指定した商品IDと予約項目番号の予約項目情報を削除します。
         */
        delete: operations["deleteProductReserveItem"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/reserve_item_labels/{no}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 予約項目ラベル番号 */
                no: number;
            };
            cookie?: never;
        };
        get?: never;
        /**
         * 予約項目ラベルの更新
         * @description 指定した番号の予約項目ラベル情報を更新します。
         */
        put: operations["updateProductReserveItemLabel"];
        post?: never;
        /**
         * 予約項目ラベルの削除
         * @description 指定した番号の予約項目ラベルを削除します。商品の予約項目での使用があると削除できません。
         */
        delete: operations["deleteProductReserveItemLabel"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 商品画像一覧の取得
         * @description 登録されている商品画像の一覧を取得します。
         */
        get: operations["getProductImages"];
        put?: never;
        /**
         * 商品画像のアップロード
         * @description 商品画像をアップロードします。
         */
        post: operations["uploadProductImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/image": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        /**
         * 商品メイン画像の更新
         * @description 指定した商品IDのメイン画像を更新します。
         */
        put: operations["updateProductImage"];
        post?: never;
        /**
         * 商品メイン画像の削除
         * @description 指定した商品IDのメイン画像を削除します。
         */
        delete: operations["deleteProductImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/icon_image": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        /**
         * 商品アイコン画像の更新
         * @description 指定した商品IDのアイコン画像を更新します。
         */
        put: operations["updateProductIconImage"];
        post?: never;
        /**
         * 商品アイコン画像の削除
         * @description 指定した商品IDのアイコン画像を削除します。
         */
        delete: operations["deleteProductIconImage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 取引一覧取得
         * @description 取引一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 最大取得件数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 取引ID(From) */
                    "transaction_head_id-from"?: string;
                    /** @description 取引ID(To) */
                    "transaction_head_id-to"?: string;
                    /** @description 取引日時(From)。範囲検索（開始日時）
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "transaction_date_time-from"?: string;
                    /** @description 取引日時(To)。範囲検索（終了日時）
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "transaction_date_time-to"?: string;
                    /** @description 取引区分(1:通常,2:入金,3:出金,4:預かり金,5:預かり金返金,6:ポイント加算,7:ポイント減算,8:ポイント失効,9:回数券,11:チップ,13:マイル加算,14:マイル減算,15：バリューカード入金,16：領収証) */
                    transaction_head_division?: "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "11" | "13" | "14" | "15" | "16";
                    /** @description 店舗ID */
                    store_id?: number;
                    /** @description 端末取引日時(From)。範囲検索（開始日時）
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "terminal_tran_date_time-from"?: string;
                    /** @description 端末取引日時(To)。範囲検索（終了日時）
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "terminal_tran_date_time-to"?: string;
                    /** @description 精算日時 [YYYY-MM-DDThh:mm:ssTZD] */
                    adjustment_date_time?: string;
                    /** @description 締め日 [YYYY-MM-DD] */
                    sum_date?: string;
                    /** @description 締め日(From)。範囲検索（開始日）
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "sum_date-from"?: string;
                    /** @description 締め日(To)。範囲検索（終了日）
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "sum_date-to"?: string;
                    /** @description 会員コード */
                    customer_code?: string;
                    /** @description レシート番号：指定した値を完全一致で検索します */
                    transaction_uuid?: string;
                    /** @description バーコード：指定したバーコードの仮販売データに紐づく、取引データを取得します。 */
                    barcode?: string;
                    /** @description 更新日時(From)：登録時・更新時の日時。締め日(From)[YYYY-MM-DD]
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To)：登録時・更新時の日時。締め日(From)[YYYY-MM-DD]
                     *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                     *     ※ 取引日時(From)(To)、端末取引日時(From)(To)、締め日(From)(To)、更新日時(From)(To)のうち1つ以上を必ず指定してご利用ください
                     *      */
                    "upd_date_time-to"?: string;
                    /** @description 取引明細情報を付加するか(全項目付加する場合はall,
                     *     一部項目を付加する場合はsummary, しない場合はnone)
                     *     ※ none以外に設定する場合、limitは100以下のみ設定可能。
                     *      */
                    with_details?: "none" | "all" | "summary";
                    /** @description その他支払い情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_deposit_others?: "none" | "all";
                    /** @description 取置き情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_layaways?: "none" | "all";
                    /** @description 取置き引取情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_layaway_pick_ups?: "none" | "all";
                    /** @description 取引金操作情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_money_control?: "none" | "all";
                    /** @description 販売時の商品属性情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_detail_product_attributes?: "none" | "all";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            transactions?: components["schemas"]["Transaction"][];
                            pagination?: components["schemas"]["Pagination"];
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        /**
         * 取引作成
         * @description 取引情報を作成します。
         *
         *     作成した取引データには、自動的に取引IDが割り当てられます。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransactionCreate"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * Format: int64
                             * @description 作成された取引ID
                             */
                            id?: number;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 取引取得
         * @description 取引情報を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取引明細情報を付加するか(全項目付加する場合はall,
                     *     一部項目を付加する場合はsummary, しない場合はnone)
                     *      */
                    with_details?: "none" | "all" | "summary";
                    /** @description その他支払い情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_deposit_others?: "none" | "all";
                    /** @description クーポン情報を付加するか(付加する場合はall, しない場合はnone)
                     *     対象プラン プレミアム／プレミアムプラス／フードビジネス／リテールビジネス
                     *      */
                    with_coupons?: "none" | "all";
                    /** @description クーポン商品付与情報を付加するか(付加する場合はall, しない場合はnone)
                     *     対象プラン プレミアム／プレミアムプラス／フードビジネス／リテールビジネス
                     *      */
                    with_coupon_items?: "none" | "all";
                    /** @description 小計値引／割引、単品値引／割引の値引区分や割引区分情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_discounts?: "none" | "all";
                    /** @description 店舗情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_store?: "none" | "all";
                    /** @description 会員情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_customer?: "none" | "all";
                    /** @description 客層情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_customer_groups?: "none" | "all";
                    /** @description スタッフ情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_staff?: "none" | "all";
                    /** @description 取引時のスタッフ情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_recorded_staff?: "none" | "all";
                    /** @description 取置き情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_layaways?: "none" | "all";
                    /** @description 取置き引取情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_layaway_pick_ups?: "none" | "all";
                    /** @description 取引金操作情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_money_control?: "none" | "all";
                    /** @description 販売時の商品属性情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_detail_product_attributes?: "none" | "all";
                };
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Transaction"];
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * 取引削除
         * @description 取引情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス（コンテンツなし） */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 取引が既に処理済みなど、削除できない状態である */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * 取引更新
         * @description 取引情報を更新します。
         *
         *     リクエストボディに含まれていないフィールドは更新されません。
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransactionUpdate"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 更新完了メッセージ
                             * @example 更新が完了しました
                             */
                            message?: string;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/transactions/{id}/details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 取引詳細一覧取得
         * @description 特定の取引の詳細情報（商品明細や支払明細）の一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 最大取得件数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 小計値引／割引、単品値引／割引の値引区分や割引区分情報を付加するか(付加する場合はall, しない場合はnone)
                     *      */
                    with_discounts?: "none" | "all";
                    /** @description 販売時の商品属性情報を付加するか(付加する場合はall, しない場合はnone) */
                    with_detail_product_attributes?: "none" | "all";
                };
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            details?: components["schemas"]["TransactionDetail"][];
                        };
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/{id}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 取引取り消し
         * @description 取引を取消します。
         *     ※外部決済連携を行う支払方法での決済を含む取引を取消しても、外部決済システムへの返金処理は行われません。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransactionCancel"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 取消完了メッセージ
                             * @example 取消が完了しました
                             */
                            message?: string;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/{id}/dispose": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 取引打消取消
         * @description 取引を打消取消します。指定された取引に対して、返品する取引情報を作成します。
         *     ※外部決済連携を行う支払方法での決済を含む取引を取消しても、外部決済システムへの返金処理は行われません。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 取引ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransactionDispose"];
                };
            };
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 打消取消完了メッセージ
                             * @example 打消取消が完了しました
                             */
                            message?: string;
                        };
                    };
                };
                /** @description バリデーションエラー */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 指定された取引が見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員一覧取得
         * @description 会員情報一覧を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description 会員コード */
                    customer_code?: string;
                    /** @description 会員ID(From) */
                    "customer_id-from"?: string;
                    /** @description 会員ID(To) */
                    "customer_id-to"?: string;
                    /** @description 会員番号 */
                    customer_no?: string;
                    /** @description 更新日時(From) */
                    "upd_date_time-from"?: string;
                    /** @description 更新日時(To) */
                    "upd_date_time-to"?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * 会員登録
         * @description 会員情報を登録します。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerCreate"];
                };
            };
            responses: {
                /** @description 登録成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員情報取得
         * @description 指定したIDの会員情報を取得します。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /**
         * 会員情報更新
         * @description 指定したIDの会員情報を更新します。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerUpdate"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Customer"];
                    };
                };
                /** @description 入力チェックエラーの場合 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        /**
         * 会員情報削除
         * @description 指定したIDの会員情報を削除します。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 会員ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象リソースが存在しない場合 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customer_required_column_setting": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 会員必須項目取得
         * @description 会員情報登録・更新時の必須項目設定を取得します。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 取得したいフィールド名（カンマ区切りで指定可） */
                    fields?: string[];
                    /** @description 並び順（カンマ区切りで指定可） */
                    sort?: string;
                    /** @description 取得上限数 */
                    limit?: number;
                    /** @description ページ番号 */
                    page?: number;
                    /** @description カラム名 */
                    column_name?: string;
                    /** @description 設定値：会員登録・更新時に必須項目とするかどうかの設定値。 (0:任意、1:必須) */
                    value?: "0" | "1";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerRequired"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 在庫一覧取得
         * @description 条件を指定して、在庫情報の一覧を取得します。
         */
        get: operations["getStocks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stock/{product_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 在庫更新
         * @description 在庫情報を更新します。
         *     在庫数は、入力された値と同じになるよう更新します。
         *
         */
        patch: operations["patchProductStock"];
        trace?: never;
    };
    "/stock/{product_id}/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 在庫相対値更新
         * @description 在庫情報を相対値で更新します。現在の値に対し、入力された値を加算（入力値が負の場合は減算）した値に更新します。
         */
        post: operations["updateStockRelative"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stock/changes/{product_id}/{store_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 在庫変動履歴取得
         * @description 指定された商品IDと店舗IDの在庫変動履歴を取得します。
         */
        get: operations["getStockChanges"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description 部門情報 */
        Category: {
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId: string;
            /**
             * @description 部門コード (20文字以内)
             * @example FOOD
             */
            categoryCode?: string;
            /**
             * @description 部門名 (85文字以内)
             * @example 食品
             */
            categoryName: string;
            /**
             * @description 部門名略称 (85文字以内)
             * @example 食
             */
            categoryAbbr?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 端末表示カラー (#000000形式)
             * @example #FF0000
             */
            color?: string;
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId?: string;
            /**
             * @description 親部門ID
             * @example 1
             */
            parentCategoryId?: string;
            /**
             * @description 階層レベル (1-3)
             * @example 1
             * @enum {string}
             */
            level?: "1" | "2" | "3";
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 部門登録情報 */
        CategoryCreate: {
            /**
             * @description 部門コード (20文字以内)
             * @example FOOD
             */
            categoryCode?: string;
            /**
             * @description 部門名 (85文字以内)
             * @example 食品
             */
            categoryName: string;
            /**
             * @description 部門名略称 (85文字以内)
             * @example 食
             */
            categoryAbbr?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 端末表示カラー (#000000形式)
             * @example #FF0000
             */
            color?: string;
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId?: string;
            /**
             * @description 親部門ID
             * @example 1
             */
            parentCategoryId?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
        };
        /** @description 部門更新情報 */
        CategoryUpdate: {
            /**
             * @description 部門コード (20文字以内)
             * @example FOOD
             */
            categoryCode?: string;
            /**
             * @description 部門名 (85文字以内)
             * @example 食品
             */
            categoryName?: string;
            /**
             * @description 部門名略称 (85文字以内)
             * @example 食
             */
            categoryAbbr?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @example 1
             * @enum {string}
             */
            displayFlag?: "0" | "1";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 端末表示カラー (#000000形式)
             * @example #FF0000
             */
            color?: string;
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId?: string;
            /**
             * @description 親部門ID
             * @example 1
             */
            parentCategoryId?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
        };
        /** @description 部門グループ情報 */
        CategoryGroup: {
            /**
             * @description 部門グループID
             * @example 1
             */
            categoryGroupId: string;
            /**
             * @description 部門グループコード (10文字以内)
             * @example GROUP1
             */
            categoryGroupCode?: string;
            /**
             * @description 部門グループ名 (85文字以内)
             * @example 食品グループ
             */
            categoryGroupName: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 部門グループ登録情報 */
        CategoryGroupCreate: {
            /**
             * @description 部門グループコード (10文字以内)
             * @example GROUP1
             */
            categoryGroupCode?: string;
            /**
             * @description 部門グループ名 (85文字以内)
             * @example 食品グループ
             */
            categoryGroupName: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
        };
        /** @description 部門グループ更新情報 */
        CategoryGroupUpdate: {
            /**
             * @description 部門グループコード (10文字以内)
             * @example GROUP1
             */
            categoryGroupCode?: string;
            /**
             * @description 部門グループ名 (85文字以内)
             * @example 食品グループ
             */
            categoryGroupName?: string;
            /**
             * @description 表示順序 (0-999999999)
             * @example 1
             */
            displaySequence?: string;
        };
        /** @description 商品情報 */
        Product: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId: string;
            /**
             * @description 商品コード (20文字以内)
             * @example ITEM001
             */
            productCode?: string;
            /**
             * @description 商品名 (85文字以内)
             * @example 有機栽培コーヒー
             */
            productName: string;
            /**
             * @description 商品カナ (85文字以内)
             * @example ユウキサイバイコーヒー
             */
            productKana?: string;
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 商品価格区分 (1:通常価格、2:オープン価格)
             * @default 1
             * @example 1
             * @enum {string}
             */
            productPriceDivision: "1" | "2";
            /**
             * @description 商品単価
             * @example 500
             */
            price: string;
            /**
             * @description 会員価格
             * @example 450
             */
            customerPrice?: string;
            /**
             * @description 原価
             * @example 300
             */
            cost?: string;
            /**
             * @description 規格 (1000文字以内)
             * @example 豆の種類：アラビカ種、焙煎：中煎り
             */
            attribute?: string;
            /**
             * @description 説明 (1000文字以内)
             * @example 有機栽培されたコーヒー豆を使用し、香り高く仕上げました。
             */
            description?: string;
            /**
             * @description キャッチコピー (1000文字以内)
             * @example 豊かな香りと深い味わい
             */
            catchCopy?: string;
            /**
             * @description サイズ (85文字以内)
             * @example 200g
             */
            size?: string;
            /**
             * @description カラー (85文字以内)
             * @example ブラウン
             */
            color?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * @description グループコード (85文字以内)
             * @example COFFEE
             */
            groupCode?: string;
            /**
             * @description URL (255文字以内)
             * @example https://example.com/coffee
             */
            url?: string;
            /**
             * @description レシート印字商品名 (64文字以内)
             * @example 有機コーヒー
             */
            printReceiptProductName?: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 売上区分 (0:売上対象、1:売上対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            salesDivision: "0" | "1";
            /**
             * @description 在庫管理区分 (0:在庫管理対象、1:在庫管理対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            stockControlDivision: "0" | "1";
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 商品区分 (0:通常商品、1:回数券、2:オプション商品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            division: "0" | "1" | "2";
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 品番
             * @example S12345
             */
            supplierProductNo?: string;
            /**
             * @description 値引割引計算対象 (0:対象外、1:対象)
             * @default 1
             * @example 1
             * @enum {string}
             */
            calcDiscount: "0" | "1";
            /**
             * @description 社員販売割引率
             * @example 10
             */
            staffDiscountRate?: string;
            /**
             * @description 部門税設定参照フラグ (0:reduceTaxIdを使用、1:部門の税設定を使用)
             * @default 1
             * @example 1
             * @enum {string}
             */
            useCategoryReduceTax: "0" | "1";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 軽減税率用商品単価
             * @example 500
             */
            reduceTaxPrice?: string;
            /**
             * @description 軽減税率用商品会員単価
             * @example 450
             */
            reduceTaxCustomerPrice?: string;
            /**
             * @description 発注点
             * @example 10
             */
            orderPoint?: string;
            /**
             * @description 仕入原価
             * @example 300
             */
            purchaseCost?: string;
            /**
             * Format: date-time
             * @description 適用開始日時
             * @example 2023-01-01T00:00:00+09:00
             */
            appStartDateTime?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description エラーレスポンス */
        Error: {
            /**
             * @description エラータイプ
             * @example about:blank
             */
            type: string;
            /**
             * @description エラータイトル
             * @example Bad Request
             */
            title: string;
            /**
             * @description エラーの詳細メッセージ
             * @example 入力パラメータが正しくありません
             */
            detail: string;
            /**
             * @description HTTPステータスコード
             * @example 400
             */
            status: number;
        };
        /** @description 商品登録情報 */
        ProductCreate: {
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId: string;
            /**
             * @description 商品コード (20文字以内)
             * @example ITEM001
             */
            productCode?: string;
            /**
             * @description 商品名 (85文字以内)
             * @example 有機栽培コーヒー
             */
            productName: string;
            /**
             * @description 商品カナ (85文字以内)
             * @example ユウキサイバイコーヒー
             */
            productKana?: string;
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @default 1
             * @example 1
             * @enum {string}
             */
            taxDivision: "0" | "1" | "2";
            /**
             * @description 商品価格区分 (1:通常価格、2:オープン価格)
             * @default 1
             * @example 1
             * @enum {string}
             */
            productPriceDivision: "1" | "2";
            /**
             * @description 商品単価
             * @example 500
             */
            price: string;
            /**
             * @description 会員価格
             * @example 450
             */
            customerPrice?: string;
            /**
             * @description 原価
             * @example 300
             */
            cost?: string;
            /**
             * @description 規格 (1000文字以内)
             * @example 豆の種類：アラビカ種、焙煎：中煎り
             */
            attribute?: string;
            /**
             * @description 説明 (1000文字以内)
             * @example 有機栽培されたコーヒー豆を使用し、香り高く仕上げました。
             */
            description?: string;
            /**
             * @description キャッチコピー (1000文字以内)
             * @example 豊かな香りと深い味わい
             */
            catchCopy?: string;
            /**
             * @description サイズ (85文字以内)
             * @example 200g
             */
            size?: string;
            /**
             * @description カラー (85文字以内)
             * @example ブラウン
             */
            color?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * @description グループコード (85文字以内)
             * @example COFFEE
             */
            groupCode?: string;
            /**
             * @description URL (255文字以内)
             * @example https://example.com/coffee
             */
            url?: string;
            /**
             * @description レシート印字商品名 (64文字以内)
             * @example 有機コーヒー
             */
            printReceiptProductName?: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * @description 商品区分 (0:通常商品、1:回数券、2:オプション商品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            division: "0" | "1" | "2";
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description 売上区分 (0:売上対象、1:売上対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            salesDivision: "0" | "1";
            /**
             * @description 在庫管理区分 (0:在庫管理対象、1:在庫管理対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            stockControlDivision: "0" | "1";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @default 0
             * @example 0
             * @enum {string}
             */
            pointNotApplicable: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @default 0
             * @example 0
             * @enum {string}
             */
            taxFreeDivision: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象 (0:対象外、1:対象)
             * @default 1
             * @example 1
             * @enum {string}
             */
            calcDiscount: "0" | "1";
            /**
             * @description 社員販売割引率
             * @example 10
             */
            staffDiscountRate?: string;
            /**
             * @description 部門税設定参照フラグ (0:reduceTaxIdを使用、1:部門の税設定を使用)
             * @default 1
             * @example 1
             * @enum {string}
             */
            useCategoryReduceTax: "0" | "1";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 軽減税率用商品単価
             * @example 500
             */
            reduceTaxPrice?: string;
            /**
             * @description 軽減税率用商品会員単価
             * @example 450
             */
            reduceTaxCustomerPrice?: string;
            /**
             * @description 発注点
             * @example 10
             */
            orderPoint?: string;
            /**
             * @description 仕入原価
             * @example 300
             */
            purchaseCost?: string;
            /**
             * @description 品番
             * @example S12345
             */
            supplierProductNo?: string;
            /**
             * Format: date-time
             * @description 適用開始日時
             * @example 2023-01-01T00:00:00+09:00
             */
            appStartDateTime?: string;
            /** @description 商品自由項目 */
            reserveItems?: {
                /**
                 * @description 自由項目番号
                 * @example 1
                 */
                no?: string;
                /**
                 * @description 自由項目値
                 * @example ドリップコーヒー
                 */
                value?: string;
            }[];
            /** @description 商品価格 */
            prices?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 価格区分 (1:商品単価、2:会員単価)
                 * @example 1
                 * @enum {string}
                 */
                priceDivision?: "1" | "2";
                /**
                 * Format: date
                 * @description 適用開始日
                 * @example 2023-01-01
                 */
                startDate?: string;
                /**
                 * Format: date
                 * @description 適用終了日
                 * @example 2023-12-31
                 */
                endDate?: string;
                /**
                 * @description 価格
                 * @example 500
                 */
                price?: string;
            }[];
            /** @description 商品取扱店舗 */
            stores?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 商品オプショングループID
                 * @example 1
                 */
                productOptionGroupId?: string;
                /**
                 * @description 取扱区分 (0:販売する、1:販売しない)
                 * @example 0
                 * @enum {string}
                 */
                assignDivision?: "0" | "1";
            }[];
            /** @description 在庫引当商品 */
            inventoryReservations?: {
                /**
                 * @description 引当商品ID
                 * @example 2
                 */
                reservationProductId?: string;
                /**
                 * @description 引当個数
                 * @example 1
                 */
                reservationAmount?: string;
            }[];
            /** @description 商品属性項目 */
            attributeItems?: {
                /**
                 * @description コード
                 * @example CODE01
                 */
                code?: string;
                /**
                 * @description 項目番号
                 * @example 1
                 */
                no?: string;
            }[];
            /** @description 発注設定 */
            orderSetting?: {
                /** @description 継続区分 */
                continuationDivision?: string;
                /**
                 * @description 発注状態 (0:発注不可、1:発注可)
                 * @example 1
                 * @enum {string}
                 */
                orderStatusDivision?: "0" | "1";
                /** @description 発注不可理由 */
                orderNoReasonDivision?: string;
                /** @description 発注単位 */
                orderUnit?: {
                    /**
                     * @description 発注単位区分 (0:単位なし、1:単位あり)
                     * @example 0
                     * @enum {string}
                     */
                    division?: "0" | "1";
                    /**
                     * @description 発注数
                     * @example 1
                     */
                    num?: string;
                    /**
                     * @description 発注単位名
                     * @example ケース
                     */
                    name?: string;
                };
                /**
                 * @description 発注上限数
                 * @example 100
                 */
                orderLimitAmount?: string;
                /**
                 * @description 仕入先編集可能フラグ (0:不可、1:可能)
                 * @example 0
                 * @enum {string}
                 */
                orderSupplierEditable?: "0" | "1";
                /**
                 * @description PB商品区分 (0:NB、1:PB)
                 * @example 1
                 * @enum {string}
                 */
                pbDivision?: "0" | "1";
                /**
                 * @description 表示フラグ (0:表示しない、1:表示する)
                 * @example 1
                 * @enum {string}
                 */
                displayFlag?: "0" | "1";
                /** @description 店舗別発注設定 */
                stores?: {
                    /**
                     * @description 店舗ID
                     * @example 1
                     */
                    storeId?: string;
                    /**
                     * @description 発注上限数
                     * @example 100
                     */
                    orderLimitAmount?: string;
                    /**
                     * @description 表示フラグ (0:表示しない、1:表示する)
                     * @example -1
                     * @enum {string}
                     */
                    displayFlag?: "-1" | "0" | "1";
                }[];
            };
        };
        /** @description 商品更新情報 */
        ProductUpdate: {
            /**
             * @description 部門ID
             * @example 1
             */
            categoryId?: string;
            /**
             * @description 商品コード (20文字以内)
             * @example ITEM001
             */
            productCode?: string;
            /**
             * @description 商品名 (85文字以内)
             * @example 有機栽培コーヒー
             */
            productName?: string;
            /**
             * @description 商品カナ (85文字以内)
             * @example ユウキサイバイコーヒー
             */
            productKana?: string;
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 商品価格区分 (1:通常価格、2:オープン価格)
             * @example 1
             * @enum {string}
             */
            productPriceDivision?: "1" | "2";
            /**
             * @description 商品単価
             * @example 500
             */
            price?: string;
            /**
             * @description 会員価格
             * @example 450
             */
            customerPrice?: string;
            /**
             * @description 原価
             * @example 300
             */
            cost?: string;
            /**
             * @description 規格 (1000文字以内)
             * @example 豆の種類：アラビカ種、焙煎：中煎り
             */
            attribute?: string;
            /**
             * @description 説明 (1000文字以内)
             * @example 有機栽培されたコーヒー豆を使用し、香り高く仕上げました。
             */
            description?: string;
            /**
             * @description キャッチコピー (1000文字以内)
             * @example 豊かな香りと深い味わい
             */
            catchCopy?: string;
            /**
             * @description サイズ (85文字以内)
             * @example 200g
             */
            size?: string;
            /**
             * @description カラー (85文字以内)
             * @example ブラウン
             */
            color?: string;
            /**
             * @description タグ (85文字以内)
             * @example 季節商品
             */
            tag?: string;
            /**
             * @description グループコード (85文字以内)
             * @example COFFEE
             */
            groupCode?: string;
            /**
             * @description URL (255文字以内)
             * @example https://example.com/coffee
             */
            url?: string;
            /**
             * @description レシート印字商品名 (64文字以内)
             * @example 有機コーヒー
             */
            printReceiptProductName?: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 端末表示フラグ (0:表示しない、1:表示する)
             * @example 1
             * @enum {string}
             */
            displayFlag?: "0" | "1";
            /**
             * @description 商品区分 (0:通常商品、1:回数券、2:オプション商品)
             * @example 0
             * @enum {string}
             */
            division?: "0" | "1" | "2";
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description 売上区分 (0:売上対象、1:売上対象外)
             * @example 0
             * @enum {string}
             */
            salesDivision?: "0" | "1";
            /**
             * @description 在庫管理区分 (0:在庫管理対象、1:在庫管理対象外)
             * @example 0
             * @enum {string}
             */
            stockControlDivision?: "0" | "1";
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /**
             * @description 社員販売割引率
             * @example 10
             */
            staffDiscountRate?: string;
            /**
             * @description 部門税設定参照フラグ (0:reduceTaxIdを使用、1:部門の税設定を使用)
             * @example 1
             * @enum {string}
             */
            useCategoryReduceTax?: "0" | "1";
            /**
             * @description 軽減税率ID
             *     標準:null
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 軽減税率用商品単価
             * @example 500
             */
            reduceTaxPrice?: string;
            /**
             * @description 軽減税率用商品会員単価
             * @example 450
             */
            reduceTaxCustomerPrice?: string;
            /**
             * @description 発注点
             * @example 10
             */
            orderPoint?: string;
            /**
             * @description 仕入原価
             * @example 300
             */
            purchaseCost?: string;
            /**
             * @description 品番
             * @example S12345
             */
            supplierProductNo?: string;
            /**
             * Format: date-time
             * @description 適用開始日時
             * @example 2023-01-01T00:00:00+09:00
             */
            appStartDateTime?: string;
            /** @description 商品価格 */
            prices?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 価格区分 (1:商品単価、2:会員単価)
                 * @example 1
                 * @enum {string}
                 */
                priceDivision?: "1" | "2";
                /**
                 * Format: date
                 * @description 適用開始日
                 * @example 2023-01-01
                 */
                startDate?: string;
                /**
                 * Format: date
                 * @description 適用終了日
                 * @example 2023-12-31
                 */
                endDate?: string;
                /**
                 * @description 価格
                 * @example 500
                 */
                price?: string;
            }[];
            /** @description 商品自由項目 */
            reserveItems?: {
                /**
                 * @description 自由項目番号
                 * @example 1
                 */
                no?: string;
                /**
                 * @description 自由項目値
                 * @example ドリップコーヒー
                 */
                value?: string;
            }[];
            /** @description 商品取扱店舗 */
            stores?: {
                /**
                 * @description 店舗ID
                 * @example 1
                 */
                storeId?: string;
                /**
                 * @description 商品オプショングループID
                 * @example 1
                 */
                productOptionGroupId?: string;
                /**
                 * @description 取扱区分 (0:販売する、1:販売しない)
                 * @example 0
                 * @enum {string}
                 */
                assignDivision?: "0" | "1";
            }[];
            /** @description 在庫引当商品 */
            inventoryReservations?: {
                /**
                 * @description 引当商品ID
                 * @example 2
                 */
                reservationProductId?: string;
                /**
                 * @description 引当個数
                 * @example 1
                 */
                reservationAmount?: string;
            }[];
            /** @description 商品属性項目 */
            attributeItems?: {
                /**
                 * @description コード
                 * @example CODE01
                 */
                code?: string;
                /**
                 * @description 項目番号
                 * @example 1
                 */
                no?: string;
            }[];
            /** @description 発注設定 */
            orderSetting?: {
                /** @description 継続区分 */
                continuationDivision?: string;
                /**
                 * @description 発注状態 (0:発注不可、1:発注可)
                 * @example 1
                 * @enum {string}
                 */
                orderStatusDivision?: "0" | "1";
                /** @description 発注不可理由 */
                orderNoReasonDivision?: string;
                /** @description 発注単位 */
                orderUnit?: {
                    /**
                     * @description 発注単位区分 (0:単位なし、1:単位あり)
                     * @example 0
                     * @enum {string}
                     */
                    division?: "0" | "1";
                    /**
                     * @description 発注数
                     * @example 1
                     */
                    num?: string;
                    /**
                     * @description 発注単位名
                     * @example ケース
                     */
                    name?: string;
                };
                /**
                 * @description 発注上限数
                 * @example 100
                 */
                orderLimitAmount?: string;
                /**
                 * @description 仕入先編集可能フラグ (0:不可、1:可能)
                 * @example 0
                 * @enum {string}
                 */
                orderSupplierEditable?: "0" | "1";
                /**
                 * @description PB商品区分 (0:NB、1:PB)
                 * @example 1
                 * @enum {string}
                 */
                pbDivision?: "0" | "1";
                /**
                 * @description 表示フラグ (0:表示しない、1:表示する)
                 * @example 1
                 * @enum {string}
                 */
                displayFlag?: "0" | "1";
                /** @description 店舗別発注設定 */
                stores?: {
                    /**
                     * @description 店舗ID
                     * @example 1
                     */
                    storeId?: string;
                    /**
                     * @description 発注上限数
                     * @example 100
                     */
                    orderLimitAmount?: string;
                    /**
                     * @description 表示フラグ (0:表示しない、1:表示する)
                     * @example -1
                     * @enum {string}
                     */
                    displayFlag?: "-1" | "0" | "1";
                }[];
            };
        };
        /** @description 商品価格情報 */
        ProductPrice: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 価格区分 (1:商品単価、2:会員単価)
             * @example 1
             * @enum {string}
             */
            priceDivision: "1" | "2";
            /**
             * Format: date
             * @description 適用開始日
             * @example 2023-01-01
             */
            startDate: string;
            /**
             * Format: date
             * @description 適用終了日
             * @example 2023-12-31
             */
            endDate?: string;
            /**
             * @description 価格
             * @example 500
             */
            price: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品価格変更履歴情報 */
        ProductPriceChange: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 価格区分 (1:商品単価、2:会員単価)
             * @example 1
             * @enum {string}
             */
            priceDivision: "1" | "2";
            /**
             * Format: date
             * @description 適用開始日
             * @example 2023-01-01
             */
            startDate: string;
            /**
             * Format: date
             * @description 適用終了日
             * @example 2023-12-31
             */
            endDate?: string;
            /**
             * @description 価格
             * @example 500
             */
            price: string;
            /**
             * @description 変更前価格
             * @example 450
             */
            oldPrice: string;
            /**
             * @description 変更スタッフID
             * @example 1
             */
            staffId?: string;
            /**
             * @description 変更スタッフ名
             * @example 山田太郎
             */
            staffName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime: string;
        };
        /** @description 商品予約項目情報 */
        ProductReserveItem: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 予約項目番号
             * @example 1
             */
            no: string;
            /**
             * @description 予約項目ラベル番号
             * @example 1
             */
            labelNo?: string;
            /**
             * @description 予約項目値
             * @example ドリップコーヒー
             */
            value: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品属性情報 */
        ProductAttribute: {
            /**
             * @description 属性番号
             * @example 1
             */
            attributeNo?: string;
            /**
             * @description 属性名称
             * @example カラー
             */
            attributeName: string;
            /**
             * @description 選択区分 (0:任意選択、1:必須選択)
             * @default 0
             * @example 0
             * @enum {string}
             */
            selectedDivision: "0" | "1";
            /**
             * @description 選択タイプ (0:一つ選択、1:複数選択)
             * @default 0
             * @example 0
             * @enum {string}
             */
            selectedType: "0" | "1";
            /**
             * @description 表示フラグ (0:表示しない、1:表示する)
             * @default 1
             * @example 1
             * @enum {string}
             */
            displayFlag: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品属性項目情報 */
        ProductAttributeItem: {
            /**
             * @description 属性項目コード
             * @example CODE01
             */
            code?: string;
            /**
             * @description 属性番号
             * @example 1
             */
            attributeNo: string;
            /**
             * @description 属性項目名称
             * @example ブラック
             */
            attributeItemName: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description ステータス (0:無効、1:有効)
             * @default 1
             * @example 1
             * @enum {string}
             */
            status: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品店舗関連情報 */
        ProductStore: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 商品オプショングループID
             * @example 1
             */
            productOptionGroupId?: string;
            /**
             * @description 取扱区分 (0:販売する、1:販売しない)
             * @default 0
             * @example 0
             * @enum {string}
             */
            assignDivision: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品在庫引当情報 */
        ProductInventoryReservation: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 引当商品ID
             * @example 2
             */
            reservationProductId: string;
            /**
             * @description 引当個数
             * @example 1
             */
            reservationAmount: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品予約項目ラベル情報 */
        ProductReserveItemLabel: {
            /**
             * @description 予約項目ラベル番号
             * @example 1
             */
            no?: string;
            /**
             * @description 予約項目ラベル名
             * @example 商品種別
             */
            name: string;
            /**
             * @description ステータス (0:無効、1:有効)
             * @default 1
             * @example 1
             * @enum {string}
             */
            status: "0" | "1";
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品画像情報 */
        ProductImage: {
            /**
             * @description 商品画像ID
             * @example 1
             */
            imageId?: string;
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * @description 画像URL
             * @example https://example.com/images/product1.jpg
             */
            imageUrl: string;
            /**
             * @description 画像タイプ (1:メイン画像、2:アイコン画像、3:詳細画像)
             * @example 1
             * @enum {string}
             */
            imageType: "1" | "2" | "3";
            /**
             * @description 画像サイズ(バイト)
             * @example 10240
             */
            size?: string;
            /**
             * @description 画像幅
             * @example 800
             */
            width?: string;
            /**
             * @description 画像高さ
             * @example 600
             */
            height?: string;
            /**
             * @description 登録スタッフID
             * @example 1
             */
            staffId?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2023-01-01T00:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2023-01-01T00:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 商品画像アップロード情報 */
        ProductImageUpload: {
            /**
             * @description 商品ID
             * @example 1
             */
            productId: string;
            /**
             * @description 画像タイプ (1:メイン画像、2:アイコン画像、3:詳細画像)
             * @example 1
             * @enum {string}
             */
            imageType: "1" | "2" | "3";
            /**
             * @description 表示順序
             * @example 1
             */
            displaySequence?: string;
            /**
             * Format: binary
             * @description 画像ファイル（JPEG、PNG形式）
             */
            image: string;
        };
        /** @description 取引情報 */
        Transaction: {
            /**
             * Format: int64
             * @description 取引ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /** @description 端末番号 */
            terminalNo: string;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description 取引日時
             */
            transactionDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /**
             * Format: double
             * @description 小計金額
             */
            subtotalAmount: number;
            /**
             * Format: double
             * @description 支払金額
             */
            paymentAmount: number;
            /**
             * Format: double
             * @description お釣り金額
             */
            changeAmount: number;
            /**
             * Format: double
             * @description ポイント使用額
             */
            pointAmount?: number | null;
            /** @description 支払種別
             *     * 1: 現金
             *     * 2: クレジットカード
             *     * 3: 電子マネー
             *     * 4: 商品券
             *     * 5: 複合決済
             *     * 6: その他 */
            paymentType: number;
            /** @description 取引ステータス
             *     * 1: 会計済
             *     * 2: 返品
             *     * 3: 取消 */
            status: number;
            /** @description レシート番号 */
            receiptNo: string;
            /** @description レシートテキスト */
            receiptText?: string | null;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description ページネーション情報 */
        Pagination: {
            /**
             * @description 1ページあたりの最大件数 (1-1000)
             * @default 100
             * @example 100
             */
            limit: number;
            /**
             * @description ページ番号 (1始まり)
             * @default 1
             * @example 1
             */
            page: number;
            /**
             * @description 並び順の指定 (カンマ区切りで複数指定可能。降順は「:desc」を付加)
             * @example updDateTime:desc
             */
            sort?: string;
        };
        /** @description 取引作成リクエスト */
        TransactionCreate: {
            /**
             * @description 取引を識別する区分。
             *     （1:通常、2:入金、3:出金、4:預かり金、 5:預かり金返金、6:ポイント加算、7:ポイント減算、8:ポイント失効、10:取置き、13:マイル加算、14:マイル減算、15:バリューカード入金、16:領収証）
             *     ※ 10:取置きについては、取置き登録APIをご使用ください。
             *     ※ 8:ポイント失効、9:回数券、11:チップ、15バリューカード入金、16:領収証は対応しておりません。
             *
             * @enum {string}
             */
            transactionHeadDivision: "1" | "2" | "3" | "4" | "5" | "6" | "7" | "13" | "14";
            /**
             * @description 取引の取消を識別する区分。 (0:通常、1取消）
             * @default 0
             * @enum {string}
             */
            cancelDivision: "0" | "1";
            /**
             * Format: int64
             * @description 取引明細の値引き後小計の合計。
             *     ※明細合計と異なる場合エラー
             *
             */
            subtotal: number;
            /**
             * Format: int64
             * @description 小計の値引き金額を設定
             */
            subtotalDiscountPrice?: number;
            /**
             * Format: int64
             * @description 小計の割引を設定 （単位％） デフォルトは未設定。
             *     設定された場合、小計値引は必須。
             *     ※小計値引率から小計値引は計算しないため小計値引に値引額を設定してください。
             *
             */
            subtotalDiscountRate?: number;
            /**
             * Format: int64
             * @description 小計値引き/割引時に指定された区分を設定。
             *     管理画面->設定->販売設定->値引区分/割引区分のページで確認できるID。
             *
             */
            subtotalDiscountDivision?: number;
            /**
             * Format: int64
             * @description 使用ポイント * ポイント還元率。
             *
             */
            pointDiscount?: number;
            /**
             * Format: int64
             * @description 小計 - 小計値引き - ポイント値引き - クーポン値引き + 端数値引額 + 外税額 + 手数料 + 送料 - 免税額 を設定
             *     ※ 端数値引き機能は現在ご利用いただけません
             *
             */
            total: number;
            /**
             * Format: int64
             * @description 内税商品計 / 110 * 10。
             *     ※税率が10%の場合
             *     ※小数点以下は税の丸め方式で指定の通り
             *
             */
            taxInclude?: number;
            /**
             * Format: int64
             * @description 外税商品計 / 110 * 10。
             *     ※税率が10%の場合
             *     ※小数点以下は税の丸め方式で指定の通り
             *
             */
            taxExclude?: number;
            /**
             * @description 販売時の合計金額の端数を丸めるか否かを設定する。
             *     00:なし
             *     11:一の位を四捨五入 12:一の位を切捨 13:一の位を切上
             *     21:十の位を四捨五入 22:十の位を切捨 23:十の位を切上
             *     31:百の位を四捨五入 32:百の位を切捨 33:百の位を切上
             *     41:千の位を四捨五入 42:千の位を切捨 43:千の位を切上
             *     99:手入力
             *
             * @enum {string}
             */
            roundingDivision?: "00" | "11" | "12" | "13" | "21" | "22" | "23" | "31" | "32" | "33" | "41" | "42" | "43" | "99";
            /**
             * Format: int64
             * @description 端数値引額
             *
             */
            roundingPrice?: number;
            /**
             * Format: int64
             * @description 会計時に預かった金額。（預かり金現金 + 預かり金クレジット + 預かり金その他)
             *     ※預かり金を正しく設定しないと、日報が正しく表示されません。
             *
             */
            deposit?: number;
            /**
             * Format: int64
             * @description 会計時に預かった現金金額。
             *     ※現金支払の場合必ず設定。（預かり金現金 - 釣銭)が現金支払額に設定されます。
             *     ※預かり金を正しく設定しないと、日報が正しく表示されません。
             *
             */
            depositcash?: number;
            /**
             * Format: int64
             * @description 会計時に預かったクレジット金額。
             *     ※クレジット払いの場合必ず設定。預かり金クレジットが内クレジット支払金額に設定されます。
             *     ※預かり金を正しく設定しないと、日報が正しく表示されません。
             *
             */
            depositCredit?: number;
            /**
             * Format: int64
             * @description 釣銭。現金の返却金額。
             *     ※預かり金を正しく設定しないと、日報が正しく表示されません。
             *
             */
            change?: number;
            /**
             * Format: int64
             * @description 取引で付与されるポイント。 合計 * ポイント付与率
             *     会員IDが設定されている場合、会員ポイント情報を更新。
             *     ※省略時は0を設定
             *     スマレジのポイント算出方式について
             *     1. カード会社・支払方法にポイント付与単位(金額)とポイント付与単位(ポイント)の設定がない場合
             *     付与されるポイントはポイント対象金額 / ポイント付与単位(金額) * ポイント付与単位(ポイント)で計算されます。(端数切り捨て） スマレジ・アプリから取引登録された時に採用されるポイント付与情報は会員のポイント付与率が未設定だった場合は会員ランクを、 会員ランクも未設定だった場合は店舗のポイント付与単位(金額)及びポイント付与単位(ポイント)が採用されます。
             *       - 会員ランクのポイント付与単位(金額)及びポイント付与単位(金額)については、スマレジ管理画面の[設定]->[会員設定]->[会員ランク]よりご確認ください。
             *       - 店舗のポイント付与単位(金額)については店舗登録APIのRequest Body記載のpointCondition.pointGivingUnitPriceをご確認ください。
             *       - 会員のポイント付与単位(金額)については会員登録APIのRequest Body記載のpointGivingUnitPriceをご確認ください。
             *
             * @default 0
             */
            newPoint: number;
            /**
             * Format: int64
             * @description 取引で使用したポイント。
             *     会員IDが設定されている場合、会員ポイント情報を更新。
             *     ※省略時は0を設定
             *
             * @default 0
             */
            spendPoint: number;
            /**
             * Format: int64
             * @description 取引前のポイント
             *
             * @default 0
             */
            point: number;
            /**
             * Format: int64
             * @description 取引後のポイント 現在ポイント + 付与ポイント - 使用ポイント。
             *
             * @default 0
             */
            totalPoint: number;
            /**
             * Format: int64
             * @description 取引前のマイル
             *
             * @default 0
             */
            currentMile: number;
            /**
             * Format: int64
             * @description 取引で付与されるマイル
             *     合計 * ポイント付与率
             *
             * @default 0
             */
            earnMile: number;
            /**
             * Format: int64
             * @description 取引後のマイル
             *     現在マイル + 獲得マイル + 調整マイル
             *
             * @default 0
             */
            totalMile: number;
            /**
             * Format: int64
             * @description 取引で手動で付与されるマイル
             *
             * @default 0
             */
            adjustmentMile: number;
            /**
             * @description 調整マイルの区分
             *     1:0マイル　（マイルを付与しない。「調整マイル = -1 * 獲得マイル」）
             *     2:マイル指定（指定したマイルにする。「調整マイル = 入力値 - 獲得マイル」）
             *     3:マイル加算（マイルを加算/減算する。「調整マイル =入力値」）
             *     4:マイルｎ倍（指定倍数にする。「調整マイル = 獲得マイル * (n - 1)」
             *
             * @enum {string}
             */
            adjustmentMileDivision?: "1" | "2" | "3" | "4";
            /**
             * Format: int64
             * @description 調整マイルの入力値
             *
             */
            adjustmentMileValue?: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員毎に付与する一意のコード。
             *     ※設定された場合、会員IDは必須。
             *     ※会員マスタに存在する会員IDが設定されている場合、会員情報の会員コードと一致しないとエラー。
             *     ※省略時、会員IDが設定されている場合、会員マスタの会員コードを設定。（スマレジ管理画面ver.4.12.0リリース以降）
             *      */
            customerCode?: string;
            /**
             * Format: int64
             * @description 端末で設定された取引ID。(連携元システムで任意の連番を設定してください）
             *
             */
            terminalTranId: number;
            /**
             * Format: date-time
             * @description 端末で設定された取引日時。[YYYY-MM-DDThh:mm:ssTZD]（連携元システムで処理日時を設定してください）
             *
             */
            terminalTranDateTime: string;
            /**
             * @description 締め処理を実施したかの区分。 （0:未処理、1:精算処理済み、2:締め処理済み）
             *     ※省略時は、店舗情報の締め方式区分に合わせて設定します。
             *     ※0:未処理または1:精算処理済みは、店舗の締め方式区分が「手動締め処理」のときのみ設定可能。
             *     ※存在しない端末IDを設定した場合、2:締め処理済みを設定してください。
             *
             * @default 0
             * @enum {string}
             */
            sumDivision: "0" | "1" | "2";
            /**
             * Format: date
             * @description 締めをしたら年月日が入る。 [YYYY-MM-DD]
             *     ※締め区分を2に設定した場合必須。締め区分を0に設定した場合設定不可。
             *
             */
            sumDate?: string;
            /** @description 管理画面の[設定]→[会員設定]→[会員ランク]で設定したコードを設定してください。
             *     存在しないコードを設定するとエラーになります。
             *      */
            customerRank?: string;
            /**
             * Format: int64
             * @description 客層ID。客層セクションIDが1の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId?: number;
            /**
             * Format: int64
             * @description 客層ID2。客層セクションIDが2の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId2?: number;
            /**
             * Format: int64
             * @description 客層ID3。客層セクションIDが3の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId3?: number;
            /**
             * Format: int64
             * @description 客層ID4。客層セクションIDが4の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId4?: number;
            /**
             * Format: int64
             * @description 客層ID5。客層セクションIDが5の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId5?: number;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number;
            /** @description メモ */
            memo?: string;
            /** @description レシートに印字するメモ */
            receiptMemo?: string;
            /**
             * Format: int64
             * @description EC連携用送料。
             */
            carriage?: number;
            /**
             * Format: int64
             * @description EC連携用手数料。
             */
            commission?: number;
            /**
             * Format: int64
             * @description 客数
             */
            guestNumbers?: number;
            /**
             * Format: int64
             * @description 客数(男)
             */
            guestNumbersMale?: number;
            /**
             * Format: int64
             * @description 客数(女)
             */
            guestNumbersFemale?: number;
            /**
             * Format: int64
             * @description 客数(不明)
             */
            guestNumbersUnknown?: number;
            /**
             * Format: date-time
             * @description 入店日時
             */
            enterDateTime?: string;
            /**
             * @description 免税販売区分 (0:通常販売、1:免税販売(自動計算)、2:免税販売(強制免税適用)、3:免税販売(一般品のみ強制免税適用)、4:免税販売(消耗品のみ強制免税適用)、5:免税販売(自動計算・合算))
             *     ※未設定の場合、0:通常販売
             *
             * @default 0
             * @enum {string}
             */
            taxFreeSalesDivision: "0" | "1" | "2" | "3" | "4" | "5";
            /**
             * Format: int64
             * @description 内税商品の一般品免税額。
             */
            netTaxFreeGeneralTaxInclude?: number;
            /**
             * Format: int64
             * @description 外税商品の一般品免税額。
             */
            netTaxFreeGeneralTaxExclude?: number;
            /**
             * Format: int64
             * @description 内税商品の消耗般品免税額。
             */
            netTaxFreeConsumableTaxInclude?: number;
            /**
             * Format: int64
             * @description 外税商品の消耗般品免税額。
             */
            netTaxFreeConsumableTaxExclude?: number;
            /** @description レジ端末よりクイックコマンドを押下した値を設定。 和名を設定する。
             *     ※1取引タグは最大64文字。複数ある場合は、カンマ区切りで設定。
             *      */
            tags?: string;
            /**
             * @description 1:税額を含める + 利用ポイント分を含める、
             *     2:税額を含めない + 利用ポイント分を含める、
             *     3:税額を含める + 利用ポイント分を含めない、
             *     4:税額を含めない + 利用ポイント分を含めない
             *     ※省略時、店舗マスタから設定。
             *
             * @enum {string}
             */
            pointGivingDivision?: "1" | "2" | "3" | "4";
            /**
             * Format: int64
             * @description ポイント付与の設定 n円をnポイントの「n円」の部分。 （設定範囲1円～99999円)
             *     （例10円ごとに2ポイントの場合、10円）
             *     ※未設定の場合は店舗マスタから設定。
             *
             */
            pointGivingUnitPrice?: number;
            /**
             * Format: int64
             * @description ポイント付与の設定 n円をnポイントの「nポイント」の部分 （設定範囲0.00ポイント～99999.99ポイント)
             *     （例10円ごとに0.2ポイントの場合、0.2ポイント）
             *     ※未設定の場合は店舗マスタから設定。
             *
             */
            pointGivingUnit?: number;
            /**
             * @description ポイント利用時の税を含む／含まないを判定。
             *     1:ポイント利用を現金として扱う (税を含む値引き)
             *     2:ポイント利用を値引として扱う (税を含まない値引き)
             *     ※未設定の場合は店舗マスタから設定。 初期値:1。
             *
             * @enum {string}
             */
            pointSpendDivision?: "1" | "2";
            /**
             * @description マイレージ機能を利用するか否か。 (0: 利用しない 1: 利用する 2: ポイントの代わりに貯める)
             *     ※未設定の場合は店舗マスタから設定。 初期値:0。
             *
             * @enum {string}
             */
            mileageDivision?: "0" | "1" | "2";
            /** @description マイレージの名称。未設定の場合は「マイル」
             *      */
            mileageLabel?: string;
            /** @description 自由な文字列。 PINコードなど会員を識別する任意の文字列を設定してください。
             *      */
            customerPinCode?: string;
            /**
             * @description 取引が外税販売、内税販売かを識別する区分。 （0:内税販売、1:外税販売）
             *     ※省略時は0:内税販売を設定
             *
             * @enum {string}
             */
            sellDivision?: "0" | "1";
            /**
             * Format: float
             * @description 税率 （単位％）
             *     ※省略時は、スマレジに設定されている消費税を設定（端末取引日時より算出）
             *
             */
            taxRate?: number;
            /**
             * @description 税の丸めを判定。 0:四捨五入、1:切り捨て、2:切り上げ
             *     ※省略時はスマレジに設定されている税の丸め方式を設定
             *
             * @enum {string}
             */
            taxRounding?: "0" | "1" | "2";
            /**
             * @description 割引の端数を丸める方法を指定する区分。 0:四捨五入、1:切り捨て、2:切り上げ
             *     ※省略時は店舗マスタに設定されている税の丸め方式を設定
             *
             * @enum {string}
             */
            discountRoundingDivision?: "0" | "1" | "2";
            /** @description レシートに印字する番号。ユニークな値を設定してください。
             *     ※レシート番号が重複するとスマレジ・アプリにて取引データの呼び出しができなくなる可能性があります
             *     ※省略時は、1970年から計算した現在秒の末尾9桁＋端末IDゼロ詰め4桁
             *      */
            transactionUuid?: string;
            /** @description 引換券番号
             *      */
            exchangeTicketNo?: string;
            /**
             * Format: int64
             * @description 有効日数が経過しても、ギフトレシートの引換ができなくなるわけではありません。
             *
             */
            giftReceiptValidDays?: number;
            /**
             * @description 小計に対する値引または割引の上にさらに割引を行う際の、割引額の算出方法を指定する区分。
             *     0:小計（明細から算出された、値引・割引前の小計を一律対象に割引率を乗算したものを割引額とします。）
             *     1:他の値引割引に追従した小計（小計に対し他の値引・割引で変動した後の金額を都度対象に割引率を乗算したものを割引額とします。小計値引・割引 → クーポン値引・割引 の順番で計算されます。）
             *     ※割引額計算対象の設定値は取引登録後にスマレジ・アプリにて取引を編集する際の割引額算出に使用します。
             *     ※（注）取引登録APIでは、自動算出した値ではなくsubtotalDiscountPrice(小計値引き)の設定値を割引額に登録します。そのため、APIで登録される取引の割引額が割引額計算対象の設定値によって変動することはありません。
             *
             * @enum {string}
             */
            discountCalculateDivision?: "0" | "1";
            /** @description 仮販売のバーコード。
             *     ※ 複数ある場合はカンマ区切り。
             *      */
            barcode?: string;
            /**
             * Format: int64
             * @description 取置きの取引ID。
             *     ※ 指定した取置き取引を引取済にします。
             *
             */
            layawayServerTransactionHeadId?: number;
            /** @description 取引詳細 */
            details?: {
                /**
                 * Format: int64
                 * @description ユニーク値 取引毎の明細に付与するID。
                 *     設定する場合は1〜999まで。
                 *     取引明細を指定する場合必須。
                 *
                 */
                transactionDetailId: number;
                /**
                 * Format: int64
                 * @description 紐付く親の取引明細がある場合、その取引明細IDを設定。
                 *     ※商品区分が、0（通常販売）, 4（バンドル(親)）の場合は設定できず、2（オプション商品）の場合はオプション元の取引明細IDを、7（バンドル子）, 8（バンドル値引）の時は、バンドル(親)の取引明細IDを設定しなければならない。
                 *
                 */
                parentTransactionDetailId?: number;
                /**
                 * @description 取引明細を識別する区分。
                 *     （1:通常、2:返品、3:部門売り）
                 *     取引明細を指定する場合必須。
                 *
                 * @enum {string}
                 */
                transactionDetailDivision: "1" | "2" | "3";
                /**
                 * Format: int64
                 * @description 商品毎に付与するID
                 *     ※ 存在しない商品IDが設定されている場合、nullを登録。
                 *     ※ 商品IDで指定された商品の持つ商品区分が 1:回数券 の明細は登録できません。
                 *     ※ ユーザーアクセストークンを利用する場合、ユーザーの所属する店舗で販売している商品IDを指定してください。
                 *
                 */
                productId?: number;
                /** @description 商品コード。（半角英数記号 20桁以内）
                 *     省略時、商品IDが設定されている場合、マスタから設定。その他の場合はnull。
                 *      */
                productCode?: string | null;
                /** @description 商品名
                 *     省略時、商品区分が0:通常、2:オプション商品、7:バンドル商品(子)、8:バンドル値引(子)で商品IDが設定されている場合、商品マスタから設定。商品区分が4:バンドル (親)で商品バンドルグループIDが設定されている場合、商品バンドルグループマスタから設定。その他の場合はnull。
                 *      */
                productName?: string | null;
                /** @description レシート印字商品名
                 *     省略時、商品IDが設定されている場合、マスタから設定。その他の場合はnull。
                 *      */
                printReceiptProductName?: string | null;
                /**
                 * @description 税区分
                 *     (0:税込、1:税抜、2:非課税)
                 *     ※設定時そのまま設定
                 *     ※省略時、商品IDが設定されている場合、マスタから設定。その他の場合は0:税込。
                 *
                 * @enum {string}
                 */
                taxDivision?: "0" | "1" | "2";
                /**
                 * Format: int64
                 * @description 単価
                 *     ※設定時そのまま設定
                 *     ※省略時、商品IDが設定されている場合、マスタから設定。その他の場合は0円。
                 *
                 */
                price?: number;
                /**
                 * Format: int64
                 * @description 販売単価
                 *     販売時の単価を設定。
                 *     取引明細を指定する場合必須。
                 *
                 */
                salesPrice: number;
                /**
                 * Format: int64
                 * @description 単品値引額。販売単価の値引き金額を設定。
                 */
                unitDiscountPrice?: number;
                /**
                 * Format: int64
                 * @description 単品の割引率を設定。（単位:％）
                 *     ※このフィールドはラベルであり、販売単価の値引き金額の算出には利用されません。
                 *     ※設定された場合、単品値引は必須
                 *
                 */
                unitDiscountRate?: number;
                /**
                 * Format: int64
                 * @description 単品値引き/割引時に指定された割引区分を設定。
                 *
                 */
                unitDiscountDivision?: number;
                /**
                 * Format: int64
                 * @description 購入数。取引明細を指定する場合必須。
                 */
                quantity: number;
                /**
                 * Format: int64
                 * @description 商品に紐付く部門毎に付与するID。数字9桁以内。
                 *     ※部門情報が存在しない場合、エラー
                 *     ※商品IDが設定されている場合、商品情報の部門IDと一致しないとエラー
                 *     ※省略時、商品IDが設定されている場合、商品マスタの部門IDを設定
                 *
                 */
                categoryId?: number;
                /** @description 商品に紐付く部門名。(85文字以内)
                 *     ※設定時、そのまま設定。
                 *     ※省略時、部門IDが設定されている場合、マスタから設定。その他の場合はnull。
                 *      */
                categoryName?: string;
            }[];
        };
        /** @description 取引更新リクエスト */
        TransactionUpdate: {
            /**
             * Format: int64
             * @description 客層ID。客層セクションIDが1の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId?: number | null;
            /**
             * Format: int64
             * @description 客層ID2。客層セクションIDが2の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId2?: number | null;
            /**
             * Format: int64
             * @description 客層ID3。客層セクションIDが3の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId3?: number | null;
            /**
             * Format: int64
             * @description 客層ID4。客層セクションIDが4の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId4?: number | null;
            /**
             * Format: int64
             * @description 客層ID5。客層セクションIDが5の客層IDを設定。
             *     ※客層情報が存在しない場合エラー
             *
             */
            customerGroupId5?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description メモ */
            memo?: string | null;
            /** @description レシートに印字するメモ */
            receiptMemo?: string | null;
            /**
             * Format: int64
             * @description 客数
             */
            guestNumbers?: number | null;
            /**
             * Format: int64
             * @description 客数(男)
             */
            guestNumbersMale?: number | null;
            /**
             * Format: int64
             * @description 客数(女)
             */
            guestNumbersFemale?: number | null;
            /**
             * Format: int64
             * @description 客数(不明)
             */
            guestNumbersUnknown?: number | null;
            /** @description レジ端末よりクイックコマンドを押下した値を設定。 和名を設定する。
             *     ※1取引タグは最大64文字。複数ある場合は、カンマ区切りで設定。
             *      */
            tags?: string | null;
        };
        /** @description 取引詳細情報 */
        TransactionDetail: {
            /**
             * Format: int64
             * @description 取引明細ID
             */
            id: number;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId: number;
            /** @description 行番号 */
            lineNo: number;
            /**
             * Format: int64
             * @description 商品ID
             */
            productId?: number | null;
            /** @description 商品コード */
            productCode?: string | null;
            /** @description 商品名 */
            productName: string;
            /**
             * Format: int64
             * @description 部門ID
             */
            categoryId?: number | null;
            /** @description 部門名 */
            categoryName?: string | null;
            /**
             * Format: double
             * @description 単価
             */
            price: number;
            /**
             * Format: double
             * @description 数量
             */
            quantity: number;
            /**
             * Format: double
             * @description 単品値引額
             */
            unitDiscountAmount?: number | null;
            /**
             * Format: double
             * @description 単品値引率
             */
            unitDiscountRate?: number | null;
            /** @description 単品値引種別
             *     * 1: 金額値引
             *     * 2: 率値引 */
            unitDiscountType?: number | null;
            /**
             * Format: double
             * @description 小計金額
             */
            subtotalAmount: number;
            /**
             * Format: double
             * @description 税率
             */
            taxRate: number;
            /** @description 税種別
             *     * 1: 内税
             *     * 2: 外税 */
            taxType: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description 明細種別
             *     * 1: 通常商品
             *     * 2: セット親商品
             *     * 3: セット子商品
             *     * 4: 返品親明細
             *     * 5: 返品子明細
             *     * 6: 訂正明細
             *     * 7: 取引値引
             *     * 8: 小計値引
             *     * 9: 小計割引
             *     * 10: クーポン明細 */
            detailType: number;
            /** @description 親明細行番号 */
            parentLineNo?: number | null;
            /**
             * Format: int64
             * @description 値引ID
             */
            discountId?: number | null;
            /** @description 値引名 */
            discountName?: string | null;
            /**
             * Format: int64
             * @description クーポンID
             */
            couponId?: number | null;
            /** @description クーポン名 */
            couponName?: string | null;
            /** @description クーポンコード */
            couponCode?: string | null;
            /** @description 免税区分
             *     * 0: 課税
             *     * 1: 免税
             *     * 2: 非課税 */
            taxFreeDivision: number;
            /** @description 備考 */
            remark?: string | null;
            /**
             * Format: double
             * @description 原価
             */
            cost?: number | null;
            /** @description 在庫取引区分
             *     * 1: 在庫引当あり
             *     * 2: 在庫引当なし */
            stockTransactionType?: number | null;
            /** @description 原価区分
             *     * 1: 移動平均原価
             *     * 2: 最終仕入原価
             *     * 3: 前日在庫単価 */
            costType?: number | null;
            /**
             * Format: int64
             * @description 在庫引当ID
             */
            stockReserveId?: number | null;
            /** @description シリアルコード */
            serialCode?: string | null;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description 取引取消リクエスト */
        TransactionCancel: {
            /**
             * Format: date-time
             * @description 取消／打消しの場合自動設定。[YYYY-MM-DDThh:mm:ssTZD]
             *     未設定の場合、自動で設定されます。
             *
             */
            cancelDateTime?: string | null;
            /** @description 個別アプリ専用支払方法IDを指定した決済で取消伝票番号を登録するのに利用します
             *     ※現状は最大１つしか指定できません
             *      */
            depositOthers?: {
                /**
                 * @description 個別アプリ専用支払方法IDを設定した項番を指定してください
                 * @enum {string}
                 */
                no?: "1" | "2" | "3";
                /** @description キャッシュレス決済時の取消伝票番号を設定してください
                 *     ※個別アプリ専用支払方法登録APIで登録した支払方法IDを指定した場合しか利用できません
                 *      */
                cancelSlipNumber?: string;
            }[];
        };
        /** @description 取引打消取消リクエスト */
        TransactionDispose: {
            /**
             * Format: date-time
             * @description 端末で設定された取引日時。[YYYY-MM-DDThh:mm:ssTZD]
             *     未設定の場合、自動で設定されます。
             *
             */
            terminalTranDateTime?: string | null;
            /** @description 個別アプリ専用支払方法IDを指定した決済で取消伝票番号を登録するのに利用します
             *     ※現状は最大１つしか指定できません
             *      */
            depositOthers?: {
                /**
                 * @description 個別アプリ専用支払方法IDを設定した項番を指定してください
                 * @enum {string}
                 */
                no?: "1" | "2" | "3";
                /** @description キャッシュレス決済時の取消伝票番号を設定してください
                 *     ※個別アプリ専用支払方法登録APIで登録した支払方法IDを指定した場合しか利用できません
                 *      */
                cancelSlipNumber?: string;
            }[];
        };
        Customer: {
            /** @description 会員ID */
            customerId?: string;
            /** @description 会員コード */
            customerCode?: string;
            /** @description 会員番号 */
            customerNo?: string;
            /** @description 会員ランク */
            rank?: string;
            /** @description スタッフランク */
            staffRank?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /**
             * @description 性別(0:不明, 1:男性, 2:女性)
             * @enum {string}
             */
            sex?: "0" | "1" | "2";
            /** @description バーコード */
            barcode?: string;
            /**
             * Format: date
             * @description 生年月日
             */
            birthDate?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description 携帯電話番号 */
            mobileNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description メールアドレス2 */
            mailAddress2?: string;
            /** @description メールアドレス3 */
            mailAddress3?: string;
            /** @description 会社名 */
            companyName?: string;
            /** @description 部署名 */
            departmentName?: string;
            /** @description 担当者フラグ */
            managerFlag?: boolean;
            /** @description スタッフフラグ */
            isStaff?: boolean;
            /** @description ポイント */
            points?: number;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 備考 */
            note?: string;
            /** @description 状態(1:利用, 2:停止) */
            statusId?: number;
            /**
             * Format: date
             * @description 入会日
             */
            enterDate?: string;
            /**
             * Format: date
             * @description 退会日
             */
            suspendDate?: string;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        CustomerCreate: {
            /** @description 会員コード */
            customerCode: string;
            /** @description 会員番号 */
            customerNo?: string;
            /** @description 会員ランク */
            rank?: string;
            /** @description スタッフランク */
            staffRank?: string;
            /** @description 名前 */
            firstName: string;
            /** @description 苗字 */
            lastName: string;
            /** @description 名前カナ */
            firstKana?: string;
            /** @description 苗字カナ */
            lastKana?: string;
            /** @description 郵便番号 */
            postCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description 携帯電話番号 */
            mobileNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description メールアドレス2 */
            mailAddress2?: string;
            /** @description メールアドレス3 */
            mailAddress3?: string;
            /** @description 会社名 */
            companyName?: string;
            /** @description 部署名 */
            departmentName?: string;
            /** @description 役職 */
            managerialPosition?: boolean;
            /**
             * @description 性別(0:不明, 1:男性, 2:女性)
             * @enum {string}
             */
            sex?: "0" | "1" | "2";
            /**
             * Format: date
             * @description 生年月日
             */
            birthDate?: string;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
            /**
             * Format: date
             * @description 入会日
             */
            entryDate?: string;
            /**
             * Format: date
             * @description 退会日
             */
            leaveDate?: string;
            /** @description ポイント付与単位(金額) */
            pointGivingUnitPrice?: number;
            /**
             * Format: float
             * @description 値を指定した場合、ポイント付与単位(金額)も必須
             */
            pointGivingUnit?: number;
            /** @description PINコード */
            pinCode?: string;
            /** @description 旅券番号 */
            passportNo?: string;
            /** @description 国籍 */
            nationality?: string;
            /** @description アルファベット氏名 */
            alphabetName?: string;
            /**
             * @description 案内メール受取許可フラグ
             *     (0:拒否、1:許可)
             *
             * @enum {string}
             */
            mailReceiveFlag?: "0" | "1";
            /** @description 備考 */
            note?: string;
            /** @description 備考2 */
            note2?: string;
            /** @description お気に入りリスト。商品コードをカンマ区切りで設定可能。 */
            favoriteList?: string;
            /** @description 閲覧履歴リスト。商品コードをカンマ区切りで設定可能。 */
            browsingList?: string;
            /**
             * @description 状態(0:利用可、1:利用停止、2:紛失、3:退会、4:名寄せ)
             * @enum {string}
             */
            status?: "0" | "1" | "2" | "3" | "4";
            /** @description 店舗ID */
            storeId?: string;
        };
        CustomerUpdate: {
            /** @description 会員コード */
            customerCode?: string;
            /** @description 会員番号 */
            customerNo?: string;
            /** @description 会員ランク */
            rank?: string;
            /** @description スタッフランク */
            staffRank?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstKana?: string;
            /** @description 苗字カナ */
            lastKana?: string;
            /** @description 郵便番号 */
            postCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description 携帯電話番号 */
            mobileNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description メールアドレス2 */
            mailAddress2?: string;
            /** @description メールアドレス3 */
            mailAddress3?: string;
            /** @description 会社名 */
            companyName?: string;
            /** @description 部署名 */
            departmentName?: string;
            /** @description 役職 */
            managerialPosition?: boolean;
            /**
             * @description 性別(0:不明, 1:男性, 2:女性)
             * @enum {string}
             */
            sex?: "0" | "1" | "2";
            /**
             * Format: date
             * @description 生年月日
             */
            birthDate?: string;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
            /**
             * Format: date
             * @description 入会日
             */
            entryDate?: string;
            /**
             * Format: date
             * @description 退会日
             */
            leaveDate?: string;
            /** @description ポイント付与単位(金額) */
            pointGivingUnitPrice?: number;
            /**
             * Format: float
             * @description 値を指定した場合、ポイント付与単位(金額)も必須
             */
            pointGivingUnit?: number;
            /** @description PINコード */
            pinCode?: string;
            /** @description 旅券番号 */
            passportNo?: string;
            /** @description 国籍 */
            nationality?: string;
            /** @description アルファベット氏名 */
            alphabetName?: string;
            /**
             * @description 案内メール受取許可フラグ
             *     (0:拒否、1:許可)
             *
             * @enum {string}
             */
            mailReceiveFlag?: "0" | "1";
            /** @description 備考 */
            note?: string;
            /** @description 備考2 */
            note2?: string;
            /** @description お気に入りリスト。商品コードをカンマ区切りで設定可能。 */
            favoriteList?: string;
            /** @description 閲覧履歴リスト。商品コードをカンマ区切りで設定可能。 */
            browsingList?: string;
            /**
             * @description 状態(0:利用可、1:利用停止、2:紛失、3:退会、4:名寄せ)
             * @enum {string}
             */
            status?: "0" | "1" | "2" | "3" | "4";
            /** @description 店舗ID */
            storeId?: string;
        };
        CustomerRequired: {
            /** @description 名前必須フラグ */
            firstName?: boolean;
            /** @description 苗字必須フラグ */
            lastName?: boolean;
            /** @description 名前カナ必須フラグ */
            firstNameKana?: boolean;
            /** @description 苗字カナ必須フラグ */
            lastNameKana?: boolean;
            /** @description 性別必須フラグ */
            sex?: boolean;
            /** @description 生年月日必須フラグ */
            birthDate?: boolean;
            /** @description 郵便番号必須フラグ */
            zipCode?: boolean;
            /** @description 住所必須フラグ */
            address?: boolean;
            /** @description 電話番号必須フラグ */
            phoneNumber?: boolean;
            /** @description 携帯電話番号必須フラグ */
            mobileNumber?: boolean;
            /** @description メールアドレス必須フラグ */
            mailAddress?: boolean;
            /** @description 会社名必須フラグ */
            companyName?: boolean;
            /** @description 部署名必須フラグ */
            departmentName?: boolean;
        };
        /** @description 在庫情報 */
        Stock: {
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /**
             * Format: float
             * @description 在庫数
             */
            stockAmount: number;
            /**
             * Format: float
             * @description 予約在庫数
             */
            layawayStockAmount?: number;
            /**
             * Format: float
             * @description 棚卸前在庫数
             */
            originalQuantity?: number;
            /**
             * Format: date-time
             * @description 最終更新日時
             */
            upDateTime?: string;
        };
        /** @description 在庫更新情報 */
        StockUpdate: {
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /**
             * Format: float
             * @description 在庫数
             */
            stockAmount: number;
            /** @description 在庫履歴情報 */
            stockHistory?: {
                /** @description 在庫変動履歴ID */
                id?: number;
                /** @description 在庫履歴メモ */
                memo?: string;
            };
        };
        /** @description 在庫相対更新情報（増減） */
        StockRelativeUpdate: {
            /** @description 店舗ID */
            storeId: number;
            /**
             * Format: float
             * @description 増減数量（正の値で増加、負の値で減少）
             */
            stockAmount: number;
            /** @description 在庫履歴情報 */
            stockHistory?: {
                /** @description 在庫履歴メモ */
                memo?: string;
            };
        };
        /** @description 在庫変動履歴情報 */
        StockChange: {
            /** @description 在庫変動ID */
            id?: number;
            /**
             * Format: date-time
             * @description 更新日時：データ更新時の日時。[YYYY-MM-DDThh:mm:ssTZD]
             */
            updDateTime?: string;
            /**
             * Format: date-time
             * @description 対象日時：在庫数を変更した時の日時。[YYYY-MM-DDThh:mm:ssTZD] 棚卸、ロス登録時に日時を指定する場合があります。 通常は更新日時と同じ日時が設定されます。
             */
            targetDateTime?: string;
            /** @description 商品ID */
            productId?: number;
            /** @description 店舗ID */
            storeId?: number;
            /** @description 数量：入出庫数（相対値で設定） */
            amount?: number;
            /** @description 在庫数：処理後の在庫数 */
            stockAmount?: number;
            /** @description 取置き在庫数：処理後の取置き在庫数。 */
            layawayStockAmount?: number;
            /**
             * @description 在庫区分：在庫を更新理由となる区分 (01:修正、02:売上、03:仕入、04:出庫、05:入庫、06:レンタル、07:取置き、08:棚卸、09:調整、10:出荷、12:返品、13:販促品、14:ロス、15:スマレジAPI連携、16:売上引当、17:入庫欠品、18:受注在庫引当)
             * @enum {string}
             */
            stockDivision?: "01" | "02" | "03" | "04" | "05" | "06" | "07" | "08" | "09" | "10" | "12" | "13" | "14" | "15" | "16" | "17" | "18";
            /** @description 配送元店舗ID */
            fromStoreId?: number;
            /** @description 配送先店舗ID */
            toStoreId?: number;
            /**
             * @description 税区分：商品単価の税区分 (0：税込、1：税抜、2：非課税)
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * Format: float
             * @description 価格
             */
            price?: number;
            /**
             * Format: float
             * @description 原価
             */
            cost?: number;
            /** @description メモ */
            memo?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
        };
        /** @description 商品一括登録情報 */
        ProductBulkCreate: {
            /** @description 登録する商品の配列 */
            items: components["schemas"]["ProductCreate"][];
        };
        /** @description 商品一括更新情報 */
        ProductBulkUpdate: {
            /** @description 更新する商品の配列 */
            items: components["schemas"]["ProductUpdate"][];
        };
        /** @description 預かり取引情報 */
        Layaway: {
            /**
             * Format: int64
             * @description 預かり取引ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description 預かり日時
             */
            layawayDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description ステータス
             *     * 1: 預かり
             *     * 2: 終了 */
            status: number;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId?: number | null;
            /** @description 預かり商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName?: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /** @description 部門名 */
                categoryName?: string | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price?: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity?: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount?: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate?: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType?: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount?: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount?: number;
            }[];
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description 取置作成リクエスト */
        LayawayCreate: {
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /**
             * Format: date-time
             * @description 預かり日時
             */
            layawayDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description メモ */
            memo?: string | null;
            /** @description 預かり商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount: number;
            }[];
        };
        /** @description 事前会計情報 */
        PreSale: {
            /**
             * Format: int64
             * @description 事前会計ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description 事前会計日時
             */
            preSaleDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description ステータス
             *     * 1: 未会計
             *     * 2: 会計済 */
            status: number;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId?: number | null;
            /** @description 事前会計商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName?: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /** @description 部門名 */
                categoryName?: string | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price?: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity?: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount?: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate?: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType?: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount?: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount?: number;
            }[];
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        /** @description 事前会計作成リクエスト */
        PreSaleCreate: {
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /**
             * Format: date-time
             * @description 事前会計日時
             */
            preSaleDateTime: string;
            /**
             * Format: double
             * @description 合計金額
             */
            totalAmount: number;
            /**
             * Format: double
             * @description 内税額
             */
            taxIncludedAmount: number;
            /**
             * Format: double
             * @description 外税額
             */
            taxExcludedAmount: number;
            /** @description メモ */
            memo?: string | null;
            /** @description 事前会計商品 */
            items: {
                /**
                 * Format: int64
                 * @description 商品ID
                 */
                productId?: number | null;
                /** @description 商品コード */
                productCode?: string | null;
                /** @description 商品名 */
                productName: string;
                /**
                 * Format: int64
                 * @description 部門ID
                 */
                categoryId?: number | null;
                /**
                 * Format: double
                 * @description 単価
                 */
                price: number;
                /**
                 * Format: double
                 * @description 数量
                 */
                quantity: number;
                /**
                 * Format: double
                 * @description 小計金額
                 */
                subtotalAmount: number;
                /**
                 * Format: double
                 * @description 税率
                 */
                taxRate: number;
                /** @description 税種別
                 *     * 1: 内税
                 *     * 2: 外税 */
                taxType: number;
                /**
                 * Format: double
                 * @description 内税額
                 */
                taxIncludedAmount: number;
                /**
                 * Format: double
                 * @description 外税額
                 */
                taxExcludedAmount: number;
            }[];
        };
        /** @description 事前会計更新リクエスト */
        PreSaleUpdate: {
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description ステータス
             *     * 1: 未会計
             *     * 2: 会計済 */
            status?: number;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 取引ID
             */
            transactionId?: number | null;
        };
        /** @description チケット取引情報 */
        TicketTransaction: {
            /**
             * Format: int64
             * @description チケット取引ID
             */
            id: number;
            /**
             * Format: int64
             * @description 店舗ID
             */
            storeId: number;
            /**
             * Format: int64
             * @description 端末ID
             */
            terminalId: number;
            /** @description チケットコード */
            ticketCode: string;
            /**
             * Format: int64
             * @description 会員ID
             */
            customerId?: number | null;
            /** @description 会員コード */
            customerCode?: string | null;
            /** @description 会員名 */
            customerName?: string | null;
            /**
             * Format: int64
             * @description スタッフID
             */
            staffId?: number | null;
            /** @description スタッフコード */
            staffCode?: string | null;
            /** @description スタッフ名 */
            staffName?: string | null;
            /**
             * Format: date-time
             * @description チケット発行日時
             */
            ticketDateTime: string;
            /**
             * Format: date
             * @description 有効期限
             */
            expirationDate?: string | null;
            /**
             * Format: date-time
             * @description 使用日時
             */
            usedDateTime?: string | null;
            /** @description ステータスタイプ
             *     * 1: 未使用
             *     * 2: 使用済
             *     * 3: 期限切れ
             *     * 4: 取消 */
            statusType: number;
            /**
             * Format: int64
             * @description 発行時取引ID
             */
            transactionId: number;
            /**
             * Format: int64
             * @description 使用時取引ID
             */
            usedTransactionId?: number | null;
            /** @description メモ */
            memo?: string | null;
            /**
             * Format: int64
             * @description 商品ID
             */
            productId?: number | null;
            /** @description 商品コード */
            productCode?: string | null;
            /** @description 商品名 */
            productName: string;
            /**
             * Format: double
             * @description 価格
             */
            price: number;
            /** @description 数量 */
            quantity: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createdDateTime: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updatedDateTime: string;
        };
        CustomerBulkCreate: {
            /** @description 会員情報リスト */
            customers: components["schemas"]["CustomerCreate"][];
        };
        CustomerBulkUpdate: {
            /** @description 会員情報リスト */
            customers: ({
                /** @description 会員ID */
                customerId: string;
            } & components["schemas"]["CustomerUpdate"])[];
        };
        CustomerPoint: {
            /** @description 会員ID */
            customerId?: string;
            /** @description ポイント */
            points?: number;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerPointUpdate: {
            /** @description ポイント */
            points: number;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerPointRelativeUpdate: {
            /** @description 加減算ポイント（マイナスの場合は減算） */
            points: number;
            /**
             * Format: date
             * @description ポイント有効期限
             */
            pointExpireDate?: string;
        };
        CustomerRank: {
            /** @description 会員ランクID */
            rankId?: string;
            /** @description 会員ランク名 */
            rankName?: string;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /**
             * @description ポイント有効期限タイプ（0:なし, 1:年月設定, 2:付与から一定期間）
             * @enum {string}
             */
            pointExpirationType?: "0" | "1" | "2";
            /** @description ポイント有効期限月 */
            pointExpirationMonth?: number;
            /** @description ポイント有効期限日 */
            pointExpirationDay?: number;
            /** @description ポイント有効期間（日） */
            pointExpirationPeriod?: number;
            /** @description 備考 */
            note?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        CustomerRankCreate: {
            /** @description 会員ランク名 */
            rankName: string;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /**
             * @description ポイント有効期限タイプ（0:なし, 1:年月設定, 2:付与から一定期間）
             * @enum {string}
             */
            pointExpirationType?: "0" | "1" | "2";
            /** @description ポイント有効期限月 */
            pointExpirationMonth?: number;
            /** @description ポイント有効期限日 */
            pointExpirationDay?: number;
            /** @description ポイント有効期間（日） */
            pointExpirationPeriod?: number;
            /** @description 備考 */
            note?: string;
        };
        CustomerRankUpdate: {
            /** @description 会員ランク名 */
            rankName?: string;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /**
             * @description ポイント有効期限タイプ（0:なし, 1:年月設定, 2:付与から一定期間）
             * @enum {string}
             */
            pointExpirationType?: "0" | "1" | "2";
            /** @description ポイント有効期限月 */
            pointExpirationMonth?: number;
            /** @description ポイント有効期限日 */
            pointExpirationDay?: number;
            /** @description ポイント有効期間（日） */
            pointExpirationPeriod?: number;
            /** @description 備考 */
            note?: string;
        };
        StaffRank: {
            /** @description スタッフランクID */
            staffRankId?: string;
            /** @description スタッフランク名 */
            staffRankName?: string;
            /**
             * Format: float
             * @description 社員割引率
             */
            discountRate?: number;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /** @description 備考 */
            note?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        StaffRankCreate: {
            /** @description スタッフランク名 */
            staffRankName: string;
            /**
             * Format: float
             * @description 社員割引率
             */
            discountRate?: number;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /** @description 備考 */
            note?: string;
        };
        StaffRankUpdate: {
            /** @description スタッフランク名 */
            staffRankName?: string;
            /**
             * Format: float
             * @description 社員割引率
             */
            discountRate?: number;
            /**
             * Format: float
             * @description ポイント付与率
             */
            pointRate?: number;
            /** @description 備考 */
            note?: string;
        };
        /** @description 在庫一括更新情報 */
        StockBulkUpdate: {
            /** @description 在庫更新情報の配列 */
            stocks: components["schemas"]["StockUpdate"][];
            /** @description コールバックURL */
            callbackUrl?: string;
        };
        /** @description 在庫相対一括更新情報（増減） */
        StockBulkRelativeUpdate: {
            /** @description 在庫相対更新情報の配列 */
            stocks: components["schemas"]["StockRelativeUpdate"][];
            /** @description コールバックURL */
            callbackUrl: string;
        };
        /** @description セール情報 */
        Bargain: {
            /**
             * @description セールID
             * @example 1
             */
            bargainId: string;
            /**
             * @description セール名
             * @example 夏物商品セール
             */
            bargainName: string;
            /**
             * Format: date
             * @description セール開始日 [YYYY-MM-DD]
             * @example 2025-07-01
             */
            termStart: string;
            /**
             * Format: date
             * @description セール終了日 [YYYY-MM-DD]
             * @example 2025-07-31
             */
            termEnd: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description セール登録情報 */
        BargainCreate: {
            /**
             * @description セール名
             * @example 夏物商品セール
             */
            bargainName: string;
            /**
             * Format: date
             * @description セール開始日 [YYYY-MM-DD]
             * @example 2025-07-01
             */
            termStart: string;
            /**
             * Format: date
             * @description セール終了日 [YYYY-MM-DD]
             * @example 2025-07-31
             */
            termEnd: string;
        };
        /** @description セール更新情報 */
        BargainUpdate: {
            /**
             * @description セール名
             * @example 夏物商品セール
             */
            bargainName?: string;
            /**
             * Format: date
             * @description セール開始日 [YYYY-MM-DD]
             * @example 2025-07-01
             */
            termStart?: string;
            /**
             * Format: date
             * @description セール終了日 [YYYY-MM-DD]
             * @example 2025-07-31
             */
            termEnd?: string;
        };
        /** @description セール店舗情報 */
        BargainStore: {
            /**
             * @description セール店舗ID
             * @example 1
             */
            bargainStoreId: string;
            /**
             * @description セールID
             * @example 1
             */
            bargainId: string;
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description セール店舗登録情報 */
        BargainStoreCreate: {
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
        };
        /** @description セール店舗更新情報 */
        BargainStoreUpdate: {
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId?: string;
        };
        /** @description セール商品情報 */
        BargainProduct: {
            /**
             * @description セール商品ID
             * @example 1
             */
            bargainProductId: string;
            /**
             * @description セールID
             * @example 1
             */
            bargainId: string;
            /**
             * @description 対象区分 (1:部門、2:商品、3:グループコード)
             * @example 2
             * @enum {string}
             */
            targetDivision: "1" | "2" | "3";
            /**
             * @description 対象ID (部門ID、商品ID、グループコードのいずれか)
             * @example 10001
             */
            targetId: string;
            /**
             * @description 割引区分 (1:割引、2:値引、3:価格指定)
             * @example 1
             * @enum {string}
             */
            division: "1" | "2" | "3";
            /**
             * @description 値 (割引率、値引額、または価格)
             * @example 20
             */
            value: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description セール商品登録情報 */
        BargainProductCreate: {
            /**
             * @description 対象区分 (1:部門、2:商品、3:グループコード)
             * @example 2
             * @enum {string}
             */
            targetDivision: "1" | "2" | "3";
            /**
             * @description 対象ID (部門ID、商品ID、グループコードのいずれか)
             * @example 10001
             */
            targetId: string;
            /**
             * @description 割引区分 (1:割引、2:値引、3:価格指定)
             * @example 1
             * @enum {string}
             */
            division: "1" | "2" | "3";
            /**
             * @description 値 (割引率、値引額、または価格)
             * @example 20
             */
            value: string;
        };
        /** @description セール商品更新情報 */
        BargainProductUpdate: {
            /**
             * @description 対象区分 (1:部門、2:商品、3:グループコード)
             * @example 2
             * @enum {string}
             */
            targetDivision?: "1" | "2" | "3";
            /**
             * @description 対象ID (部門ID、商品ID、グループコードのいずれか)
             * @example 10001
             */
            targetId?: string;
            /**
             * @description 割引区分 (1:割引、2:値引、3:価格指定)
             * @example 1
             * @enum {string}
             */
            division?: "1" | "2" | "3";
            /**
             * @description 値 (割引率、値引額、または価格)
             * @example 20
             */
            value?: string;
        };
        /** @description オプショングループ情報 */
        ProductOptionGroup: {
            /**
             * @description オプショングループID
             * @example 1
             */
            productOptionGroupId: string;
            /**
             * @description オプショングループ名
             * @example トッピング
             */
            productOptionGroupName: string;
            /**
             * @description 条件ID (0:条件なし、1:全体、2:部門毎)
             * @example 1
             * @enum {string}
             */
            conditionId: "0" | "1" | "2";
            /**
             * @description 適用条件の上限
             * @example 3
             */
            max?: string;
            /**
             * @description 適用条件の下限
             * @example 1
             */
            min?: string;
            /**
             * @description 同期区分
             * @example 0
             */
            syncDivision?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-06-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-06-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description オプショングループ登録情報 */
        ProductOptionGroupCreate: {
            /**
             * @description オプショングループ名
             * @example トッピング
             */
            productOptionGroupName: string;
            /**
             * @description 条件ID (0:条件なし、1:全体、2:部門毎)
             * @example 1
             * @enum {string}
             */
            conditionId: "0" | "1" | "2";
            /**
             * @description 適用条件の上限
             * @example 3
             */
            max?: string;
            /**
             * @description 適用条件の下限
             * @example 1
             */
            min?: string;
            /** @description オプショングループ商品 */
            products: {
                /**
                 * @description 商品ID
                 * @example 12345
                 */
                productId: string;
            }[];
        };
        /** @description オプショングループ更新情報 */
        ProductOptionGroupUpdate: {
            /**
             * @description オプショングループ名
             * @example トッピング
             */
            productOptionGroupName?: string;
            /**
             * @description 条件ID (0:条件なし、1:全体、2:部門毎)
             * @example 1
             * @enum {string}
             */
            conditionId?: "0" | "1" | "2";
            /**
             * @description 適用条件の上限
             * @example 3
             */
            max?: string;
            /**
             * @description 適用条件の下限
             * @example 1
             */
            min?: string;
            /** @description オプショングループ商品 */
            products?: {
                /**
                 * @description 商品ID
                 * @example 12345
                 */
                productId: string;
            }[];
        };
        /** @description バンドル販売情報 */
        Bundle: {
            /**
             * @description 商品バンドルグループID
             * @example 1
             */
            productBundleGroupId: string;
            /**
             * @description 商品バンドルグループ名
             * @example 春の特別セット
             */
            productBundleGroupName: string;
            /**
             * @description 種類 (1:バンドル売り+販売金額指定、2:バンドル売り+値引金額指定、3:バンドル売り+割引率指定、4:セット売り+販売金額指定)
             * @example 1
             * @enum {string}
             */
            type: "1" | "2" | "3" | "4";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 数量
             * @example 2
             */
            quantity?: string;
            /**
             * @description 種類=1,4の時は販売金額、種類=2の時は値引金額、種類=3の時は割引率
             * @example 1000
             */
            value: string;
            /**
             * @description 軽減税率適用時の値
             * @example 900
             */
            reduceTaxValue?: string;
            /**
             * @description 優先順位
             * @example 1
             */
            priority?: string;
            /**
             * Format: date
             * @description 適用開始日 [YYYY-MM-DD]
             * @example 2025-04-01
             */
            termFrom: string;
            /**
             * Format: date
             * @description 適用終了日 [YYYY-MM-DD]
             * @example 2025-04-30
             */
            termTo: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象区分 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-03-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-03-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description バンドル販売登録情報 */
        BundleCreate: {
            /**
             * @description 商品バンドルグループ名
             * @example 春の特別セット
             */
            productBundleGroupName: string;
            /**
             * @description 種類 (1:バンドル売り+販売金額指定、2:バンドル売り+値引金額指定、3:バンドル売り+割引率指定、4:セット売り+販売金額指定)
             * @example 1
             * @enum {string}
             */
            type: "1" | "2" | "3" | "4";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 数量
             * @example 2
             */
            quantity?: string;
            /**
             * @description 種類=1,4の時は販売金額、種類=2の時は値引金額、種類=3の時は割引率
             * @example 1000
             */
            value: string;
            /**
             * @description 軽減税率適用時の値
             * @example 900
             */
            reduceTaxValue?: string;
            /**
             * @description 優先順位
             * @example 1
             */
            priority?: string;
            /**
             * Format: date
             * @description 適用開始日 [YYYY-MM-DD]
             * @example 2025-04-01
             */
            termFrom: string;
            /**
             * Format: date
             * @description 適用終了日 [YYYY-MM-DD]
             * @example 2025-04-30
             */
            termTo: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象区分 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /** @description 対象商品 */
            products: {
                /**
                 * @description 部門ID
                 * @example 101
                 */
                categoryId: string;
                /**
                 * @description 商品ID
                 * @example 10001
                 */
                productId: string;
                /**
                 * @description 商品グループコード
                 * @example SPR2024
                 */
                productGroupCode: string;
            }[];
        };
        /** @description バンドル販売更新情報 */
        BundleUpdate: {
            /**
             * @description 商品バンドルグループ名
             * @example 春の特別セット
             */
            productBundleGroupName?: string;
            /**
             * @description 種類 (1:バンドル売り+販売金額指定、2:バンドル売り+値引金額指定、3:バンドル売り+割引率指定、4:セット売り+販売金額指定)
             * @example 1
             * @enum {string}
             */
            type?: "1" | "2" | "3" | "4";
            /**
             * @description 税区分 (0:税込、1:税抜、2:非課税)
             * @example 1
             * @enum {string}
             */
            taxDivision?: "0" | "1" | "2";
            /**
             * @description 軽減税率ID
             *     標準:null（または未設定）
             *     軽減:10000001（特定商品の軽減税率適用）
             *     選択[標準]:10000002（状態による適用[適用しない]）
             *     選択[軽減]:10000003（状態による適用[適用する]）
             *     選択[選択]:10000004（状態による適用[都度選択する]）
             *
             * @example 10000001
             */
            reduceTaxId?: string;
            /**
             * @description 数量
             * @example 2
             */
            quantity?: string;
            /**
             * @description 種類=1,4の時は販売金額、種類=2の時は値引金額、種類=3の時は割引率
             * @example 1000
             */
            value?: string;
            /**
             * @description 軽減税率適用時の値
             * @example 900
             */
            reduceTaxValue?: string;
            /**
             * @description 優先順位
             * @example 1
             */
            priority?: string;
            /**
             * Format: date
             * @description 適用開始日 [YYYY-MM-DD]
             * @example 2025-04-01
             */
            termFrom?: string;
            /**
             * Format: date
             * @description 適用終了日 [YYYY-MM-DD]
             * @example 2025-04-30
             */
            termTo?: string;
            /**
             * @description ポイント対象区分 (0:ポイント対象、1:ポイント対象外)
             * @example 0
             * @enum {string}
             */
            pointNotApplicable?: "0" | "1";
            /**
             * @description 免税区分 (0:対象外、1:一般品、2:消耗品)
             * @example 0
             * @enum {string}
             */
            taxFreeDivision?: "0" | "1" | "2";
            /**
             * @description 値引割引計算対象区分 (0:対象外、1:対象)
             * @example 1
             * @enum {string}
             */
            calcDiscount?: "0" | "1";
            /** @description 対象商品 */
            products?: {
                /**
                 * @description 部門ID
                 * @example 101
                 */
                categoryId?: string;
                /**
                 * @description 商品ID
                 * @example 10001
                 */
                productId?: string;
                /**
                 * @description 商品グループコード
                 * @example SPR2024
                 */
                productGroupCode?: string;
            }[];
        };
        /** @description バンドル販売商品情報 */
        BundleProduct: {
            /**
             * @description バンドル販売商品ID
             * @example 12345
             */
            bundleProductId: string;
            /**
             * @description 商品バンドルグループID
             * @example 1
             */
            productBundleGroupId: string;
            /**
             * @description 部門ID
             * @example 101
             */
            categoryId?: string;
            /**
             * @description 商品ID
             * @example 10001
             */
            productId?: string;
            /**
             * @description 商品グループコード
             * @example SPR2024
             */
            productGroupCode?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-03-15T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-03-15T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 店舗情報 */
        Store: {
            /**
             * @description 店舗ID
             * @example 1
             */
            storeId: string;
            /**
             * @description 店舗名
             * @example 東京本店
             */
            storeName: string;
            /**
             * @description 店舗名略称
             * @example 東京
             */
            storeAbbr?: string;
            /**
             * @description 店舗コード
             * @example TOKYO01
             */
            storeCode?: string;
            /**
             * @description 店舗区分 (0:通常店舗、1:倉庫)
             * @example 0
             * @enum {string}
             */
            storeDivision?: "0" | "1";
            /**
             * @description 郵便番号
             * @example 100-0001
             */
            postalCode?: string;
            /**
             * @description 住所
             * @example 東京都千代田区丸の内1-1-1
             */
            address?: string;
            /**
             * @description 電話番号
             * @example 03-1234-5678
             */
            phoneNumber?: string;
            /**
             * @description FAX番号
             * @example 03-1234-5679
             */
            faxNumber?: string;
            /**
             * @description メールアドレス
             * @example tokyo@example.com
             */
            mailAddress?: string;
            /**
             * @description 営業開始時間
             * @example 10:00
             */
            openingTime?: string;
            /**
             * @description 営業終了時間
             * @example 20:00
             */
            closingTime?: string;
            /**
             * @description 定休日
             * @example 日曜日
             */
            regularHoliday?: string;
            /**
             * @description URL
             * @example https://example.com/store/tokyo
             */
            url?: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 店舗登録情報 */
        StoreCreate: {
            /**
             * @description 店舗名
             * @example 東京本店
             */
            storeName: string;
            /**
             * @description 店舗名略称
             * @example 東京
             */
            storeAbbr?: string;
            /**
             * @description 店舗コード
             * @example TOKYO01
             */
            storeCode?: string;
            /**
             * @description 店舗区分 (0:通常店舗、1:倉庫)
             * @default 0
             * @example 0
             * @enum {string}
             */
            storeDivision: "0" | "1";
            /**
             * @description 郵便番号
             * @example 100-0001
             */
            postalCode?: string;
            /**
             * @description 住所
             * @example 東京都千代田区丸の内1-1-1
             */
            address?: string;
            /**
             * @description 電話番号
             * @example 03-1234-5678
             */
            phoneNumber?: string;
            /**
             * @description FAX番号
             * @example 03-1234-5679
             */
            faxNumber?: string;
            /**
             * @description メールアドレス
             * @example tokyo@example.com
             */
            mailAddress?: string;
            /**
             * @description 営業開始時間
             * @example 10:00
             */
            openingTime?: string;
            /**
             * @description 営業終了時間
             * @example 20:00
             */
            closingTime?: string;
            /**
             * @description 定休日
             * @example 日曜日
             */
            regularHoliday?: string;
            /**
             * @description URL
             * @example https://example.com/store/tokyo
             */
            url?: string;
        };
        /** @description 店舗更新情報 */
        StoreUpdate: {
            /**
             * @description 店舗名
             * @example 東京本店
             */
            storeName?: string;
            /**
             * @description 店舗名略称
             * @example 東京
             */
            storeAbbr?: string;
            /**
             * @description 店舗コード
             * @example TOKYO01
             */
            storeCode?: string;
            /**
             * @description 店舗区分 (0:通常店舗、1:倉庫)
             * @example 0
             * @enum {string}
             */
            storeDivision?: "0" | "1";
            /**
             * @description 郵便番号
             * @example 100-0001
             */
            postalCode?: string;
            /**
             * @description 住所
             * @example 東京都千代田区丸の内1-1-1
             */
            address?: string;
            /**
             * @description 電話番号
             * @example 03-1234-5678
             */
            phoneNumber?: string;
            /**
             * @description FAX番号
             * @example 03-1234-5679
             */
            faxNumber?: string;
            /**
             * @description メールアドレス
             * @example tokyo@example.com
             */
            mailAddress?: string;
            /**
             * @description 営業開始時間
             * @example 10:00
             */
            openingTime?: string;
            /**
             * @description 営業終了時間
             * @example 20:00
             */
            closingTime?: string;
            /**
             * @description 定休日
             * @example 日曜日
             */
            regularHoliday?: string;
            /**
             * @description URL
             * @example https://example.com/store/tokyo
             */
            url?: string;
        };
        /** @description 店舗分類情報 */
        StoreGroup: {
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId: string;
            /**
             * @description 店舗分類名
             * @example 首都圏エリア
             */
            storeGroupName: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 店舗分類登録情報 */
        StoreGroupCreate: {
            /**
             * @description 店舗分類名
             * @example 首都圏エリア
             */
            storeGroupName: string;
        };
        /** @description 店舗分類更新情報 */
        StoreGroupUpdate: {
            /**
             * @description 店舗分類名
             * @example 首都圏エリア
             */
            storeGroupName?: string;
        };
        /** @description 店舗分類項目情報 */
        StoreGroupItem: {
            /**
             * @description 店舗分類項目ID
             * @example 1
             */
            storeGroupItemId: string;
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId: string;
            /**
             * @description 店舗ID
             * @example 101
             */
            storeId: string;
            /**
             * Format: date-time
             * @description 登録日時
             * @example 2025-01-01T10:00:00+09:00
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             * @example 2025-01-01T10:00:00+09:00
             */
            updDateTime?: string;
        };
        /** @description 店舗分類項目登録情報 */
        StoreGroupItemCreate: {
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId: string;
            /**
             * @description 店舗ID
             * @example 101
             */
            storeId: string;
        };
        /** @description 店舗分類項目更新情報 */
        StoreGroupItemUpdate: {
            /**
             * @description 店舗分類ID
             * @example 1
             */
            storeGroupId?: string;
            /**
             * @description 店舗ID
             * @example 101
             */
            storeId?: string;
        };
        Staff: {
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフコード */
            staffCode?: string;
            /** @description 名前 */
            firstName?: string;
            /** @description 苗字 */
            lastName?: string;
            /** @description 名前カナ */
            firstNameKana?: string;
            /** @description 苗字カナ */
            lastNameKana?: string;
            /** @description 電話番号 */
            tel?: string;
            /** @description 携帯電話番号 */
            mobilePhone?: string;
            /** @description メールアドレス */
            mail?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description パスワード（取得時は返却されません） */
            password?: string;
            /**
             * @description 権限(0:なし, 1:店舗管理者, 2:店舗スタッフ, 3:システム管理者)
             * @enum {string}
             */
            staffAuthorization?: "0" | "1" | "2" | "3";
            /** @description 販売パスワード（取得時は返却されません） */
            salePassword?: string;
            /** @description 稼働開始時間（HH:mm） */
            startAtHourOfDay?: string;
            /** @description 稼働終了時間（HH:mm） */
            endAtHourOfDay?: string;
            /** @description 所属店舗IDリスト */
            storeIds?: string[];
            /** @description 役割IDリスト */
            roleIds?: string[];
            /**
             * @description ステータス(1:有効, 2:無効)
             * @enum {string}
             */
            status?: "1" | "2";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        Role: {
            /** @description 役割ID */
            roleId?: string;
            /** @description 役割名 */
            roleName?: string;
            /** @description 権限リスト */
            permissions?: {
                /** @description 権限ID */
                permissionId?: string;
                /** @description 権限名 */
                permissionName?: string;
                /**
                 * @description 権限値(0:無効, 1:有効)
                 * @enum {integer}
                 */
                value?: 0 | 1;
            }[];
            /** @description 備考 */
            note?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        RoleCreate: {
            /** @description 役割名 */
            roleName: string;
            /** @description 権限リスト */
            permissions: {
                /** @description 権限ID */
                permissionId: string;
                /**
                 * @description 権限値(0:無効, 1:有効)
                 * @enum {integer}
                 */
                value: 0 | 1;
            }[];
            /** @description 備考 */
            note?: string;
        };
        RoleUpdate: {
            /** @description 役割名 */
            roleName?: string;
            /** @description 権限リスト */
            permissions?: {
                /** @description 権限ID */
                permissionId: string;
                /**
                 * @description 権限値(0:無効, 1:有効)
                 * @enum {integer}
                 */
                value: 0 | 1;
            }[];
            /** @description 備考 */
            note?: string;
        };
        MonthlyBudget: {
            /** @description 予算ID */
            budgetId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * Format: date
             * @description 年月（YYYY-MM形式）
             */
            yearMonth?: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        DailyBudget: {
            /** @description 予算ID */
            budgetId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * Format: date
             * @description 日付
             */
            date?: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        DailyBudgetCreate: {
            /** @description 店舗ID */
            storeId: string;
            /**
             * Format: date
             * @description 日付
             */
            date: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
        };
        DailyBudgetUpdate: {
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 売上税予算
             */
            salesTaxBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: float
             * @description 粗利益予算
             */
            grossProfitBudget?: number;
            /**
             * Format: float
             * @description 粗利益率予算
             */
            grossProfitRatioBudget?: number;
            /**
             * Format: float
             * @description ポイント付与予算
             */
            creditPointBudget?: number;
            /**
             * Format: float
             * @description 値引予算
             */
            discountBudget?: number;
            salesBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上予算
                 */
                other?: number;
            };
            salesTaxBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販売上税予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食売上税予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス売上税予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他売上税予算
                 */
                other?: number;
            };
            customerCountBudgetDetail?: {
                /**
                 * Format: float
                 * @description 物販客数予算
                 */
                goods?: number;
                /**
                 * Format: float
                 * @description 飲食客数予算
                 */
                food?: number;
                /**
                 * Format: float
                 * @description サービス客数予算
                 */
                service?: number;
                /**
                 * Format: float
                 * @description その他客数予算
                 */
                other?: number;
            };
        };
        StaffBudget: {
            /** @description 予算ID */
            budgetId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフ名 */
            staffName?: string;
            /**
             * Format: date
             * @description 年月（YYYY-MM形式）
             */
            yearMonth?: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        StaffBudgetCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description スタッフID */
            staffId: string;
            /**
             * Format: date
             * @description 年月（YYYY-MM形式）
             */
            yearMonth: string;
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
        };
        StaffBudgetUpdate: {
            /**
             * Format: float
             * @description 売上予算
             */
            salesBudget?: number;
            /**
             * Format: float
             * @description 客数予算
             */
            customerCountBudget?: number;
            /**
             * Format: float
             * @description 客単価予算
             */
            averageCustomerPriceBudget?: number;
        };
        Supplier: {
            /** @description 仕入先ID */
            supplierId?: string;
            /** @description 仕入先コード */
            supplierCode?: string;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 仕入先略称 */
            supplierAbbr?: string;
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 仕入先区分名 */
            supplierDivisionName?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description 担当者名 */
            contactPersonName?: string;
            /** @description 備考 */
            note?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SupplierCreate: {
            /** @description 仕入先コード */
            supplierCode: string;
            /** @description 仕入先名 */
            supplierName: string;
            /** @description 仕入先略称 */
            supplierAbbr?: string;
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description 担当者名 */
            contactPersonName?: string;
            /** @description 備考 */
            note?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        SupplierUpdate: {
            /** @description 仕入先コード */
            supplierCode?: string;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 仕入先略称 */
            supplierAbbr?: string;
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 郵便番号 */
            zipCode?: string;
            /** @description 住所 */
            address?: string;
            /** @description 電話番号 */
            phoneNumber?: string;
            /** @description FAX番号 */
            faxNumber?: string;
            /** @description メールアドレス */
            mailAddress?: string;
            /** @description 担当者名 */
            contactPersonName?: string;
            /** @description 備考 */
            note?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        SupplierProduct: {
            /** @description 仕入先商品ID */
            supplierProductId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 仕入先商品コード */
            supplierProductCode?: string;
            /** @description 仕入先商品名 */
            supplierProductName?: string;
            /**
             * Format: float
             * @description 原価
             */
            costPrice?: number;
            /**
             * Format: float
             * @description 発注点
             */
            orderPoint?: number;
            /**
             * Format: float
             * @description 発注ロット
             */
            orderLot?: number;
            /** @description リードタイム（日数） */
            leadTime?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SupplierProductCreate: {
            /** @description 商品ID */
            productId: string;
            /** @description 仕入先商品コード */
            supplierProductCode?: string;
            /** @description 仕入先商品名 */
            supplierProductName?: string;
            /**
             * Format: float
             * @description 原価
             */
            costPrice?: number;
            /**
             * Format: float
             * @description 発注点
             */
            orderPoint?: number;
            /**
             * Format: float
             * @description 発注ロット
             */
            orderLot?: number;
            /** @description リードタイム（日数） */
            leadTime?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        SupplierDivision: {
            /** @description 仕入先区分ID */
            supplierDivisionId?: string;
            /** @description 仕入先区分名 */
            supplierDivisionName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SupplierDivisionCreate: {
            /** @description 仕入先区分名 */
            supplierDivisionName: string;
        };
        SupplierDivisionUpdate: {
            /** @description 仕入先区分名 */
            supplierDivisionName?: string;
        };
        Terminal: {
            /** @description レジ端末ID */
            terminalId?: string;
            /** @description レジ端末コード */
            terminalCode?: string;
            /** @description レジ端末名 */
            terminalName?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * @description レジ端末種別(1:PC, 2:iPad, 3:ハンディ)
             * @enum {string}
             */
            terminalType?: "1" | "2" | "3";
            /**
             * @description プリンタ種別(0:なし, 1:ロール紙, 2:A4, 3:サーマル)
             * @enum {string}
             */
            printerType?: "0" | "1" | "2" | "3";
            /** @description プリンタ名 */
            printerName?: string;
            /** @description プリンタIPアドレス */
            printerIPAddress?: string;
            /** @description プリンタポート */
            printerPort?: string;
            /**
             * @description ドロア種別(0:なし, 1:あり)
             * @enum {string}
             */
            drawerType?: "0" | "1";
            /** @description ドロア名 */
            drawerName?: string;
            /** @description ドロアIPアドレス */
            drawerIPAddress?: string;
            /** @description ドロアポート */
            drawerPort?: string;
            /**
             * @description カードリーダー種別(0:なし, 1:磁気, 2:IC)
             * @enum {string}
             */
            cardReaderType?: "0" | "1" | "2";
            /** @description カードリーダー名 */
            cardReaderName?: string;
            /** @description カードリーダーIPアドレス */
            cardReaderIPAddress?: string;
            /** @description カードリーダーポート */
            cardReaderPort?: string;
            /**
             * @description スキャナー種別(0:なし, 1:あり)
             * @enum {string}
             */
            scannerType?: "0" | "1";
            /** @description スキャナー名 */
            scannerName?: string;
            /** @description スキャナーIPアドレス */
            scannerIPAddress?: string;
            /** @description スキャナーポート */
            scannerPort?: string;
            /**
             * @description 客面ディスプレイ種別(0:なし, 1:あり)
             * @enum {string}
             */
            displayType?: "0" | "1";
            /** @description 客面ディスプレイ名 */
            displayName?: string;
            /** @description 客面ディスプレイIPアドレス */
            displayIPAddress?: string;
            /** @description 客面ディスプレイポート */
            displayPort?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        TerminalCreate: {
            /** @description レジ端末コード */
            terminalCode: string;
            /** @description レジ端末名 */
            terminalName: string;
            /** @description 店舗ID */
            storeId: string;
            /**
             * @description レジ端末種別(1:PC, 2:iPad, 3:ハンディ)
             * @enum {string}
             */
            terminalType?: "1" | "2" | "3";
            /**
             * @description プリンタ種別(0:なし, 1:ロール紙, 2:A4, 3:サーマル)
             * @enum {string}
             */
            printerType?: "0" | "1" | "2" | "3";
            /** @description プリンタ名 */
            printerName?: string;
            /** @description プリンタIPアドレス */
            printerIPAddress?: string;
            /** @description プリンタポート */
            printerPort?: string;
            /**
             * @description ドロア種別(0:なし, 1:あり)
             * @enum {string}
             */
            drawerType?: "0" | "1";
            /** @description ドロア名 */
            drawerName?: string;
            /** @description ドロアIPアドレス */
            drawerIPAddress?: string;
            /** @description ドロアポート */
            drawerPort?: string;
            /**
             * @description カードリーダー種別(0:なし, 1:磁気, 2:IC)
             * @enum {string}
             */
            cardReaderType?: "0" | "1" | "2";
            /** @description カードリーダー名 */
            cardReaderName?: string;
            /** @description カードリーダーIPアドレス */
            cardReaderIPAddress?: string;
            /** @description カードリーダーポート */
            cardReaderPort?: string;
            /**
             * @description スキャナー種別(0:なし, 1:あり)
             * @enum {string}
             */
            scannerType?: "0" | "1";
            /** @description スキャナー名 */
            scannerName?: string;
            /** @description スキャナーIPアドレス */
            scannerIPAddress?: string;
            /** @description スキャナーポート */
            scannerPort?: string;
            /**
             * @description 客面ディスプレイ種別(0:なし, 1:あり)
             * @enum {string}
             */
            displayType?: "0" | "1";
            /** @description 客面ディスプレイ名 */
            displayName?: string;
            /** @description 客面ディスプレイIPアドレス */
            displayIPAddress?: string;
            /** @description 客面ディスプレイポート */
            displayPort?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        TerminalUpdate: {
            /** @description レジ端末コード */
            terminalCode?: string;
            /** @description レジ端末名 */
            terminalName?: string;
            /** @description 店舗ID */
            storeId?: string;
            /**
             * @description レジ端末種別(1:PC, 2:iPad, 3:ハンディ)
             * @enum {string}
             */
            terminalType?: "1" | "2" | "3";
            /**
             * @description プリンタ種別(0:なし, 1:ロール紙, 2:A4, 3:サーマル)
             * @enum {string}
             */
            printerType?: "0" | "1" | "2" | "3";
            /** @description プリンタ名 */
            printerName?: string;
            /** @description プリンタIPアドレス */
            printerIPAddress?: string;
            /** @description プリンタポート */
            printerPort?: string;
            /**
             * @description ドロア種別(0:なし, 1:あり)
             * @enum {string}
             */
            drawerType?: "0" | "1";
            /** @description ドロア名 */
            drawerName?: string;
            /** @description ドロアIPアドレス */
            drawerIPAddress?: string;
            /** @description ドロアポート */
            drawerPort?: string;
            /**
             * @description カードリーダー種別(0:なし, 1:磁気, 2:IC)
             * @enum {string}
             */
            cardReaderType?: "0" | "1" | "2";
            /** @description カードリーダー名 */
            cardReaderName?: string;
            /** @description カードリーダーIPアドレス */
            cardReaderIPAddress?: string;
            /** @description カードリーダーポート */
            cardReaderPort?: string;
            /**
             * @description スキャナー種別(0:なし, 1:あり)
             * @enum {string}
             */
            scannerType?: "0" | "1";
            /** @description スキャナー名 */
            scannerName?: string;
            /** @description スキャナーIPアドレス */
            scannerIPAddress?: string;
            /** @description スキャナーポート */
            scannerPort?: string;
            /**
             * @description 客面ディスプレイ種別(0:なし, 1:あり)
             * @enum {string}
             */
            displayType?: "0" | "1";
            /** @description 客面ディスプレイ名 */
            displayName?: string;
            /** @description 客面ディスプレイIPアドレス */
            displayIPAddress?: string;
            /** @description 客面ディスプレイポート */
            displayPort?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        Settlement: {
            /** @description 精算ID */
            settlementId?: string;
            /** @description 精算番号 */
            settlementNo?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 端末ID */
            terminalId?: string;
            /** @description 端末名 */
            terminalName?: string;
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフ名 */
            staffName?: string;
            /**
             * Format: date-time
             * @description 精算日時
             */
            settlementDateTime?: string;
            /**
             * Format: date-time
             * @description レジ開始日時
             */
            openingDateTime?: string;
            /**
             * Format: date-time
             * @description レジ締め日時
             */
            closingDateTime?: string;
            summary?: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal?: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal?: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal?: number;
                /** @description 取引件数 */
                transactionCount?: number;
                /** @description 客数 */
                customerCount?: number;
            };
            /** @description 支払方法別集計 */
            payments?: {
                /** @description 支払方法ID */
                paymentMethodId?: string;
                /** @description 支払方法名 */
                paymentMethodName?: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount?: number;
                /** @description 件数 */
                count?: number;
            }[];
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        SettlementCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description 端末ID */
            terminalId: string;
            /** @description スタッフID */
            staffId: string;
            /**
             * Format: date-time
             * @description 精算日時
             */
            settlementDateTime?: string;
            /**
             * Format: date-time
             * @description レジ開始日時
             */
            openingDateTime: string;
            /**
             * Format: date-time
             * @description レジ締め日時
             */
            closingDateTime: string;
            summary: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal: number;
                /** @description 取引件数 */
                transactionCount: number;
                /** @description 客数 */
                customerCount: number;
            };
            /** @description 支払方法別集計 */
            payments: {
                /** @description 支払方法ID */
                paymentMethodId: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount: number;
                /** @description 件数 */
                count: number;
            }[];
        };
        DailySettlement: {
            /** @description 日次締めID */
            dailySettlementId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /**
             * Format: date
             * @description 営業日
             */
            businessDate?: string;
            /**
             * Format: date
             * @description 締め日
             */
            closingDate?: string;
            /**
             * Format: date-time
             * @description 締め日時
             */
            closingDateTime?: string;
            /** @description スタッフID */
            staffId?: string;
            /** @description スタッフ名 */
            staffName?: string;
            summary?: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal?: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal?: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal?: number;
                /** @description 取引件数 */
                transactionCount?: number;
                /** @description 客数 */
                customerCount?: number;
            };
            /** @description 支払方法別集計 */
            payments?: {
                /** @description 支払方法ID */
                paymentMethodId?: string;
                /** @description 支払方法名 */
                paymentMethodName?: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount?: number;
                /** @description 件数 */
                count?: number;
            }[];
            /**
             * @description ステータス(0:未確定, 1:確定)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        DailySettlementCreate: {
            /** @description 店舗ID */
            storeId: string;
            /**
             * Format: date
             * @description 営業日
             */
            businessDate: string;
            /**
             * Format: date
             * @description 締め日
             */
            closingDate: string;
            /**
             * Format: date-time
             * @description 締め日時
             */
            closingDateTime?: string;
            /** @description スタッフID */
            staffId: string;
            summary: {
                /**
                 * Format: float
                 * @description 売上合計
                 */
                salesTotal: number;
                /**
                 * Format: float
                 * @description 返品合計
                 */
                returnTotal: number;
                /**
                 * Format: float
                 * @description 値引合計
                 */
                discountTotal: number;
                /** @description 取引件数 */
                transactionCount: number;
                /** @description 客数 */
                customerCount: number;
            };
            /** @description 支払方法別集計 */
            payments: {
                /** @description 支払方法ID */
                paymentMethodId: string;
                /**
                 * Format: float
                 * @description 金額
                 */
                amount: number;
                /** @description 件数 */
                count: number;
            }[];
            /**
             * @description ステータス(0:未確定, 1:確定)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        PaymentMethod: {
            /** @description 支払方法ID */
            paymentMethodId?: string;
            /** @description 支払方法コード */
            paymentMethodCode?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /** @description 支払方法区分ID */
            paymentMethodDivisionId?: string;
            /** @description 支払方法区分名 */
            paymentMethodDivisionName?: string;
            /**
             * @description 金額入力タイプ(0:不要, 1:任意, 2:必須)
             * @enum {string}
             */
            amountInputType?: "0" | "1" | "2";
            /**
             * @description お釣り対応タイプ(0:不可, 1:可, 2:自動計算)
             * @enum {string}
             */
            changeType?: "0" | "1" | "2";
            /** @description 表示順 */
            sortNo?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        PaymentMethodCreate: {
            /** @description 支払方法コード */
            paymentMethodCode: string;
            /** @description 支払方法名 */
            paymentMethodName: string;
            /** @description 支払方法区分ID */
            paymentMethodDivisionId: string;
            /**
             * @description 金額入力タイプ(0:不要, 1:任意, 2:必須)
             * @enum {string}
             */
            amountInputType?: "0" | "1" | "2";
            /**
             * @description お釣り対応タイプ(0:不可, 1:可, 2:自動計算)
             * @enum {string}
             */
            changeType?: "0" | "1" | "2";
            /** @description 表示順 */
            sortNo?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        PaymentMethodUpdate: {
            /** @description 支払方法コード */
            paymentMethodCode?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /** @description 支払方法区分ID */
            paymentMethodDivisionId?: string;
            /**
             * @description 金額入力タイプ(0:不要, 1:任意, 2:必須)
             * @enum {string}
             */
            amountInputType?: "0" | "1" | "2";
            /**
             * @description お釣り対応タイプ(0:不可, 1:可, 2:自動計算)
             * @enum {string}
             */
            changeType?: "0" | "1" | "2";
            /** @description 表示順 */
            sortNo?: number;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        StorePaymentMethod: {
            /** @description 店舗支払方法ID */
            storePaymentMethodId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 支払方法ID */
            paymentMethodId?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        PaymentMethodDivision: {
            /** @description 支払方法区分ID */
            paymentMethodDivisionId?: string;
            /** @description 支払方法区分名 */
            paymentMethodDivisionName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        PaymentMethodDivisionCreate: {
            /** @description 支払方法区分名 */
            paymentMethodDivisionName: string;
        };
        PaymentMethodDivisionUpdate: {
            /** @description 支払方法区分名 */
            paymentMethodDivisionName?: string;
        };
        AppPaymentMethod: {
            /** @description アプリ連携支払方法ID */
            appPaymentMethodId?: string;
            /** @description アプリID */
            appId?: string;
            /** @description アプリ名 */
            appName?: string;
            /** @description 支払方法ID */
            paymentMethodId?: string;
            /** @description 支払方法名 */
            paymentMethodName?: string;
            /** @description アプリ連携用支払コード */
            appPaymentCode?: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        AppPaymentMethodCreate: {
            /** @description 支払方法ID */
            paymentMethodId: string;
            /** @description アプリ連携用支払コード */
            appPaymentCode: string;
            /**
             * @description ステータス(0:無効, 1:有効)
             * @enum {string}
             */
            status?: "0" | "1";
        };
        /** @description クーポン情報 */
        Coupon: {
            /** @description クーポンID */
            id: number;
            /** @description クーポン名 */
            couponName: string;
            /** @description クーポンコード */
            couponCode?: string;
            /** @description クーポン種別（1:値引き額、2:割引率、3:ポイント加算） */
            couponType: number;
            /** @description クーポン値（値引き額、割引率、加算ポイント） */
            couponValue: number;
            /** @description 最大値引き額 */
            maxDiscount?: number;
            /** @description 適用最低金額 */
            minAmount?: number;
            /**
             * Format: date
             * @description 開始日
             */
            startDate: string;
            /**
             * Format: date
             * @description 終了日
             */
            endDate: string;
            /** @description ボーナスデー（1:月曜日、2:火曜日、...、7:日曜日） */
            bonusDay?: string;
            /** @description ボーナス月（1:1月、2:2月、...、12:12月） */
            bonusMonth?: number;
            /** @description ユニーク使用（true:可、false:不可） */
            uniqueUse?: boolean;
            /** @description 有効日数 */
            validDays?: number;
            /** @description 有効回数 */
            validCount?: number;
            /** @description 利用制限回数 */
            limitCount?: number;
            /** @description 公開フラグ（true:公開、false:非公開） */
            isPublic?: boolean;
            /** @description 説明文 */
            description?: string;
            /** @description 画像URL */
            image?: string;
            /** @description 対象店舗（1:全店舗、2:個別指定） */
            storeTarget?: string;
            /** @description 適用店舗リスト */
            stores?: {
                /** @description 店舗ID */
                id?: number;
                /** @description 店舗名 */
                storeName?: string;
            }[];
            /** @description 対象商品（1:全商品、2:個別指定） */
            productTarget?: string;
            /** @description 商品対象除外フラグ（true:除外、false:含む） */
            isExcludeProductTarget?: boolean;
            /** @description バーゲン併用可否（true:併用可、false:併用不可） */
            isApplyBargain?: boolean;
            /** @description 他クーポン併用可否（true:併用可、false:併用不可） */
            isApplyOtherCoupon?: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description クーポン登録情報 */
        CouponCreate: {
            /** @description クーポン名 */
            couponName: string;
            /** @description クーポンコード */
            couponCode?: string;
            /** @description クーポン種別（1:値引き額、2:割引率、3:ポイント加算） */
            couponType: number;
            /** @description クーポン値（値引き額、割引率、加算ポイント） */
            couponValue: number;
            /** @description 最大値引き額 */
            maxDiscount?: number;
            /** @description 適用最低金額 */
            minAmount?: number;
            /**
             * Format: date
             * @description 開始日
             */
            startDate: string;
            /**
             * Format: date
             * @description 終了日
             */
            endDate: string;
            /** @description ボーナスデー（1:月曜日、2:火曜日、...、7:日曜日） */
            bonusDay?: string;
            /** @description ボーナス月（1:1月、2:2月、...、12:12月） */
            bonusMonth?: number;
            /** @description ユニーク使用（true:可、false:不可） */
            uniqueUse?: boolean;
            /** @description 有効日数 */
            validDays?: number;
            /** @description 有効回数 */
            validCount?: number;
            /** @description 利用制限回数 */
            limitCount?: number;
            /** @description 公開フラグ（true:公開、false:非公開） */
            isPublic?: boolean;
            /** @description 説明文 */
            description?: string;
            /** @description 画像URL */
            image?: string;
            /** @description 対象店舗（1:全店舗、2:個別指定） */
            storeTarget?: string;
            /** @description 適用店舗IDリスト */
            storeIds?: number[];
            /** @description 対象商品（1:全商品、2:個別指定） */
            productTarget?: string;
            /** @description 商品対象除外フラグ（true:除外、false:含む） */
            isExcludeProductTarget?: boolean;
            /** @description バーゲン併用可否（true:併用可、false:併用不可） */
            isApplyBargain?: boolean;
            /** @description 他クーポン併用可否（true:併用可、false:併用不可） */
            isApplyOtherCoupon?: boolean;
        };
        /** @description クーポン更新情報 */
        CouponUpdate: {
            /** @description クーポン名 */
            couponName?: string;
            /** @description クーポンコード */
            couponCode?: string;
            /** @description クーポン種別（1:値引き額、2:割引率、3:ポイント加算） */
            couponType?: number;
            /** @description クーポン値（値引き額、割引率、加算ポイント） */
            couponValue?: number;
            /** @description 最大値引き額 */
            maxDiscount?: number;
            /** @description 適用最低金額 */
            minAmount?: number;
            /**
             * Format: date
             * @description 開始日
             */
            startDate?: string;
            /**
             * Format: date
             * @description 終了日
             */
            endDate?: string;
            /** @description ボーナスデー（1:月曜日、2:火曜日、...、7:日曜日） */
            bonusDay?: string;
            /** @description ボーナス月（1:1月、2:2月、...、12:12月） */
            bonusMonth?: number;
            /** @description ユニーク使用（true:可、false:不可） */
            uniqueUse?: boolean;
            /** @description 有効日数 */
            validDays?: number;
            /** @description 有効回数 */
            validCount?: number;
            /** @description 利用制限回数 */
            limitCount?: number;
            /** @description 公開フラグ（true:公開、false:非公開） */
            isPublic?: boolean;
            /** @description 説明文 */
            description?: string;
            /** @description 画像URL */
            image?: string;
            /** @description 対象店舗（1:全店舗、2:個別指定） */
            storeTarget?: string;
            /** @description 適用店舗IDリスト */
            storeIds?: number[];
            /** @description 対象商品（1:全商品、2:個別指定） */
            productTarget?: string;
            /** @description 商品対象除外フラグ（true:除外、false:含む） */
            isExcludeProductTarget?: boolean;
            /** @description バーゲン併用可否（true:併用可、false:併用不可） */
            isApplyBargain?: boolean;
            /** @description 他クーポン併用可否（true:併用可、false:併用不可） */
            isApplyOtherCoupon?: boolean;
        };
        /** @description クーポン適用商品情報 */
        CouponProduct: {
            /** @description クーポン適用商品ID */
            id: number;
            /** @description クーポンID */
            couponId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 値引き種別（1:値引き額、2:割引率、3:ポイント加算） */
            discountType: number;
            /** @description 値引き値（値引き額、割引率、加算ポイント） */
            discountValue: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description クーポン適用商品登録情報 */
        CouponProductCreate: {
            /** @description 商品ID */
            productId: number;
            /** @description 値引き種別（1:値引き額、2:割引率、3:ポイント加算） */
            discountType: number;
            /** @description 値引き値（値引き額、割引率、加算ポイント） */
            discountValue: number;
        };
        /** @description クーポン適用商品更新情報 */
        CouponProductUpdate: {
            /** @description 商品ID */
            productId?: number;
            /** @description 値引き種別（1:値引き額、2:割引率、3:ポイント加算） */
            discountType?: number;
            /** @description 値引き値（値引き額、割引率、加算ポイント） */
            discountValue?: number;
        };
        Loss: {
            /** @description ロスID */
            lossId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description ロス区分ID */
            lossDivisionId?: string;
            /**
             * Format: date
             * @description ロス日
             */
            lossDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        LossCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description ロス区分ID */
            lossDivisionId: string;
            /**
             * Format: date
             * @description ロス日
             */
            lossDate: string;
            /** @description メモ */
            memo?: string;
            /** @description ロス明細 */
            details: {
                /** @description 商品ID */
                productId: string;
                /** @description 数量 */
                quantity: string;
                /** @description 単価 */
                unitCost?: string;
                /** @description メモ */
                memo?: string;
            }[];
        };
        LossUpdate: {
            /** @description 店舗ID */
            storeId?: string;
            /** @description ロス区分ID */
            lossDivisionId?: string;
            /**
             * Format: date
             * @description ロス日
             */
            lossDate?: string;
            /** @description メモ */
            memo?: string;
        };
        LossDetail: {
            /** @description ロスID */
            lossId?: string;
            /** @description ロス明細ID */
            lossDetailId?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 数量 */
            quantity?: string;
            /** @description 単価 */
            unitCost?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        LossDivision: {
            /** @description ロス区分ID */
            lossDivisionId?: string;
            /** @description ロス区分名 */
            lossDivisionName?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        LossDivisionCreate: {
            /** @description ロス区分名 */
            lossDivisionName: string;
        };
        LossDivisionUpdate: {
            /** @description ロス区分名 */
            lossDivisionName?: string;
        };
        Order: {
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷予定日
             */
            estimatedArrivalDate?: string;
            /**
             * Format: date
             * @description 発注日
             */
            orderDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス (0:未処理, 1:処理済み, 2:キャンセル, 3:完了)
             * @enum {string}
             */
            status?: "0" | "1" | "2" | "3";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        OrderCreate: {
            /** @description 店舗ID */
            storeId: string;
            /** @description 仕入先ID */
            supplierId: string;
            /**
             * Format: date
             * @description 入荷予定日
             */
            estimatedArrivalDate?: string;
            /**
             * Format: date
             * @description 発注日
             */
            orderDate: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス (0:未処理, 1:処理済み, 2:キャンセル, 3:完了)
             * @default 0
             * @enum {string}
             */
            status: "0" | "1" | "2" | "3";
            /** @description 発注明細 */
            details?: {
                /** @description 商品ID */
                productId?: string;
                /** @description 数量 */
                quantity?: string;
                /** @description メモ */
                memo?: string;
            }[];
        };
        OrderUpdate: {
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷予定日
             */
            estimatedArrivalDate?: string;
            /**
             * Format: date
             * @description 発注日
             */
            orderDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス (0:未処理, 1:処理済み, 2:キャンセル, 3:完了)
             * @enum {string}
             */
            status?: "0" | "1" | "2" | "3";
        };
        OrderProduct: {
            /** @description 商品ID */
            productId?: string;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description 部門ID */
            categoryId?: string;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 在庫数 */
            inventoryQuantity?: string;
            /** @description 発注点在庫残 */
            remainsInventories?: string;
            /** @description 発注点 */
            orderPoint?: string;
        };
        OrderStore: {
            /** @description 店舗ID */
            storeId?: string;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 店舗コード */
            storeCode?: string;
        };
        Arrival: {
            /** @description 入荷ID */
            arrivalId?: string;
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        ArrivalCreate: {
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @default 0
             * @enum {string}
             */
            status: "0" | "1" | "2";
        };
        ArrivalUpdate: {
            /** @description 発注ID */
            orderId?: string;
            /** @description 店舗ID */
            storeId?: string;
            /** @description 仕入先ID */
            supplierId?: string;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
        };
        ArrivalDetail: {
            /** @description 入荷ID */
            arrivalId?: string;
            /** @description 入荷明細ID */
            arrivalDetailId?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 発注明細ID */
            orderDetailId?: string;
            /** @description 数量 */
            quantity?: string;
            /** @description 原価 */
            cost?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        Shipment: {
            /** @description 出荷ID */
            shipmentId?: string;
            /** @description 出荷元店舗ID */
            storeId?: string;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /** @description 出荷先店舗ID */
            destinationStoreId?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        ShipmentCreate: {
            /** @description 出荷元店舗ID */
            storeId: string;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate: string;
            /** @description 出荷先店舗ID */
            destinationStoreId: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @default 0
             * @enum {string}
             */
            status: "0" | "1" | "2";
        };
        ShipmentUpdate: {
            /** @description 出荷元店舗ID */
            storeId?: string;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /** @description 出荷先店舗ID */
            destinationStoreId?: string;
            /** @description メモ */
            memo?: string;
            /**
             * @description ステータス(0:未確定, 1:確定, 2:キャンセル)
             * @enum {string}
             */
            status?: "0" | "1" | "2";
        };
        ShipmentDetail: {
            /** @description 出荷ID */
            shipmentId?: string;
            /** @description 出荷明細ID */
            shipmentDetailId?: string;
            /** @description 商品ID */
            productId?: string;
            /** @description 数量 */
            quantity?: string;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 登録日時
             */
            insDateTime?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updDateTime?: string;
        };
        /** @description 入庫情報 */
        IncomingStock: {
            /** @description 入庫ID */
            id: number;
            /** @description 入庫区分（1:仕入、2:店舗間移動、3:返品） */
            division: number;
            /** @description 入庫区分名 */
            divisionName?: string;
            /** @description 入庫ステータス（1:計画中、2:確定済） */
            status: number;
            /** @description 入庫ステータス名 */
            statusName?: string;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 出庫元店舗ID */
            supplierStoreId?: number;
            /** @description 出庫元店舗名 */
            supplierStoreName?: string;
            /** @description 仕入先ID */
            supplierId?: number;
            /** @description 仕入先名 */
            supplierName?: string;
            /** @description 入荷ID */
            arrivalId?: number;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description 発注ID */
            orderId?: number;
            /**
             * Format: date
             * @description 入庫日
             */
            targetDate: string;
            /**
             * Format: date
             * @description 入庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
            /** @description メモ */
            memo?: string;
            /** @description 合計金額 */
            totalAmount?: number;
            /** @description 商品件数 */
            productCount?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 入庫更新情報 */
        IncomingStockUpdate: {
            /** @description 入庫区分（1:仕入、2:店舗間移動、3:返品） */
            division?: number;
            /** @description 入庫ステータス（1:計画中、2:確定済） */
            status?: number;
            /** @description 店舗ID */
            storeId?: number;
            /** @description 出庫元店舗ID */
            supplierStoreId?: number;
            /** @description 仕入先ID */
            supplierId?: number;
            /** @description 入荷ID */
            arrivalId?: number;
            /**
             * Format: date
             * @description 入荷日
             */
            arrivalDate?: string;
            /** @description 発注ID */
            orderId?: number;
            /**
             * Format: date
             * @description 入庫日
             */
            targetDate?: string;
            /**
             * Format: date
             * @description 入庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
        };
        /** @description 入庫詳細情報 */
        IncomingStockDetail: {
            /** @description 入庫詳細ID */
            id: number;
            /** @description 入庫ID */
            incomingStockId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /**
             * Format: float
             * @description 数量
             */
            quantity: number;
            /** @description 仕入単価 */
            costPrice?: number;
            /** @description 販売単価 */
            price?: number;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 出庫情報 */
        OutgoingStock: {
            /** @description 出庫ID */
            id: number;
            /** @description 出庫区分（1:店舗間移動、2:返品、3:その他） */
            division: number;
            /** @description 出庫区分名 */
            divisionName?: string;
            /** @description 出庫ステータス（1:計画中、2:確定済） */
            status: number;
            /** @description 出庫ステータス名 */
            statusName?: string;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 入庫先店舗ID */
            destinationStoreId?: number;
            /** @description 入庫先店舗名 */
            destinationStoreName?: string;
            /** @description 仕入先ID（返品時） */
            supplierId?: number;
            /** @description 仕入先名（返品時） */
            supplierName?: string;
            /** @description 出荷ID */
            shipmentId?: number;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /**
             * Format: date
             * @description 出庫日
             */
            targetDate: string;
            /**
             * Format: date
             * @description 出庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
            /** @description メモ */
            memo?: string;
            /** @description 合計金額 */
            totalAmount?: number;
            /** @description 商品件数 */
            productCount?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 出庫登録情報 */
        OutgoingStockCreate: {
            /** @description 出庫区分（1:店舗間移動、2:返品、3:その他） */
            division: number;
            /** @description 出庫ステータス（1:計画中、2:確定済） */
            status: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 入庫先店舗ID */
            destinationStoreId?: number;
            /** @description 仕入先ID（返品時） */
            supplierId?: number;
            /** @description 出荷ID */
            shipmentId?: number;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /**
             * Format: date
             * @description 出庫日
             */
            targetDate: string;
            /**
             * Format: date
             * @description 出庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
            /** @description 出庫詳細情報 */
            details: {
                /** @description 商品ID */
                productId: number;
                /**
                 * Format: float
                 * @description 数量
                 */
                quantity: number;
                /** @description 仕入単価 */
                costPrice?: number;
                /** @description メモ */
                memo?: string;
            }[];
        };
        /** @description 出庫更新情報 */
        OutgoingStockUpdate: {
            /** @description 出庫区分（1:店舗間移動、2:返品、3:その他） */
            division?: number;
            /** @description 出庫ステータス（1:計画中、2:確定済） */
            status?: number;
            /** @description 店舗ID */
            storeId?: number;
            /** @description 入庫先店舗ID */
            destinationStoreId?: number;
            /** @description 仕入先ID（返品時） */
            supplierId?: number;
            /** @description 出荷ID */
            shipmentId?: number;
            /**
             * Format: date
             * @description 出荷日
             */
            shipmentDate?: string;
            /**
             * Format: date
             * @description 出庫日
             */
            targetDate?: string;
            /**
             * Format: date
             * @description 出庫予定日
             */
            estimatedDate?: string;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description メモ */
            memo?: string;
        };
        /** @description 出庫詳細情報 */
        OutgoingStockDetail: {
            /** @description 出庫詳細ID */
            id: number;
            /** @description 出庫ID */
            outgoingStockId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /**
             * Format: float
             * @description 数量
             */
            quantity: number;
            /** @description 仕入単価 */
            costPrice?: number;
            /** @description 販売単価 */
            price?: number;
            /** @description メモ */
            memo?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 出庫修正申請情報 */
        CorrectionRequestOutgoingStock: {
            /** @description 出庫修正申請ID */
            id: number;
            /** @description 出庫ID */
            outgoingStockId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 申請ステータス（1:申請中、2:承認済、3:却下） */
            status: number;
            /** @description 申請ステータス名 */
            statusName?: string;
            /**
             * Format: date
             * @description 申請日
             */
            requestDate: string;
            /** @description 申請理由 */
            requestReason?: string;
            /** @description 申請スタッフID */
            requestStaffId?: number;
            /** @description 申請スタッフ名 */
            requestStaffName?: string;
            /**
             * Format: date
             * @description 承認/却下日
             */
            approvalDate?: string;
            /** @description 承認/却下理由 */
            approvalReason?: string;
            /** @description 承認/却下スタッフID */
            approvalStaffId?: number;
            /** @description 承認/却下スタッフ名 */
            approvalStaffName?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸情報 */
        Stocktaking: {
            /** @description 棚卸ID */
            id: number;
            /** @description 棚卸名 */
            stocktakingName: string;
            /** @description 店舗ID */
            storeId: number;
            /** @description 店舗名 */
            storeName?: string;
            /** @description 棚卸ステータス（1:集計中、2:完了） */
            stocktakingStatus: number;
            /**
             * Format: date-time
             * @description 開始日時
             */
            startDate: string;
            /**
             * Format: date-time
             * @description 終了日時
             */
            endDate?: string;
            /** @description 合計在庫金額 */
            stockAmount?: number;
            /** @description 担当スタッフID */
            staffId?: number;
            /** @description 担当スタッフ名 */
            staffName?: string;
            /** @description メモ */
            memo?: string;
            /** @description 在庫なし商品除外フラグ（true:除外する、false:除外しない） */
            isExcludeOutOfStock?: boolean;
            /** @description 部門対象（1:全部門、2:指定部門） */
            categoryTarget?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸部門情報 */
        StocktakingCategory: {
            /** @description 棚卸部門ID */
            id: number;
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 部門ID */
            categoryId: number;
            /** @description 部門コード */
            categoryCode?: string;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 棚卸実施済みフラグ（true:実施済み、false:未実施） */
            isComplete: boolean;
            /** @description 商品件数 */
            productCount?: number;
            /** @description カウント済み商品件数 */
            countedProductCount?: number;
            /**
             * Format: float
             * @description カウント済み割合
             */
            countedRatio?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸商品情報 */
        StocktakingProduct: {
            /** @description 棚卸商品ID */
            id: number;
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /** @description バーコード */
            barcode?: string;
            /** @description 部門ID */
            categoryId?: number;
            /** @description 部門名 */
            categoryName?: string;
            /** @description 標準価格（税抜） */
            price?: number;
            /** @description 原価 */
            cost?: number;
            /** @description 税込みフラグ（true:税込み、false:税抜き） */
            isTaxIncluded?: boolean;
            /**
             * Format: float
             * @description 税率
             */
            taxRate?: number;
            /**
             * Format: float
             * @description システム在庫数
             */
            inventoryQuantity: number;
            /**
             * Format: float
             * @description 実在庫数
             */
            countedQuantity?: number;
            /**
             * Format: float
             * @description 差異数
             */
            differenceQuantity?: number;
            /** @description 商品カウント済みフラグ（true:カウント済み、false:未カウント） */
            isCounted: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 棚卸在庫情報 */
        StocktakingStock: {
            /** @description 棚卸在庫ID */
            id: number;
            /** @description 棚卸ID */
            stocktakingId: number;
            /** @description 店舗ID */
            storeId: number;
            /** @description 商品ID */
            productId: number;
            /** @description 商品コード */
            productCode?: string;
            /** @description 商品名 */
            productName?: string;
            /**
             * Format: float
             * @description システム在庫数
             */
            inventoryQuantity: number;
            /**
             * Format: float
             * @description 実在庫数
             */
            countedQuantity: number;
            /**
             * Format: float
             * @description 差異数
             */
            differenceQuantity: number;
            /** @description 標準価格（税抜） */
            price?: number;
            /** @description システム在庫金額 */
            inventoryAmount?: number;
            /** @description 実在庫金額 */
            countedAmount?: number;
            /** @description 差異金額 */
            differenceAmount?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 税率情報 */
        TaxRate: {
            /** @description 税率ID */
            id: number;
            /** @description 税率名 */
            name: string;
            /**
             * Format: float
             * @description 税率（例：0.08で8%）
             */
            rate: number;
            /**
             * Format: date
             * @description 適用開始日
             */
            effectiveFrom: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description 説明 */
            description?: string;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 軽減税率情報 */
        ReduceTaxRate: {
            /** @description 軽減税率ID */
            id: number;
            /** @description 軽減税率名 */
            name: string;
            /**
             * Format: float
             * @description 税率（例：0.08で8%）
             */
            rate: number;
            /**
             * Format: date
             * @description 適用開始日
             */
            effectiveFrom: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description 説明 */
            description?: string;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description レシート備考情報 */
        ReceiptRemark: {
            /** @description レシート備考ID */
            id: number;
            /** @description 備考文 */
            text: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description レシート備考登録情報 */
        ReceiptRemarkCreate: {
            /** @description 備考文 */
            text: string;
            /** @description 表示順 */
            displayOrder?: number;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
        };
        /** @description 値引き区分情報 */
        DiscountDivision: {
            /** @description 値引き区分ID */
            id: number;
            /** @description 値引き区分名 */
            divisionName: string;
            /** @description 値引き区分コード */
            code?: string;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description CAT/CCTカード会社情報 */
        CatCctCardCompany: {
            /** @description カード会社ID */
            id: number;
            /** @description カード会社名 */
            cardCompanyName: string;
            /** @description カード会社コード */
            cardCompanyCode: string;
            /** @description 入力モード（1:カード情報必須、2:カード情報任意、3:カード情報なし） */
            inputMode: number;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 顧客タイプ情報 */
        CustomerType: {
            /** @description 顧客タイプID */
            id: number;
            /** @description 顧客タイプコード */
            code: string;
            /** @description 顧客タイプ名 */
            name: string;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 顧客タイプ登録情報 */
        CustomerTypeCreate: {
            /** @description 顧客タイプコード */
            code: string;
            /** @description 顧客タイプ名 */
            name: string;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /** @description 表示順 */
            displayOrder?: number;
        };
        /** @description 顧客タイプ更新情報 */
        CustomerTypeUpdate: {
            /** @description 顧客タイプコード */
            code?: string;
            /** @description 顧客タイプ名 */
            name?: string;
            /** @description デフォルト設定（true:デフォルト、false:デフォルトでない） */
            isDefault?: boolean;
            /** @description 表示順 */
            displayOrder?: number;
        };
        /** @description 顧客タイプセクション情報 */
        CustomerTypeSection: {
            /** @description 顧客タイプセクションID */
            id: number;
            /** @description 顧客タイプID */
            customerTypeId: number;
            /** @description セクション名 */
            name: string;
            /** @description セクション値 */
            value?: string;
            /** @description フィールドタイプ（1:テキスト、2:数値、3:日付、4:選択肢、5:テキストエリア） */
            fieldType: number;
            /** @description 必須フラグ（true:必須、false:任意） */
            isRequired?: boolean;
            /** @description 選択肢（カンマ区切り） */
            choices?: string;
            /** @description 表示順 */
            displayOrder?: number;
            /**
             * Format: date-time
             * @description 作成日時
             */
            createDate?: string;
            /**
             * Format: date-time
             * @description 更新日時
             */
            updateDate?: string;
        };
        /** @description 顧客タイプセクション更新情報 */
        CustomerTypeSectionUpdate: {
            /** @description 顧客タイプセクションID */
            id: number;
            /** @description セクション名 */
            name?: string;
            /** @description フィールドタイプ（1:テキスト、2:数値、3:日付、4:選択肢、5:テキストエリア） */
            fieldType?: number;
            /** @description 必須フラグ（true:必須、false:任意） */
            isRequired?: boolean;
            /** @description 選択肢（カンマ区切り） */
            choices?: string;
            /** @description 表示順 */
            displayOrder?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getProducts: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description ソート順 */
                sort?: "productId" | "productCode" | "productName" | "categoryId" | "supplierName" | "price" | "cost" | "modified";
                /** @description 商品ID */
                product_id?: number;
                /** @description 商品コード */
                product_code?: string;
                /** @description グループコード */
                group_code?: string;
                /** @description 部門ID */
                category_id?: number;
                /** @description 端末表示（0. 表示しない、1. 表示する） */
                display_flag?: "0" | "1";
                /** @description 商品区分 (0：通常商品、1：回数券、2：オプション商品) */
                division?: "0" | "1" | "2";
                /** @description 売上区分 (0:売上対象、1:売上対象外) */
                sales_division?: "0" | "1";
                /** @description 在庫管理区分 (0:在庫管理対象、1:在庫管理対象外) */
                stock_control_division?: "0" | "1";
                /** @description 品番 */
                supplier_product_no?: string;
                /** @description 更新日時(From)：登録時・更新時の日時。[YYYY-MM-DDThh:mm:ssTZD]
                 *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                 *      */
                "upd_date_time-from"?: string;
                /** @description 更新日時(To)：登録時・更新時の日時。[YYYY-MM-DDThh:mm:ssTZD]
                 *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                 *      */
                "upd_date_time-to"?: string;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["Product"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProduct: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductCreate"];
            };
        };
        responses: {
            /** @description 商品の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Product"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProduct: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Product"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductUpdate"];
            };
        };
        responses: {
            /** @description 商品の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Product"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProduct: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（関連データが存在するなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductPrices: {
        parameters: {
            query?: {
                /** @description 店舗ID */
                store_id?: number;
                /** @description 価格区分 */
                price_division?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品価格情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductPrice"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductPrice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductPrice"];
            };
        };
        responses: {
            /** @description 商品価格情報の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductPrice"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductPriceChanges: {
        parameters: {
            query?: {
                /** @description 価格区分(1：商品単価、2：会員価格、3：原価、4：商品単価詳細、5：会員価格詳細) */
                price_division?: "1" | "2" | "3" | "4" | "5";
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品価格変更履歴を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductPriceChange"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductPrice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 価格区分 */
                price_division: number;
                /** @description 店舗ID */
                store_id: number;
                /** @description 適用開始日(YYYY-MM-DD形式) */
                start_date: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品価格情報の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品価格情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductReserveItems: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description ソート順 */
                sort?: "no";
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の予約項目情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductReserveItem"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductAttributes: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductAttribute"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductAttribute: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttribute"];
            };
        };
        responses: {
            /** @description 商品属性の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttribute"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductAttributeItems: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 項目番号：商品属性に付与されている連番 */
                no?: number;
                /** @description コード：商品属性項目を一意にする項目 */
                code?: string;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性項目一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductAttributeItem"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductAttributeItem: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttributeItem"];
            };
        };
        responses: {
            /** @description 商品属性項目の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttributeItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductAttribute: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttribute"];
            };
        };
        responses: {
            /** @description 商品属性の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttribute"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductAttribute: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductAttributeItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性項目コード */
                code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品属性項目の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductAttributeItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 属性項目コード */
                code: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductAttributeItem"];
            };
        };
        responses: {
            /** @description 商品属性項目の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductAttributeItem"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品属性項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductStores: {
        parameters: {
            query?: {
                /** @description 店舗ID */
                store_id?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の店舗関連情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductStore"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductStores: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items?: components["schemas"]["ProductStore"][];
                };
            };
        };
        responses: {
            /** @description 商品の店舗関連情報の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductStore"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductStore: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductStore"];
            };
        };
        responses: {
            /** @description 商品の店舗関連情報の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductStore"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または店舗が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductInventoryReservations: {
        parameters: {
            query?: {
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の在庫引当情報を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductInventoryReservation"][];
                        /** @description 総件数 */
                        total?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductInventoryReservations: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items?: components["schemas"]["ProductInventoryReservation"][];
                };
            };
        };
        responses: {
            /** @description 商品の在庫引当情報の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductInventoryReservation"][];
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductInventoryReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductInventoryReservation"];
            };
        };
        responses: {
            /** @description 商品の在庫引当情報の登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductInventoryReservation"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または引当先商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductInventoryReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
                /** @description 引当商品ID */
                reservation_product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品の在庫引当情報の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または在庫引当情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductReserveItemLabels: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 予約項目ラベル名 */
                name?: string;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 予約項目ラベル一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductReserveItemLabel"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    createProductReserveItemLabel: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductReserveItemLabel"];
            };
        };
        responses: {
            /** @description 予約項目ラベルの登録に成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItemLabel"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductReserveItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 予約項目番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品予約項目の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品または予約項目が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductReserveItemLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 予約項目ラベル番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductReserveItemLabel"];
            };
        };
        responses: {
            /** @description 予約項目ラベルの更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductReserveItemLabel"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 予約項目ラベルが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 既存データとの競合エラー */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductReserveItemLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 予約項目ラベル番号 */
                no: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 予約項目ラベルの削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 予約項目ラベルが存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 削除できない状態（他のデータから参照されているなど） */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProductImages: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 商品ID */
                product_id?: number;
                /** @description 取得するフィールド */
                fields?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品画像一覧を返却 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["ProductImage"][];
                        /** @description 総件数 */
                        total?: number;
                        /** @description 取得件数 */
                        limit?: number;
                        /** @description ページ番号 */
                        page?: number;
                    };
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    uploadProductImage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["ProductImageUpload"];
            };
        };
        responses: {
            /** @description 商品画像のアップロードに成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductImage"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description ファイルサイズが上限を超えている */
            413: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description サポートされていないファイル形式 */
            415: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 画像ファイル（JPEG、PNG形式）
                     */
                    image?: string;
                };
            };
        };
        responses: {
            /** @description 商品メイン画像の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductImage"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description ファイルサイズが上限を超えている */
            413: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description サポートされていないファイル形式 */
            415: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品メイン画像の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品またはメイン画像が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateProductIconImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 画像ファイル（JPEG、PNG形式）
                     */
                    image?: string;
                };
            };
        };
        responses: {
            /** @description 商品アイコン画像の更新に成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductImage"];
                };
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description ファイルサイズが上限を超えている */
            413: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description サポートされていないファイル形式 */
            415: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteProductIconImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 商品アイコン画像の削除に成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description リクエストパラメータが不正 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 権限エラー */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 商品またはアイコン画像が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStocks: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 店舗ID */
                store_id?: number;
                /** @description 商品ID */
                product_id?: number;
                /** @description 更新日時(from)：登録時・更新時の日時。[YYYY-MM-DDThh:mm:ssTZD]
                 *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                 *      */
                "upd_date_time-from"?: string;
                /** @description 更新日時(to)：登録時・更新時の日時。[YYYY-MM-DDThh:mm:ssTZD]
                 *     ※ From〜Toの期間は最大31日までの指定でご利用ください
                 *      */
                "upd_date_time-to"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        stocks?: components["schemas"]["Stock"][];
                        pagination?: components["schemas"]["Pagination"];
                    };
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    patchProductStock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["StockUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StockUpdate"];
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateStockRelative: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StockRelativeUpdate"];
            };
        };
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StockUpdate"];
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定された在庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStockChanges: {
        parameters: {
            query?: {
                /** @description 取得件数 */
                limit?: number;
                /** @description ページ番号 */
                page?: number;
                /** @description 在庫変動履歴ID */
                id?: number;
                /** @description 対象日：在庫履歴集計画面用に日付を保持する。 入庫と入荷の時は検品日を設定する。 */
                target_date?: string;
                /** @description 在庫数：処理後の在庫数 */
                stock_amount?: number;
                /** @description 在庫区分：在庫を更新理由となる区分 (01:修正、02:売上、03:仕入、04:出庫、05:入庫、06:レンタル、07:取置き、08:棚卸、09:調整、10:出荷、12:返品、13:販促品、14:ロス、15:スマレジAPI連携、16:売上引当、17:入庫欠品、18:受注在庫引当) */
                stock_division?: "01" | "02" | "03" | "04" | "05" | "06" | "07" | "08" | "09" | "10" | "12" | "13" | "14" | "15" | "16" | "17" | "18";
                /** @description 配送元店舗ID：入出庫時の配送元店舗の店舗ID */
                from_store_id?: number;
                /** @description 配送先店舗ID：入出庫時の配送先店舗の店舗ID */
                to_store_id?: number;
            };
            header?: never;
            path: {
                /** @description 商品ID */
                product_id: number;
                /** @description 店舗ID */
                store_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StockChange"][];
                };
            };
            /** @description バリデーションエラー */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 認証エラー */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description 指定された在庫情報が存在しない */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
