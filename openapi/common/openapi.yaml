openapi: 3.0.3
info:
  title: スマレジ・プラットフォームAPI 共通仕様
  description: |
    スマレジ・プラットフォームAPIの共通部分の仕様についてをまとめたものです。
    スマレジ・プラットフォームAPIを利用する事で、仕様の範囲内で外部システムから、スマレジ・POSをはじめ、スマレジ・ウェイター、スマレジ・タイムカード、各プロダクトのデータにアクセスすることができます。
    ※各プロダクトのAPI機能詳細については、各仕様書をご参照ください。
    ※各プロダクトの仕様変更に伴い、APIの仕様が変更される場合があります。
  version: 1.0.0
  contact:
    name: スマレジサポート
    url: https://www.smaregi.jp/support/

servers:
  - url: https://id.smaregi.dev
    description: サンドボックス環境（認証用）
  - url: https://api.smaregi.dev
    description: サンドボックス環境（API用）
  - url: https://id.smaregi.jp
    description: 本番環境（認証用）
  - url: https://api.smaregi.jp
    description: 本番環境（API用）

paths: {}

components:
  schemas:
    Error:
      $ref: './schemas/common/Error.yaml'
      
    AccessTokenResponse:
      type: object
      description: アクセストークン発行レスポンス
      properties:
        scope:
          type: string
          description: アクセストークンで有効なスコープリスト
          example: "pos.products:read pos.products:write"
        token_type:
          type: string
          description: トークンタイプ
          example: "Bearer"
        expires_in:
          type: integer
          description: アクセストークンの有効期間(秒)
          example: 3600
        access_token:
          type: string
          description: アクセストークン
          example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          description: リフレッシュトークン。スコープにoffline_accessを指定した時のみ含まれる。
          example: "def50200d0b6..."
        id_token:
          type: string
          description: IDトークン。スコープにopenidを指定した時のみ含まれる。
          example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
      required:
        - token_type
        - expires_in
        - access_token
        - scope
        
    UserInfo:
      type: object
      description: ユーザー情報
      properties:
        sub:
          type: string
          description: 契約またはユーザーの識別子
          example: "smaregi:abc123"
        contract:
          type: object
          description: 契約情報
          properties:
            id:
              type: string
              description: 契約ID
              example: "smaregi"
            user_id:
              type: string
              description: 契約ID内においてのユーザー識別子
              example: "user_123456"
            is_owner:
              type: boolean
              description: ユーザーが契約のオーナーであるか
              example: true
        name:
          type: string
          description: ログインユーザーのアカウントに登録されている表示用フルネーム
          example: "スマレジ 太郎"
        email:
          type: string
          description: ログインユーザーのアカウントに登録されているメールアドレス
          example: "taro@example.com"
        email_verified:
          type: boolean
          description: メールアドレスが検証済みか
          example: true
      required:
        - sub
        - contract
        
    WebhookBase:
      $ref: './schemas/webhook/WebhookBase.yaml'
      
    AppSubscriptionWebhook:
      $ref: './schemas/webhook/AppSubscriptionWebhook.yaml'

  securitySchemes:
    AppAccessToken:
      type: oauth2
      description: アプリアクセストークン。アプリとしてアプリユーザーのデータにAPIアクセスする際に使用します。
      flows:
        clientCredentials:
          tokenUrl: https://id.smaregi.dev/app/{contractId}/token
          scopes:
            pos.products:read: 商品/部門の参照ができます。
            pos.products:write: 商品/部門の更新ができます。
            pos.customers:read: 会員/ポイントの参照ができます。
            pos.customers:write: 会員/ポイントの更新ができます。
            pos.stock:read: 在庫の参照ができます。
            pos.stock:write: 在庫の更新ができます。
            pos.stock-changes:read: 在庫変動履歴の参照ができます。
            pos.transactions:read: 取引/予算/精算/日次締め情報の参照ができます。
            pos.transactions:write: 取引/予算/精算/日次締め情報の更新ができます。
            pos.suppliers:read: 仕入先の参照ができます。
            pos.suppliers:write: 仕入先の更新ができます。
            pos.stores:read: 店舗の参照ができます。
            pos.stores:write: 店舗の更新ができます。
            pos.staffs:read: スタッフの参照ができます。
            pos.staffs:write: スタッフの更新ができます。
            pos.losses:read: ロスの参照ができます。
            pos.losses:write: ロスの更新ができます。
            pos.orders:read: 発注/入荷/出荷の参照ができます。
            pos.orders:write: 発注/入荷/出荷の更新ができます。
            pos.transfers:read: 店間移動(入出庫)の参照ができます。
            pos.transfers:write: 店間移動(入出庫)の更新ができます。
            pos.stocktaking:read: 棚卸の参照ができます。
            common.contracts:read: 契約情報の参照ができます。
            common.taxes:read: 税率情報の参照ができます。
            common.currencies:read: 通貨情報の参照ができます。
            common.shop:read: 店舗情報の参照ができます。
            openid: OAuthログイン認証の基本スコープ、ユーザー識別子の取得
            profile: ユーザーのプロファイル情報の取得
            email: ユーザーのメールアドレスの取得
            offline_access: リフレッシュトークンの取得
            
    UserAccessToken:
      type: oauth2
      description: |
        ユーザーアクセストークン。
        ユーザーの認可を得て、そのユーザーの権限でAPIアクセスする際に使用します。
      flows:
        authorizationCode:
          authorizationUrl: https://id.smaregi.dev/authorize
          tokenUrl: https://id.smaregi.dev/authorize/token
          refreshUrl: https://id.smaregi.dev/authorize/token
          scopes:
            pos.products:read: 商品/部門の参照ができます。
            pos.products:write: 商品/部門の更新ができます。
            pos.customers:read: 会員/ポイントの参照ができます。
            pos.customers:write: 会員/ポイントの更新ができます。
            pos.stock:read: 在庫の参照ができます。
            pos.stock:write: 在庫の更新ができます。
            pos.stock-changes:read: 在庫変動履歴の参照ができます。
            pos.transactions:read: 取引/予算/精算/日次締め情報の参照ができます。
            pos.transactions:write: 取引/予算/精算/日次締め情報の更新ができます。
            pos.suppliers:read: 仕入先の参照ができます。
            pos.suppliers:write: 仕入先の更新ができます。
            pos.stores:read: 店舗の参照ができます。
            pos.stores:write: 店舗の更新ができます。
            pos.staffs:read: スタッフの参照ができます。
            pos.staffs:write: スタッフの更新ができます。
            pos.losses:read: ロスの参照ができます。
            pos.losses:write: ロスの更新ができます。
            pos.orders:read: 発注/入荷/出荷の参照ができます。
            pos.orders:write: 発注/入荷/出荷の更新ができます。
            pos.transfers:read: 店間移動(入出庫)の参照ができます。
            pos.transfers:write: 店間移動(入出庫)の更新ができます。
            pos.stocktaking:read: 棚卸の参照ができます。
            common.contracts:read: 契約情報の参照ができます。
            common.taxes:read: 税率情報の参照ができます。
            common.currencies:read: 通貨情報の参照ができます。
            common.shop:read: 店舗情報の参照ができます。
            openid: OAuthログイン認証の基本スコープ、ユーザー識別子の取得
            profile: ユーザーのプロファイル情報の取得
            email: ユーザーのメールアドレスの取得
            offline_access: リフレッシュトークンの取得
